echo ${(@s:/:)/home/tony}
curpwd="/home/tony"
echo ${(@j:/:M)${(@s:/:)curpwd}|\

echo ${(@s:/:)curpwd}
curpwd=/home/tony/repos
echo ${(@j:/:M)${(@s:/:)curpwd}}
echo ${(@j:/:)${(@s:/:)curpwd}}
echo ${(@j:/:)${(@s:/:)curpwd}##.#?}
echo ${(@j:/:)${(@s:/:)curpwd}##./}
echo ${(@j:/:)${(@s:/:)curpwd}##.home}
echo ${(@j:/:)${(@s:/:)curpwd}##home}
echo $(prompt-pwd)
echo ${PWD/#$HOME/~}
echo $HO<E
echo $HOME
\
\
\

echo ${PWD/$HOME/~}
echo ${PWD/${HOME}/~}
echo ${PWD}
echo ${PWD/\/home\/tony/~}
curpwd
echo curpwd
echo $curpwd
echo ${curpwd/\/home\/tony/~}
echo ${curpwd/PWD/~}
echo ${curpwd/$PWD/~}
echo "${curpwd/$PWD/~}"
echo "${PWD/\/home\/tony/~}"
echo "${PWD/#$HOME/~}"
source .zshrc
prompt-pwd
PROMPT='%F{4}[$(prompt-pwd)]%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
echo PROMPT
echo $PROMPT
$PROMPT='%F{4}[$(prompt-pwd)]%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
PROMPT='%F{4}$(prompt-pwd)%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
PS1='%F{4}$(prompt-pwd)%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
echo PS1
echo $PS1
$PS1='%F{4}$(prompt-pwd)%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
export PS1='%F{4}$(prompt-pwd)%f%(!. %B%F{1}#%f%b.) %B%F{1}>%F{3}>%F{2}>%f%b'
export PS1='[]'
hostnamectl set-hostname lotus
hostnamectl
sdf
curl -sfL git.io/antibody | sh -s - -b /usr/local/bin
ls -la /usr/local/bin
wget git.io/antibody
rm %F*
rm %f%b
sh -s antibody -b /usr/local/bin
sh -s -c antibody -b /usr/local/bin
vim antibody
chmod u+x antibody
./antibody
antibody
man sh
rm antibody
curl -sfL git.io/antibody
man curl
sudo apt install ca-certificates
cd /etc/pki/tls/certs/
cd /etc/pki/tls/
cd /etc/pki
cd ../ssl
cd ../pki
mkdir tls
sudo mkdir tls
cd tls
sudo mkdir certs
cd ssl
cd certs
sudo cp ca-certificates.crt /etc/pki/tls/certs/ca-bundle.crt
echo $CURL_CA_BUNDLE
which curl
sudo apt install --reinstall ca-certificates
curl -v -sfL git.io/antibody
sudo curl -sfL git.io/antibody | sh -s -b /usr/local/bin
sudo curl -sfL git.io/antibody | sh -s - -b /usr/local/bin
sudo curl -sfL git.io/antibody | sudo sh -s - -b /usr/local/bin
ls /usr/local/bin
antibody bundle < ~/.zsh_plugins.txt > ~/.zsh_plugins.sh
cat- v
cat -v
vim .zsh_plugins.sh
history-substring-search-up
bindkey '^[[A' history-substring-search-up
bindkey -l
bindkey -M emacs
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^[[A' history-substring-search-up
echo $terminfo[kcuu1]
echo "$terminfo[kcuu1]"
bindkey "$terminfo[kcuu1]" history-substring-search-up
mv config config_new
mv config_backup config
sudo apt install dmenu
xinput list | grep touchpad
cd debian
git clone https://github.com/polybar/polybar.git
cd polybar/
sudo apt install alsa-lib
sudo apt search alsa
sudo apt install libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev i3-wm libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev
sudo apt install libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev
rm -rf polybar
git clone --recursive https://github.com/polybar/polybar
mkdir build && cd build
make -j$(nproc)
polybar
polybar bar
mkdir .fonts
cd .fonts
mv Fira ../.fonts/
mv Fira\ Code\ Bold\ Nerd\ Font\ Complete\ Mono.ttf ../.fonts/
cd ../.fonts
fc-match -v
fc-match -v Fira\ Code\ Bold\ Nerd\ Font\ Complete\ Mono.ttf 
fc-list
fc-list | grep Fira
fc-match Fira
fc-match fira
man fc-match
fc-query Fira\ Code\ Bold\ Nerd\ Font\ Complete\ Mono.ttf 
vim kitty.conf 
kitty + list-fonts | grep Fira
kitty
chsh
wal -f dark/gruvbox.json
source ~/.zsh_plugins.sh
cd ../polybar
rm 1
polybar bar1 &
rm .config.swp
rm google-chrome-stable_current_amd64.deb
rm -rf debian
rm polybar_3.4.3-2.debian.tar.xz
cd i3-gaps
dpkg -l | grep i3
dpkg -l | grep "^i3$"
dpkg -l | grep "^i3"
dpkg -l | grep "^i3wm"
dpkg -l | grep "i3wm"
dpkg -l | grep "i3-wm"
sudo apt remove i3-wm
../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
mke
sudo make install
unzip exa-linux-x86_64-0.9.0.zip
cd exa
./exa-linux-x86_64
mv exa-linux-x86_64 ~/.local/bin/exa
man exa
exa --git
exa --long --git
rm exa-linux-x86_64-0.9.0.zip
ln -s ~/.config/tmux/tmux.conf ~/.tmux.conf
sudo apt install cmake pkg-config git libao-dev libasound2-dev libavcodec-dev libavformat-dev libbluetooth-dev libenet-dev libgtk2.0-dev liblzo2-dev libminiupnpc-dev libopenal-dev libpulse-dev libreadline-dev libsfml-dev libsoil-dev libsoundtouch-dev libswscale-dev libusb-1.0-0-dev libwxbase3.0-dev libwxgtk3.0-dev libxext-dev libxrandr-dev portaudio19-dev zlib1g-dev libudev-dev libevdev-dev "libpolarssl-dev|libmbedtls-dev" libcurl4-openssl-dev libegl1-mesa-dev libpng-dev qtbase5-private-dev
sudo apt search libpolar
sudo apt search polar
sudo apt search embdtels
sudo apt search mbedtls
sudo apt install cmake pkg-config git libao-dev libasound2-dev libavcodec-dev libavformat-dev libbluetooth-dev libenet-dev libgtk2.0-dev liblzo2-dev libminiupnpc-dev libopenal-dev libpulse-dev libreadline-dev libsfml-dev libsoil-dev libsoundtouch-dev libswscale-dev libusb-1.0-0-dev libwxbase3.0-dev libwxgtk3.0-dev libxext-dev libxrandr-dev portaudio19-dev zlib1g-dev libudev-dev libevdev-dev libmbedtls-dev libcurl4-openssl-dev libegl1-mesa-dev libpng-dev qtbase5-private-dev
sudo apt search wxgtk
sudo apt install cmake pkg-config git libao-dev libasound2-dev libavcodec-dev libavformat-dev libbluetooth-dev libenet-dev libgtk2.0-dev liblzo2-dev libminiupnpc-dev libopenal-dev libpulse-dev libreadline-dev libsfml-dev libsoil-dev libsoundtouch-dev libswscale-dev libusb-1.0-0-dev libwxbase3.0-dev libxext-dev libxrandr-dev portaudio19-dev zlib1g-dev libudev-dev libevdev-dev libmbedtls-dev libcurl4-openssl-dev libegl1-mesa-dev libpng-dev qtbase5-private-dev
sh -c "$(curl -Ls https://github.com/FasterMelee/FasterMelee-installer/raw/master/setup)"\

sudo apt search xinerma
sudo apt search xinerama
sudo apt install libxinerama-dev
sudo apt search Xxf86vm
sudo apt install libxxf86vm-dev
sudo apt search wxwidgets
sudo apt install wx3.0-headers
sh -c "$(curl -Ls https://github.com/FasterMelee/FasterMelee-installer/raw/master/setup)"
cd .config
mv FasterMelee-5.9 ~
mv launch-fm ~/
exa
exa -l
exa -l --git
setsid compton
mv * ~/Documents/
cp -r * ~/Documents
cd Dolphin
cd Dolphin-Games
cd textbooks
cd Documents
~/launch-fm &
~/launch-fm
sudo apt install i3-lock
sudo apt install i3lock
sudo apt uninstall i3lock
sudo apt remove i3lock
[200~sudo apt install pkg-config libpam0g-dev libcairo2-dev libfontconfig1-dev libxcb-composite0-dev libev-dev libx11-xcb-dev libxcb-xkb-dev libxcb-xinerama0-dev libxcb-randr0-dev libxcb-image0-dev libxcb-util-dev libxcb-xrm-dev libxkbcommon-dev libxkbcommon-x11-dev libjpeg-dev
sudo apt install pkg-config libpam0g-dev libcairo2-dev libfontconfig1-dev libxcb-composite0-dev libev-dev libx11-xcb-dev libxcb-xkb-dev libxcb-xinerama0-dev libxcb-randr0-dev libxcb-image0-dev libxcb-util-dev libxcb-xrm-dev libxkbcommon-dev libxkbcommon-x11-dev libjpeg-dev
git clone https://github.com/Raymo111/i3lock-color.git
cd i3lock-color
chmod u+x build.sh
./build.sh
ls -l
chmod u+x install-i3lock-color.sh
./install-i3lock-color.sh
i3lock
i3lock -B
i3lock -B 80
i3lock --blur 5
i3lock -c ff000088
i3lock -c 00000088
i3lock -c 00000095
i3lock -c 00000060
man i3lock
mkdir scripts
i3lock -c #00000060
chmod u+x lock
mv nvim ~/Downloads
mv nvim nvim.appimage
./nvim.appimage
echo $XDG_DATA_HOME
echo "${XDG_DATA_HOME:-$HOME/.local/share}\
"
cd .local/share
sudo apt search ba
sudo apt search bat
sudo apt install bat
sudo apt install ./bat_0.15.4_amd64.deb
cd FasterMelee-5.9
bat version-5.9.txt
sudo apt search lxappearance
sudo apt install lxappearance
pgrep launch
ps aux | grep launch
rofi -show window
rofi -show drun
rofi -show drun --show-icons
vim rofi-example.config
vim rofi.conf
mv rofi.conf rofi.rasi
man rofi
mv rofi.rasi config.rasi
man rofi-theme
cd ~/.config/rofi
bat config
rofi dump-config
rofi -dump-config
bat rofi-example.config
rm rofi-example.config
rofi --vesion
rofi --version
rofi -v
rofi
nvim config
polybar bar1
nvim ~/.config/i3/config
ls /opt
fzf --insall
fzf --help
dpkg -L fzf
dpkg -L fzf | grep install
rm .bash_history
rm .bash_logout
sudo apt search fd
sudo apt install fd-find
man fzf
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
mv .fzf Downloads
mv .fzf
mv fzf ~/.local/bin/
ls -la | grep fzf
rm .fzf.bash
vim .fzf.zsh
vim .zsh
echo $fzf_default_completion
ls ~/Downloads/.fzf/
ls ~/Downloads/.fzf/shell/
ls ~/Downloads/.fzf/bin
fzf --preview
fzf --preview 'bat --color=always --line-range :500 {}'
fd --type f
export $FZF_DEFAULT_COMMND=
export FZF_DEFAULT_COMMND=
unset FZF_DEFAULT_COMMND=
unset FZF_DEFAULT_COMMND
unset -v FZF_DEFAULT_COMMND
echo -v $FZF_DEFAULT_COMMAND
zathura
cd ~/Documents/textbooks
cd Math
cd ~/.config/zathura
vim zathurarc
ip route
rg cherry ~/.config/wal/colorschemes
rg dots ~/.config/wal/colorschemes
rg sunset ~/.config/wal/colorschemes
vim cherry.json
vim kitty/kitty.conf
cd Documents/textbooks/Math
zathura AlgebraArtin.pdf
ssh admin@192.168.254.17
ssh 192.168.254.17
ls -la --tree
bat ~/.zshrc | grep exa
bat kitty/kitty.conf
cat kitty/kitty.conf
ls -la | grep tmux
git clone https://github.com/tmux-plugins/tpm ~/Downloads/.tmux/plugins/tpm\

vim known_hosts
scp -P 22022 sirius:~/thesis/thesis/classes.png .
feh classes.png
scp -P 22022 sirius:~/thesis/thesis/classes_og.png .
feh classes_og.png
systemctl suspedn
mkdir repos
cd /medai
fdisk
fdisk --help
bat ~/.config/kitty/kitty.conf
bat --theme=onedark ~/.config/kitty/kitty.conf
bat --theme=default ~/.config/kitty/kitty.conf
bat --theme=GitHub ~/.config/kitty/kitty.conf
cd media
fd -type d "Seagate"
fd --type d "Seagate"
rm -rf repos
mv repos ~
cp -r repos ~
cd ~/repos/pplspark
chmod u+x Miniconda3-latest-Linux-x86_64.sh
cd miniconda3
./cona
./conda
cp conda ~/.local/bin/
conda create
conda create pplax
conda 
conda create --name pplax
conda info --envs
conda init
conda init zsh
conda install jax
pip install jax jaxlib
python3 -i samplers
conda install tqdm
python3 setup.py
python setup.py install
rm pplspark.egg-info
rm -rf pplspark.egg-info
mv pplspark pplax
vim pplax
bat --generate-config-file
sudo add-apt-repository ppa:noobslab/themes
sudo add-apt-repository ppa:noobslab/icons
cd /etc/apt
vim sources.list
rm noobslab*
sudo rm noobslab*
sudo add-apt-repository ppa:fossfreedom/arc-gtk-theme-daily
sudo apt install arg-theme
sudo apt install arc-theme
fzf --ansi
find
rg * 
rg .
rg -f
rg -l *
rg -l * .
FZF_DEFAULT_COMMAND="fd"
mv tevin-trinh-umv7ib2nqlA-unsplash.jpg mountains_sunset.jpg
mv mountains_sunset.jpg ~/Pictures/wallpapers
mv wolfgang-hasselmann-PFXaUJvQy64-unsplash.jpg mountainside.jpg
mv mountainside.jpg ~/Pictures/wallpapers
ls ~ | grep conda
ls -la ~ | grep conda
sudo service network-manager restart
rfkill list
sudo systemctl enable wifi-resume.service
nmcli radio wifi off
nmcli radio wifi on
iwlist
iwlist wlp4s0
iwlist scanning wlp4s0
iwlist wlp4s0 scanning
iwlist wlp2s0 scanning
sudo ifconfig wlan0 up
sudo ip link set wlan0 up
journalctl -xe | grep tail
journalctl -xe
sudo ip link set wlp2s0 up
pgrep dhcpcd
killall dhcpc
killall dhcpcd
systemctl list-units
nm-tool
sudo lspci -nn
sudo lshw -C network
lshw -C network
sudo iwlist scan
dmesg | grep -iC 5 "wireless"
dmesg | grep -i "wireless"
sudo iwconfig
cat ~/.Xresources
cd ~/.wal
cd templates
cd rofi
vim config.rasi
vim colors
cat colors.Xresources
cat colors-kitty.conf
bat colors.sh
bat --theme="base16" colors.sh
echo "hello" | cut 2-3
cut --help
echo "hello" | cut - 2-3
echo "hello" | cut 2-3 -
echo "hello" | cut -c 2-3 -
echo "hello" | cut -c 1-2 -
echo "hello" | tr "[:lower:]" "[:upper:]"
a = "$(echo "hello" | tr "[:lower:]" "[:upper:]")\
"
a="$(echo "hello" | tr "[:lower:]" "[:upper:]")\
"
echo a
printf "%d" "#FF"
printf "%d" 0xFF
printf "%d" 0XFF
echo "ibase=16; FF" | bc
man bc
a=$(echo "ibase=16; FF" | bc)
(($a * $a))
echo (($a * $a))
echo "(($a * $a))"
echo "$(($a * $a))"
echo $(($a * $a))
echo [ 5 -gt 3 ]
echo "$([ 5 -gt 3 ])"
echo "[ 5 -gt 3 ]"
echo $([ 5 -gt 3 ])
print [ 5 -gt 3]
print [ 5 -gt 3 ]
print "[ 5 -gt 3 ]"
print "$([ 5 -gt 3 ])"
echo $?
$(echo "ibase=16; FF" | bc)
echo $(echo "ibase=16; FF" | bc)
((5 < 4))
echo "$((5 < 4)))\
"
echo "$((5 < 4)))"
echo "$((5 < 4))"
light_or_dark "#FFFFFF"
light_or_dark "#000000"
ls > /dev/null && echo "hello"
ls > /dev/null && echo "hello" || echo "goodbye"
safd > /dev/null && echo "hello" || echo "goodbye"
echo $0
cat colors
sed '2q' colors
head -2 colors | tail -1
echo "(echo "hello")"
echo (echo "hello")
light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && "github" || "OneHalfDar"
light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && "github" || "OneHalfDark"
echo $(light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && "github" || "OneHalfDark")
echo $(light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && echo github || echo OneHalfDark)
light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && echo github || echo OneHalfDark
"$(light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && echo github || echo OneHalfDark)"
echo "$(light_or_dark "$(head -2 ~/.cache/wal/colors | tail -1)" && echo github || echo OneHalfDark)"
rm ~/.config/bat/config
bat ~/.cache/wal/colors
git commit -m "renaming to pplax, and also refactoring the random number generation to use jax.random. This lets us jit the step function, and substantially speeds up the implementation."
git branch multinomial
git sttus
git checkout  71049d9ee1489348160a6bf678f2a3cfe4ae0699
git checkout HED
git checkout HEAD
git checkout  71049d9ee1489348160a6bf678f2a3cfe4ae06992c6d6b8c6eff30a86479a7d1db6462c7c997804a
git checkout 2c6d6b8c6eff30a86479a7d1db6462c7c997804a
cd pplspark
bat nuts | grep leapfrog
bat nuts.py | grep leapfrog
bat nuts.py | grep -C8 leapfrog
git checkout -f master
python3 ../tests/test_nuts.py
pip3 --version
cat /usr/bin | grep pip
ls /usr/bin | grep pip
/usr/bin/pip3 install ipython
/usr/bin/pip3 
/usr/bin/pip3 uninstall ipython
git diff kernels/nuts.py
git commit -m "refactoring nuts to remove a lot of the control flow. This allows for us to jit build_tree, and also significantly reduces the loc of the nuts class."
git checkout multinomial
conda activate pplx
5A
python3 samplers.py -m pdf
python3 samplers.py -m pdb
python3 -m pdb samplers.py
sls
./lock
sudo apt sudo apt upgrade --fix-missing
sudo apt upgrade --fix-missing
dpkg --configure -a
sudo apt-get purge 'nvidia*'
sudo add-apt-repository ppa:graphics-drivers/ppa
dpkg -l | grep 'nvidia'
cd /etc/grub
sudo nvim grub
sudo vim grub
cd apt
cd sources.list.d
vim graphics-drivers-ubuntu-ppa-focal.list
cd /var/lib/apt/lists
ls | grep graphic
cat ppa.launchpad.net_graphics-drivers_ppa_ubuntu_dists_focal_InRelease
ls | grep graphics
cat ppa.launchpad.net_graphics-drivers_ppa_ubuntu_dists_focal_main_binary-i386_Packages
cat ppa.launchpad.net_graphics-drivers_ppa_ubuntu_dists_focal_main_binary-i386_Packages | grep -i "package"
cd /etc/X11/
lspci 
sudo apt install lightdm
sudo ubuntu-drivers autoinstall
cd scrips
cp lock ~/.local/bin
sudo dpkg -l | grep noveau
cat /etc/X11/xorg.conf
grep 'nvidia' /etc/modprobe.d/*
grep 'nvidia' /lib/modprobe.d/*
sudo service lightdm restart
ls -la | grep Xorg
sudo apt install nvidia-prime
man prime-select
prime-select
cat Xorg.0.log | grep -i "nvidia" | less
man startx
man xinit
startx
cat /etc/X11/Xorg.0.log | grep -i "nvidia"
cat /var/log/Xorg.0.log | grep -i "EE"
cat /var/log/Xorg.0.log | grep -i "(EE)"
cat rc.conf
sudo vim /etc/X11/xorg.conf
lspci | grep "VGA"
lspci
cd X11
mv xorg.conf xorg.conf.backup
sudo mv xorg.conf xorg.conf.backup
ls -laht | head 1
ls -laht | head 
ls -lah | heaad 1
ls -lah | head 1
ls -lah | head -1
wal -f monokai.json
ssh-keygen -t rsa -b 2048
ssh-copy-id chenauy@sirius.bc.edu
man ssh-copy-id
ssh-copy-id -p 22022 chenauy@sirius.bc.edu
rm -rf model_fitter
ls tests
git rev-parse --show-toplevel\

git rev-parse --show-toplevel 2>/dev/null
ls | grep zoom
sudo apt install ./zoom_amd64.deb
pactl -- set-sink-volume 0 +5%
pactl set-sink-mute 0
pactl set-sink-mute 0 0
pactl set-sink-mute 1 0
xinput --set-prop 14 287 1
man modprobe
modprobe
modprobe -h
lsmod | grep brcmfmac
lsmod | head -1
lsmod | head -2
man lsmod
cd todolist
ls ../
ls ../ --tree
vim ../todo.adoc
ls | grep Word
scp -P 22022 WordNet-3.0.tar.gz sirius:~/thesis/data
ip link
ping 192.168.254.17
ssh -X -p 22022 sirius
nmcli con
nmcli con mindy
nmcli con up mindy
bat ~/.config/i3/config | xinput
bat ~/.config/i3/config | grep xinput
openvpn --auth-user-pass
openvpn --configure
man openvpn
openvpn -h
openvpn
bat /lib/modprobe.d/nvidia-graphics-drivers.conf
bat .xsession-errors
cd /etc/var
cd /var/log
vim Xorg.0.log
cat Xorg.0.log | grep -i "nvidia"
head -1 Xorg.0.log
tail -1 Xorg.0.log
ubuntu-drivers devices
cat Xorg.1.log | grep -i "nvidia"
cat Xorg.0.log | grep -i "ves"
cat Xorg.0.log | grep -i "vesa"
dmesg | grep -i "nvidia"
cd /sbin
sudo vim prime-offload
cat /var/log/gpu-manager.log
glxinfo
cd xorg.conf.d
vim 10-amdgpu.conf
vim 11-nvidia-prime.conf 
cd Xsession.d
cat /var/log/Xorg.0.log | grep -i "screen"
cd /usr/share/X11/xorg.conf.d
cat /var/log/Xorg.0.log | grep -i "nvidia"
vim 10-nvidia.conf
vim 11-nvidia-prime.conf
sudo vim 11-nvidia-prime.conf
cat ~/.xsession-errors | grep -i "i3"
cat ~/.xsession-errors | less
pactl -- st-sink-volume 0 +5%
pactl
pactl list | grep "sink" -l 6
pactl list | grep -l 6 "sink"
pactl list | grep -n 6 "sink"
pactl list | grep "sink"
pactl list | grep -L 5"sink"
pactl list | grep -L 5 "sink"
man grep
pactl list | grep -C 5 "sink"
man pactl
pactl set-sink-volume 0 +5%
pactl set-sink-volume 1 +5%
sudo apt search xbacklight
sudo apt install xbacklight
xbacklight -dec 10
sudo lshw -c display
prime-select query
sudo prime-select intel
cd /lib/modprobe.d/
vim blacklist-nvidia.conf
cd /etc/modprobe.d
pactl list
pactl set-sink-volume 1 -5%
pactl set-sink-volume 0 -5%
cd ~/.cache
cd .tmux
cd plugins
cd tpm
cd ~/.cache/wal
vim colors-oomox
wal -f colorscheme1.json
wal -f summercamp.json
wal -f sweet.json
wal -f manta.json
wal -f lovelace.json
rm colorscheme1.json
mv ben-maguire-FTYgqLeseI4-unsplash.jpg pink_ocean.jpg
mv pink_ocean.jpg ~/Pictures/wallpapers
ls ~/Pictures/wallpapers
feh ~/Pictures/wallpapers/pink_ocean.jpg
cat ~/.config/wal/colorschemes/dark/amarena.json
feh hunter-newton-Yez_CWYPSqg-unsplash.jpg
rm hunter-newton-Yez_CWYPSqg-unsplash.jpg
mv henry-be-IicyiaPYGGI-unsplash.jpg ~/Pictures/wallpapers/flower_field.jpg
rm ~/Pictures/wallpapers/pink_ocean.jpg
mv akemy-mory-C0Ej7k3h4mU-unsplash.jpg ~/Pictures/wallpapers/red_flower.jpg
wal -f amarena.json
feh roman-nguyen-a2f1GA1w00E-unsplash.jpg
mv roman-nguyen-a2f1GA1w00E-unsplash.jpg ~/Pictures/wallpapers/snowy_mountains.jpg
wal -f ephemeral.json
vim ~/.config/wal/colorschemes/light/sky.json
feh kai-oberhauser-OAXYG6NbUuc-unsplash.jpg
rm kai-oberhauser-OAXYG6NbUuc-unsplash.jpg
feh allie-Ufgnx5RHxp8-unsplash.jpg
mv allie-Ufgnx5RHxp8-unsplash.jpg ~/Pictures/wallpapers/macarons.jpg
cat ~/.config/nvim/colors/wal.vim
vim sky.json
vim ftplugin/asciidoc.vim
git add ftplugin/asciidoc.vim
git add lua/todo.lua
vim lua/todo.lua
git reset --soft lua/todo.lua
git restore --staged lua/todo.lua
git commit -m "using v:lua to call the lua functions, and some other minor updates"
rm -rf blog
vim 2020-04-13-Autodiff.md
vim 2019-12-18-Kalman.md
vim pplax/model.py
rg "flowers1.jpg" ~/.config/wal/colorschemes
rg "fuji_realistic" ~/.config/wal/colorschemes
vim summercamp.json
ls --tree
ls --tree --gitignore
ls --tree --git-ignore
mkdir nonparametric-factor-analysis
mv test.py test-utils.py
mv test-utils.py test_utils.py
xinput list | grep -i touchpad
xinput --set-prop 14 350 1
xinput list 14
xinput set-prop 14 323 1
xinput set-prop 14 322 1
cd .
git clone https://github.com/nvim-treesitter/nvim-treesitter.git
git clone https://github.com/kevjiang/ActionWords_Bayes.git
conda env create -f environment.yml creds
conda env create -f environment.yml --namecreds
conda env create -f environment.yml --name=creds
vim environment.yml
conda env create -f environment.yml
conda env create --name creds --clone base
conda create --name creds --clone base
echo /usr/share
ls /usr/share | grep -i "terminfo"
export TERMINFO=/usr/share/terminfo
conda install theano
conda install pymc3
python3 -i mainv3.py --pov=seller, --pred=pbuy
python3 -i mainv3.py --pov="seller", --pred=pbuy
conda config --set changeps1 false
hostnam
vim .condarc
python3 -i mainv3.py -h
conda install theano -C conda-forge
conda install -C conda-forge theano
conda --h
conda install -h
conda info
conda install -c conda-forge theano
python3 -i mainv3.py --pov seller --pred pbuy
tar -xzf Zotero-5.0.88_linux-x86_64.tar.bz2
man tar
tar -xjf Zotero-5.0.88_linux-x86_64.tar.bz2
cd Zotero_linux-x86_64
mv Zotero-5.0.88_linux-x86_64.tar.bz2 ~/.local/Zotero
cd ../.local/bin
rm Zotero
cd ../Downloads
mv Zotero_linux-x86_64 ../.local/Zotero
cd ../.local
ln -s zotero.desktop
ln -s zotero.desktop ~/.local/share/applications
cd mnt
cd dev
cp -r Zotero ~/Zotero
rm -rf Zotero
cp -TR Zotero ~/Zotero
cd ~/Zotero
cp Slippi_Online-x86_64.AppImage ~/.local/bin/slippi
conda env
pip3 install numpy
cd ../repos/nvim-treesitter
vim -u local_rc.vim
conda install --revision 0
conda env export > base.yml
conda env export > pplax.yml
conda env export > creds.yml
conda install anaconda-clean
anaconda-clean
ls -la | grep ana
rm -rf miniconda3
rm zoom_amd64.deb
feh kevin-zhang-dzFB8xeWg1M-unsplash.jpg
feh benjamin-voros-phIFdC6lA4E-unsplash.jpg
rm kevin-zhang-dzFB8xeWg1M-unsplash.jpg
echo $HOST
which conda
where conda
conda
ls | grep conda
rm conda
./Miniconda3-latest-Linux-x86_64.sh
sh Miniconda3-latest-Linux-x86_64.sh
conda config --set auto_activate_base false
conda env create -f pplax.yml
conda env create -f creds.yml
cd ~/repos/nonparametric-factor-analysis/p
conda install numpy
conda install scipy
python3 -i ibp_vi.py
cd ../repos/ActionWords_Bayes
OA
echo $TERMINFO
python3 -m pb test_utils.py
cd ~/repos/nonparametric-factor-analysis/
cd ../nvim-treesitter
ls | grep nvim
mv nvim.appimage ~/.local/bin/nvim
nvim -u local_rc.vim movement.lua
xprop
xsel
sudo apt search xsel
sudo apt install xsel
vim ~/repos/ActionWords_Bayes/notes.adoc
vim test_utils.py
pip3 install scipy
conda install unittest
pip3 install unittest
python3 -i test_vi.py
python3 test_vi.py
cd ~/repos/nvim-treesitter
vim nvim-treesitter.vim
cd ../lua/
vim local_rc.vim
vim -u local_rc.vim movement.lua
vim movement.lua
sudo apt install r-base
cat ~/.ssh
xclip
cat ~/.ssh/id_rsa.pub
git commit -m "syncing files due to new installation of linux"
sudo apt install rubber
git commit -m "initial work on reviewer comments - just minor grammatical issues for now"
sudo apt --fix-broken install
sudo apt install libclang-dev
sudo dpkg -i rstudio-1.3.1056-amd64.deb
vim zettl.lua
mv zettl.lua wiki.lua
python3 -i kalman.py
rm kalman.py
python3 -i mainv3.py --pov buyer --pred ue
git pull origin msater
git branch tony
git checkout tony
git diff HEAD -- mainv3.py
git diff HEAD -- mainv3.py > tmp
mv tmp mainv3_diff
git add mainv3.py
git commit -m "refactoring mainv3"
mv mainv3_diff mainv3_diff.txt
rm mainv3_diff.txt
python3 -i mainv3.py --pov buyer --pred pbuy
vim mainv4.py
vim ibp_vi.py
vim ibp_slice.py
cd /opt
sudo cp zotero.desktop /usr/share/applications
./zotero.desktop &
bat zotero.desktop
python3 -i mainv4.py
rm ibp_slice.py
python3 test_gibbs.py
cd ../implementations
cd hidden_causes
cd ../../nonparametric-factor-analysis
conda env create
conda create --name ibp --clone base
conda install cython
./ibp_gibbs.cpython-37m-x86_64-linux-gnu.so
mv ibp_gibbs.py ibp_gibbs_slow.py
vim ibp_gibbs.pyx
cd repos/nvim-treesitter
cd queries
mv ibp_gibbs.pyx ibp_gibbs_collapsed.pyx
mv ibp_gibbs_uncollapsed.py ibp_gibbs.py
rm ibp_gibbs.cpython-37m-x86_64-linux-gnu.so
python3 -i mainv3.py
rm mainv4.py
rm ibp_gibbs.c
python3 -i test
cd ../nonparametric-factor-analysis
vim ibp_gibbs.py
sudo modprobe br
python3 test_utils.py -m pdb
python3 test_utils.py -m pdb -m
python3 -m pdb test_utils.py
python3 -i ibp_gibbs.py
python3 -i ibp_gibbs_semicollapsed.py
git commit -m "adding new models"
vim likelihood_ks_model.py
python3 -i likelihood_ks_model.py
python3 -i utilities_model.py
git add likelihood_ks_model.py
git add utilities_model.py
jupyterlab
conda install -c conda-forge jupyterlab
vim mainv3.py
sudo apt search libxml
sudo apt search libxml2
sudo apt install libxml2-dev
sudo apt install libssl-dev
sudo apt install biblatex
sudo apt search biblatex
sudo apt install texlive-bibtex-extra
sudo apt search bib
cd /usr/local/share/texmf
tlmgr update apa6
tlmgr init-usertree
sudo tlmgr update apa6
sudo apt search biber
sudo apt install biber
tlmgr info
sudo apt search apa
sudo apt search apa | grep "^a"
sudo apt search texliv
sudo apt install texlive-publishers
git diff HEAD -- paper.tex
lc
vim ibp_gibbs_semicollapsed.py
mkdir moral-disengagement
conda install ipython
conda install pandas
nmcli d show
git commit -m "starting work on per L1 analyses"
ls /mnt/tony
cd /mnt
ls /mnt
ls /media
cd d5500bdf-ebac-4ef1-97fa-3276b7178264
ls -la | grep gem
cd /media/tony/d5500bdf-ebac-4ef1-97fa-3276b7178264
cd 15123bkljb12
cd ../53215y251uy23s
sudo apt install vlc
conda install matplotlib
python3 -i modl
xinput list-props 14
xinput list-props 12
xinput set-prop 13 321 1
xinput set-prop 13 320 1
c share
applications
cd applications
ls /usr/share/applications
rm ~/.local/share/applications/zotero.desktop
ls -la ~/.local/share/applications
cp zotero.desktop /usr/share/applications
ls -la /usr/share/applications
desktop-file-validate zotero.desktop
./zotero.desktop
rofi -show run
zotero
./zotero > /dev/null 2>&1 &
mkdir Gradient-Reversal
cd Gradient-Reversal
vim gradient_reversal.py
conda deactivte
export HOST=lotus
cd ~/Zotero/storage
cd LX8AZCTK
zathura Lopes\ et\ al.\ -\ 2009\ -\ A\ Computational\ Model\ of\ Social-Learning\ Mechanism.pdf
nmcli d wifi
nmcli d wifi connect mindy
nmcli d 
systemctl
systemctl suspnd
sudo shutdown -c
cd non
vim ibp_continuous.py
python3 -i simulation.py
ls ../implementations
ls ../implementations/CRP
cp ../implementations/CRP/crp.py .
vim dp.py
python3 -i dp.py
sudo snap remove spotify
cd ~/.local/
cp zotero.desktop ~/.local/share/applications
cd ~/.local/share/applications
sudo update-desktop-database
cd ../../Zotero
sudo ln -s zotero.desktop ~/.local/share/applications
curl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add - \

[200~curl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add - 
sudo apt install spotify
sudo ln -s zotero.desktop /usr/share/applications
vim zotero.desktop
rm zotero.desktop
sudo rm zotero.desktop
man ln
sudo ln -s zotero.desktop /usr/share/applications/zotero.desktop
ls /usr/share/applications | grep zotero
vim /usr/share/applications/zotero.desktop
sudo rm /usr/share/applications/zotero.desktop
sudo ln -s ~/.local/Zotero/zotero.desktop /usr/share/applications/zotero.desktop
ls -la /usr/share/applications | grep zotero
update-desktop-database
man update-desktop-database
update-desktop-database -v
./zotero &
mv ibp_continuous.py ibp_graded.py
vim ibp_graded.py
ssh sirius
ssh -p 22022 chenauy@sirus.bc.edu
python3 -i test_utils.py
sudo apt search maim
sudo apt install maim
conda install seaborn
python3 -i ibp_graded.py
maim -s > true_factors.png
feh true_factors.png
maim -s > recovered_factors.png
python3 -i model.py
vim evaluate.py
A
python3 -i evaluate.py
cd repos/nonparametric-factor-analysis
ps aux | grep python
kill 266446
pgrep python3 -i 
pkill python3 -i 
cd Zotero
cd ~/.local/Zotero
./zotero-bin
cp zotero ~/.local/bin
./zotero
vim zotro
vim zotero
ls ~/.local/Zotero/
zotero &
sudo apt search libreoffic
sudo apt install libreoffice-writer
mkdir bayesian-workshop
vim probability.tex
vim utilities_model.py
mkdir states-traits
cd repos/states-traits
vim writeup.tex
rm probability*
nvim -u NONE
nvim -u NONE tmp.lua
vim kalman.py
nvim -u NORC tmp.lua
playerctl
cd /etc/gnome/
vim defaults.list
sudo vim defaults.list
sudo apt search libv8
sudo apt search libv
sudo apt search libnode
sudo apt install libnode-dev
vim mixture.py
conda install scikit-learn
python3 -i mixture.py
vim workshop.tex
rubber --clean
man rubber
rubber --clean workshop.tex
rm workshop.md
rm workshop.tex
vim -u NORC outline.tex
vim --startuptime
conda env create --name workshop --clone base
conda create --name workshop --clone base
conda install mpld3
conda install bokeh
maim -s > zif_simple_model_sims.png
maim -s > zif_simple_model_sims_vs_true.png
feh zif_simple_model_sims_vs_true.png
feh zif_simple_model_sims.png
rm feh_700458_000001_zif_simple_model_sims.png
sudo apt install playerctl
man playerctl
bat ~/.config/i3/config
zathura Workshop.pdf
mv Workshop.pdf ~/repos/bayesian-workshop
ls ~/repos/bayesian-workshop
rm mixture.py
maim -s > ../repos/bayesian-workshop/nuc_figure.png
cd ../repos/bayesian-workshop
maim -s > post_model_summary.png
ls ~/Downloads
mv ~/Downloads/aitkin_minus_clay_hist.png .
rm ~/Downloads/osfstorage-archive.zip
maim -s > nuc_example_2.png
echo hello
rm PaperColor.vim
rm onehalfdark.vim
rm onehalflight.vim
rm night-owl.vim
rm atom-dark-256.vim
rm papercolor.vim
rm gruvbox.vim
vim monokai.json
cd ~/repos/website/blog
vim 2019-04-20-ModelSelection.md
vim 2020-09-24-Inverse-RL.md
rm -rf nvim-treesitter
mkdir block-visual-preview
cd block-visual-preview
vim preview.lua
pgrep vim
kill 1863411
ps aux | grep vim
33  " TESTING BLOCK\
  1 " TESTING BLOCK
cd repos/vim
cd repos/block-visual-preview
vim preview.vim
cd ~/.config/tmux
vim tmux.conf
cat /etc/gnome/defaults.list
ls /etc
cd /etc/default
cd /usr/share/applications
cd states-traits
rm -rf states-traits
vim model.md
echo "hello friend hello" | awk '{print $3}'
vim .tmux.conf
mv abschgb.csv ~/repos/moral-disengagement
y
vim todo.lua
git commit -m "use literal strings and vim.cmd"
git add todo.lua
git commit -m "use lua patterns instead of vim regexes for some substitutes"
cd ../../todolist.nvim/
vim wiki.lua
cd /etc/
vim tmp.R
scp KDEF_and_AKDEF.zip sirius:~/identity-expression/data
scp KDEF_and_AKDEF.zip sirius:~/identity-expression/datals
scp sirius:~/identity-expression/probe/data/KDEF_and_AKDEF/KDEF/AF31/AF31V.JPG .
feh AF31V.JPG
rm AF31V.JPG
scp sirius:~/identity-expression/probe/data/KDEF_and_AKDEF/KDEF/BM01/BM01ANS.JPG .
feh BM01ANS.JPG
cd repos/bayesian-workshop/
conda activate workshop2.pdf
conda install rstan
pip install rstan
conda install pystan
jupyter --version
jupyter nbconvert --to-html probability.ipynb --no-input
echo $VIM
echo $MYVIMRC
mkdir after
mkdir after/syntax
mv syntax/markdown.vim after/syntax
vim /usr/share/vim/vim81/syntax/markdown.vim
rm asciidoc.vim
vim todolist.vim
scp resnet50_scratch_weight.pkl sirius:~/identity-expression/probe/models/pretrained/VGGFace2-pytorch/
scp -P 22022 resnet50_scratch_weight.pkl sirius:~/identity-expression/probe/models/pretrained/VGGFace2-pytorch/
cd repos/todolist.nvim
cd /usr/share
vim vim.vim
vi todo.md
vim syntax.vim
vim -c "syntax off" todo.md
mv after/syntax/markdown.vim syntax/
vi tmp.vim
vi tmp.md
vi tmp.md -c "syn keyword Identifier HELLO"
vim probability.html
rm tmp*
rm -i pragmods.pdf
man setxkbd
cat /etc/default/keyboard core
cat /etc/default/keyboard
man xkeycaps
sudo apt search xkbdmap
sudo apt search setxkbdmap
cd wal
cd colorschemes/dark
showkey7
showkey 
setxkbmap -query]
setxkbmap -print -verbose
[200~localectl list-x11-keymap-models
localectl list-x11-keymap-models
cd i3
showkey --scancodes
sudo showkey --scancodes
lsusb
evtest
man xinput
xinput list-props 19
xev
lsl
setxkbmap option
setxkbmap -option
setxkbmap -option caps:
localectl list-x11-keymap-layouts
xinput -query
localectl list-x11-keymap-options
ssh -p 22022 chenauy@sirius.bc.edu
hostname
vim outline.tex
vim ayu.json
vim ~/.config/tmux/tmux.conf
setxkbmap -option ctrl:nocaps
cd ~/.config/i3/
rm -rf block-visual-preview
cd nonparametric-factor-analysis
rm -rf Gradient-Reversal
cd Bayesian-Rescorla-Wagner
mv nonparametric-factor-analysis/ implementations/
cd .config/i3/
jupyter nbconvert --to html probability.ipynb --no-input
jupyter nbconvert --to html bayesian.ipynb --no-input
vim hierarchical_models.nb.html
vi -u NONE tmp.md
vi -u NORC tmp.md -c "syntax on | syntax keyword tmp DONE"
vi -u NONE tmp.md -c "syntax on | syntax keyword tmp DONE"
vi -u NONE tmp.py -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NONE tmp.c -c "syntax on | syntax keyword tmp DONE | syntax list tmp | q
vi -u NONE tmp.c -c "syntax on | syntax keyword tmp DONE | syntax list tmp | q!\
"
vi -u NONE tmp.c -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NONE tmp.adoc -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NONE tmp.md -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NORC tmp.md -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NORC tmp.adoc -c "syntax on | syntax keyword tmp DONE | syntax list tmp"
vi -u NORC tmp.adoc
vi -u NORC tmp.md
cd todolist.nvim
cd after
cd synta
rm -rf after
cd syntax
vim markdown.vim
git add syntax/markdown.vim
git commit -m "markdown syntax highlighting"
xdg-o
xdg-open probability.html
xdg-open bayesian.html
python3 -i pe_analyses.py
vim pe_analyses.py
bat ~/.config/wal/colorschemes/dark/amarena.json
vim ~/.config/wal/colorschemes/dark/amarena.json
cd repos/moral
cd -3
cd -2
pip install --reinstall matplotlib
pip3 install --reinstall matplotlib
pip3 install --force-reinstall matplotlib
pip3 install matplotlib
dtmux
cd Actions
vim preproc_fairness.py
python3 
conda create --name ml --clone base
mv preproc_fairness.py preproc_fairness.R
vim preproc_fairness.R
man Rscript
;s
conda activate m1
alsactl
vim fairness_sims.json
vim stefanonotes_20200410.py
cd ../ppalx
python3 setup.py build_ext --inplace
pip install -e pplax
conda update jax
conda list
pip install --upgrade jax
pip install --upgrade jaxlib
ipython -i nuts.py
git add hmc.py
git commit -m "use jax.random instead of np.random, allowing us to jit the step() function of the hmc kernel"
git add nuts.py
git commit -m "use multinomial sampling for hmc instead of slice sampling"
git push origin multinomial
git merge multinomial master
mv todo.adoc todo.md
vim simulation.py
python3 -i fairness_model.py
cd kernels
vim nuts.py
python3 -i nuts.py
git diff nuts.py
git commit -m "Add paragraph justifying lack of per language analyses"
cd ~/repos/
scp -P 22022 sirius:~/identity-expression/data/process_kdef.py .
vim process_kdef.py
git commit -m "Changing tables and minor revisions"
scp -P 22022 -r sirius:~/identity-expression/data/KDEF_and_AKDEF/KDEFmap .
cd KDEFmap
feh AF01.JPG
feh *
scp -P 22022 -r sirius:~/identity-expression/data/KDEF_and_AKDEF/ReadThis .
python3 -c "import numpy as np"
python3 -c "print('hello world')"
python3 -i -c "print('hello world')"
python3 -i buttons.py
scp -P 22022 KDEF_configure_allviews.py sirius:~/identity-expression/tmp/
scp KDEF_configure_allviews.py sirius:~/identity-expression/tmp/
scp -P 22022 KDEF_configure_allviews.py sirius:~/identity-expression/temp/
scp -P 22022 linear_only_all_views_id_w_expholdout.py sirius:~/identity-expression/temp/
py3
python3 -i -c "import numpy as np; import matplotlib.pyplot as plt"
python3 -i testing.py]
echo $py
git commit -m "add section describing splines, and more comments about per language analyses"
echo $(( 20 * 5 + 5 ))
echo $(( 105 * 30 / 60 ))
echo $(( 105 * 10 / 60 ))
echo $(( 55 * 10 / 60 ))
python3 -i -c 'import numpy as np; import matplotlib.pyplot as plt'~
python3 -i -c 'import numpy as np; import matplotlib.pyplot as plt'
vim model.tex
maim -s > tmp.png
vim evaluate_models.py
kitty --class=startupterm
cd .config/wal/colorschemes
vim desu.json
mv Trust_Game_TEMPLATE_11-6-2019.qsf Trust_Game_TEMPLATE_11-6-2019.QSF
vim amarena.json
wal -f ~/.config/wal/colorschemes/dark/monokai.json
cd ../light
vim gruvbox.json
git diff HEAD HEAD^ -- paper.tex
git add graphs/learning_curves_full.pdf
git add graphs/learning_curves_boot.pdf
git add analyses/6-processing.R
git commit -m "more changes to figures and figure captions"
modprobe -r brcmfmac
vim cv.tex
git submodule git@bitbucket.org:l3atbc/whichenglishdata.git
git submodule add git@bitbucket.org:l3atbc/whichenglishdata.git
git submodule add git@bitbucket.org:l3atbc/gww_subs.git
mv data.csv ~/repos/paper-criticalperiods_tics_response/whichenglishdata
cd paper-criticalperiods_tics_response/whichenglishdata
rg "cleaned_better"
cd gww_subs
mv cleaned_data.csv ../whichenglishdata
mv full_tmp.csv_ full.csv
cp full.csv ../data
cd ../gww_subs
cp full_tmp.csv ../data
cd ..data
cd which
cd ../whichenglishdata
git add clean.R
git add processing.R
git commit -m "cleaning up data processing scripts"
git add cleaned_data.csv
git add data.csv
git add full_tmp.csv
git commit -m "regenerating data"
git add whichenglishdata
git commit -m "adding submodules"
bat 5-bootstrap.R
cat 5-bootstrap.R
git stash -- paper.tex
scp -P 22022 full_tmp.csv chenauy@pleiades.bc.edu:~/work-directory
cd output
cp *.csv backup/
\vim.zshrc
echo light_or_dark
light_or_dark
echo $((55 * 10))
echo $(light_or_dark $(head -2 ~/.cache/wal/colors | tail -1))
echo light_or_dark $(head -2 ~/.cache/wal/colors | tail -1)
light_or_dark $(head -2 ~/.cache/wal/colors | tail -1)
light_or_dark $(head -2 ~/.cache/wal/colors | tail -1) || echo hello
bat --theme="OneHalfDark"
bat --list-themes
bat --theme="Github"
bat --theme="OneHalfLight"
mkdir aoc
cd aoc
mkdir day
mv day day1
sudo apt install julia
julia puzzle1.jl
julia -h
cp *.csv backup
cd backup
mkdir backup_forreal
cp *.csv backup_forreal
cd backup_forreal
cd moral
echo output_{flat, piecewise}
echo output_{flat,piecewise}
scp -P 22022 chenauy@pleiades.bc.edu:~/work-directory/output_{flat,piecewise}_bootstrap* .
echo *
scp -P 22022 chenauy@pleiades.bc.edu:~/work-directory/output_{flat,piecewise}_bootstrap_* .
rsync -h
rsync -vn chenauy@pleiades.bc.edu:~/work-directory/output_{flat,piecewise}_bootstrap* .
rsync -vn chenauy@pleiades.bc.edu:/home2/chenauy/work-directory/output_{flat,piecewise}_bootstrap* .
rsync -vn chenauy@pleiades.bc.edu:/home2/chenauy/work-directory/output_{flat,piecewise}_bootstrap\* .
rsync -vn --port=22022 chenauy@pleiades.bc.edu:/home2/chenauy/work-directory/output_{flat,piecewise}_bootstrap\* .
rsync -vn -e "ssh -p 22022" chenauy@pleiades.bc.edu:/home2/chenauy/work-directory/output_{flat,piecewise}_bootstrap\* .
rsync -e "ssh -p 22022" chenauy@pleiades.bc.edu:/home2/chenauy/work-directory/output_{flat,piecewise}_bootstrap\* .
ls -lad
man ls
pkill 333154
ps aux | grep polybar
kill 333154
kill 333345
git add output/*.csv
git add grphs
git commit -m "revising figures"
git add graphs/
git commit -m "changing graphs"
git checkout 8238e4e274f3be467b5cab073a94b224255d9e05
git clone git@bitbucket.org:l3atbc/paper-criticalperiods_tics_response.git
s
ls]
git submodule init
latex
sudo apt search latex
man texhash
texhash
sudo texhash
cd /var/lib/texmf
cd /usr/share/texlive
cd texmf-dist
cd bibtex
cd bst
ls | grep apacite
rubber -d paper.tex
git add LLLL.bib
git commit -m "Fixing author list of MIRT package citation"
git commit -m "Fixing reference to figure"
git checkout ae3b535131814c6de3796924d311116bdc3e02d8
git commit -m "Rotate table left instead of right"
echo $((3510 - 713))
cd l3-bcbib
vim LLLL.bib
cd ~/repos/aoc
cd day1
git commit -m "Adding updated word count\
"
cd ../day2
julia -i puzzle2.jl
mkdir day3
vim puzzle1.jl
mv puzzle1.jl day3
rm puzzle1.jl
julia -i puzzle1.jl
cd day3
git diff paper.tex
git diff paper.tex HEAD HEAD^
git commit -m "updated numbers for paper.tex"
git diff HEAD^ HEAD -- paper.tex
python3 test_model.py
python3 test_variable.py
cd pplax/kernels
vim hmc.py
python3 -i hmc.py
git commit -m "Changed api for defining models"
git commit -m "Added handlers"
rm model_handlers.py
python3 -i kernels/hmc.py
git commit -m "Refactor for model to use handlers"
xrandr -q
libre
libreoffice
cd ../tmp
rm -rf tmp
cd pplkax
cd ../../paper-criticalperiods_tics_response
ssh -p 22022 -X chenauy@pleiades.bc.edu]
scp -P 22022 chenauy@pleiades.bc.edu:~/work-directory/irt_full4.Rds .
cd Action
mv CREDs_Bayes_button_pilot_1_December\ 4,\ 2020_13.05.csv pilot.csv
mv CREDs_Bayes_button_pilot_1_December+8,+2020_16.22.csv ../repos/ActionWords_Bayes/exp1/pilot.csv
cd /usr/share/vim/vim81/
cd ftplugin
cd /usr/share/vim
cd vim81
cd indent
vim python.vim
conda install pytor h
conda install pytorch
vim buttons.py
mv buttons.py buttons_model.py
mv buttons_model.py exp1
cd ~/.config/wal/colorschemes/dark
polybar bar2 > /dev/null 2>&1 &
cd ../wal/colorschemes/dark
echo "python3 -c 'import numpy as np'"
alias py=python3 -i -c 'import numpy as np'
alias py="python3 -i -c 'import numpy as np'"
alias py="python3 -i -c 'import numpy as np; import matplotlib.pyplot as plt'"
cp init.vim nightly.vim
vim nightly.vim
nvim-nightly -u nightly.vim
alias nv
alias py
py
cd ~/repos/ActionWords_Bayes/exp1
ls ~/
ls -a ~/
git branch inccommand-treesitter
sudo apt-get install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip
CMAKE_INSTALL_PREFIX=build/ make
build/bin/nvim -u ~/.config/nvim/nightly.vim
cp nightly.vim devel.vim
vim devel.vim
ls -a
cd third-party
cmake ../third-party
cmake
cmake .
cmake ../third-party/cmake
cmake ../third-party/
cmake ../ 
rm -rf CMakeFiles CMakeCache.txt
cmake ..
build/bin/nvim -u ~/.config/nvim/devel.vim
cd include
./build/bin/nvim
./nvim ~/.config/nvim/devel.vim
mkdir build
rm -rf build
./nvim -u ~/.config/nvim/devel.vim
rm devel.vim
du
du -sh
man du
du -h
du -h | sort
du -h | sort -h
mv METAGAME\ -\ Episode\ 1_\ A\ Beautiful\ Accident.mp4 Metagame1.mp4
cd ony
sudo mount /dev/sdc /media/tony/
sudo mount /dev/sdc1 /media/tony/
cp 720P_4000K_249669611.mp4 /media/tony/.gem_log_files/53215y251uy23s
df -sh
df -h
df -ha
fdisk -l
mount /dev/sdb8
mount
cd /media
sudo mkdir tmp
sudo mount /dev/sdb8 tmp
cd ls -la
sudo umount /dev/sdb8
git reset likelihood_ks_model.py
git reset utilities_model.py
git add exp1/
git commit -m "scripts and models for experiment 1"
git push origin tony
./nvim 
cd deps
../../../build/bin/nvim
rg "treesitter"
rg "treesitter" .
find . -type f | rg "treesitter"
fd -name "treesitter"
fd "treesitter" .
fd -t f "treesitter" .
fd "treesitter"
fd
fd | grep "treesitter"
fd | rg "^treesitter.*"
fd | rg ".*treesitter.*"
fd | rg ".*tree-sitter.*"
rm -rf neovim
rm crp.py
rm dp.py
rm Metagame2.mp4
cp ~/Downloads/Metagame2.mp4 .
vlc Metagame2.mp4
cd -\
: 1608080593:0;cd -
sudo fdisk -l]
cd /media/tony/tmp
man rsync
rsync Metagame2.mp4 /media/tony/tmp/Pictures
cd /media/tony/tmp/Pictures
cd /media/tony/Seagate\ Portable\ Drive
cd Pictures
vlc Metagame1.mp4
vim buttons_model.py
setxkbmap -print -verbose 10
cd /usr/share/X11
cd xkb
cd rules
setxkbmap -query
setxkbmap -print
scp -P 22022 denseV2_32_.5drop_500_wExtraction.py sirius:~/identity-expression/models/pretrained/DenseNet/
cd repos/aoc
ssh -p 22022 -X sirius
python3 -i buttons_model.py
rm tree-sitter.wasm
python3 -i choice_dist.py
ls ../.local/bin
mv nvim.appimage nvim-nightly
chmod u+x nvim-nightly
mv nvim-nightly ~/.local/bin
mv choice_dist.py exp1
mkdir minjae
mv model.py minjae
mv pe_analyses.py minjae
mv pe_changepoint.csv minjae
mv preprocessing.ipynb minjae
mv rtpj_all.csv minjae
mv goodsubs_200623.csv minjae
mv *.csv minjae
mv evaluate_models.py minjae
mv tmp.py minjae
vim testing.py
rm testing.py
vim tmp.md
rm tmp.md
cd repos/ActionWords_Bayes/exp1
xrandr --output eDP-1 --brightness 1
git clone https://github.com/neovim/neovim.git
cd build/bin
rg "extmark"
vim highlight.lua
cd nvim/lua
rg "virt_text"
cd repos/neovim/
cd /usr/local/share/nvim
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
cd ~/.local/share
cd site
cd autoload
cd .local/share/nvim
echo "(pgrep build/bin/nvim)"
echo "$(pgrep build/bin/nvim)"
echo "$(pgrep nvim)"
man gdb
sudo gdb -tui -p "$(pgrep nvim)"
gdb -tui -p "$(pgrep nvim)"
gdb -tui -p 1014047
sudo
cd api/vim.c
rg "nvim_buf_set_virt"
gdb -tui -p 1014047 /build/bin/nvim
sudo gdb -tui -p 1014047
ls -d
find . -type d
sudo -i
sudo gdb -tui -p 1041617
VIMRUNTIME=runtime/ ; build/bin/nvim
VIMRUNTIME=runtime; build/bin/nvim
VIMRUNTIME=runtime
VIMRUNTIME=/usr/share/vim/vim81
cd build/bin/
$VIMRUNTIME=runtime/
ssh -p 22022 -X pleiades
cd repos/neovimm
git add buffer. 
git add buffer. c
git add buffer.c
./nvim
make distclean
git fetch origin pull/12249/head:set_text
git rebase --continute
vim decoration.c
rg "extmark_adjust"
gdb -tui -p 65023
rg "appended_liens"
rg "appended_lines"
rg "MAXLNUM"
rg "splice"
echo $VIMRUNTIME
sudo gdb -tui -p 65023
ssh -p 22022 -X chenauy@pleiades.bc.edu
ssh chenauy@pleaides.bc.edu
vim buffer_spec.lua
ssh chenauy@pleiades.bc.edu
scp fer2013.csv sirius:~/identity-expression/data/fer_faces/
scp -P 22022 fer2013.csv sirius:~/identity-expression/data/fer_faces/
sudo gdb -tui -p 82350
rg "getvcol("
rg "getvcol\("
TEST_FILTER="nvim_buf_set_text" make functionaltest
sudo TEST_FILTER="nvim_buf_set_text" make functionaltest
lua
sudo gdb -tui -p 128813
rg "virtual col"
sudo gdb -tui -p 144695
rg "pos_T"
rg "pos_T" *.h
rg "u_save"
git diff -- extmark.c
git origin
sudo apt install valgrind
valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes build/bin/nvim
export VIMRUNTIME=/usr/share/vim/vim81
git remote add origin https://github.com/chentau/neovim
git remove -v
git remote -v
git diff -- ../../test/functional/api/buffer_spec.lua
git commit -m "rebase, update to new api, and add more tests"
git config --global user.name "chentau"
git config --global user.email "tchen1998@gmail.com"
git rebase -i
git rebase -i b4185d68f10d7aa866ece51008b1078a905bf491
git diff master src/nvim/api/buffer.c
git reset --hard d29ad7550
git reset --hard b4185d68f
git push -f origin set_text
sudo make test
/usr/bin/env/python
fd "clint.py"
./clint.pty
/usr/bin/env
python3 clint.py
python=python3
./clint.py
/usr/bin/env python
sudo conda activate base; make lint
alias python=python3
cd src/
rg "utf_\
"
rg "utf_"
git diff -- api/buffer.c
git commit -m "more tests, and fixing lint"
rg "byteidxcomp"
git add test/functional/api/buffer_spec.lua
git commit -m "removing pending virtcol tests"
cd src/nvim/api/
git branch get_text
rg "buf_collect_lines"
rg "normalize_index"
ls -lah
cd trait
ls | grep core
ssh -p 22022 chenauy@pleiades.bc.edu
julia -i tmp.jl
julia -i --project=. tmp.jl
rm -rf traits
mkdir traits
mv *.toml traits
julia -i --project=. repro.jl
julia -v
vim traits/Project.toml
vim traits/Manifest.toml
vim /var/log/syslog
sudo gdb -tui -p 18167
fg]
rg "ARRAY_DICT_INIT"
find . -type d "auto"
fd "auto"
fd "CmakeCache\
"
fd "cmakecache"
cd ci
sudo gdb -tui -p 70500
sudo apt remove julia
wget https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.3-linux-x86_64.tar.gz\

tar zxvf julia-1.5.3-linux-x86_64.tar.gz
share/julia-1.5.3/bin/julia
rm bin/julia
cd share/julia-1.5.3
ln -s julia ~/.local/bin/julia
cd ../bin
rm julia
ln -s ~/.local/share/julia-1.5.3/bin/julia ~/.local/bin/julia
cd exp
julia -i --project=traits repro.jl
git diff ../../test/functional/api/buffer_spec.lua
git commit -m "Allow passing in empty array as a shorthand for array with empty string; add more documentation"
sudo TEST_FILTER=".*nvim_buf_set_text" make functionaltest
git commit -m "add check for start_row as well"
sudo gdb -tui -p 179620
sudo gdb -tui -p "$(pgrep build/bin)"
pgrep build/bin
pgrep build/bin*
pgrep "build/bin*"
sudo gdb -tui -p "$(pgrep build/bin/nvim)"
sudo gdb -tui -p 180561
vim pe_changepoint.csv
python3 evaluate_models.py
git diff api/buffer.c
rg "del_lines"
rg "truncate_line"
git commit -m "fix byte offset calculation"
git push origin set_text
rg "buf_attach"
rg "buf->update_callbacks"
rg "update_callbacks"
git branch buffer_updates
git checkout buffer_updates
im
git branch -D buffer_updates
git pull origin set_text
git reset --hard cdb13c8a8
git diff origin set_text
git fetch origin set_text
git branch -l
git rebase origin/set_text
sudo gdb -tui -p 204960
sudo gdb -tui -p 402960
rg "garray_T"
rg "garray_T" *.h
rg "user_expand_func\
"
rg "user_expand_func"
rg "expand_tags"
rg "expandoldsetting"
rg "ExpandOldSetting"
rg ""g
rg "expand_shellcmd"
git pull --rebase origin set_text
sudo TEST_FILTER=".*nvim_buf_attach on_bytes" make functionaltest
git checkout HEAD -- ../../test/functional/lua/buffer_updates_spec.lua
git stash --show
git diff HEAD~ HEAD -- api/buffer.c
git diff HEAD -- api/buffer.c
git checkout HEAD -- ../clint.py
git checkout HEAD -- api/buffer.c
git checkout set_text
sudo gdb -tui -p 102964
sudo gdb -tui -p 481688
rg "set_one_cmd_context"
git remote get-url
git remote get-url master
git remote set-url origin https://github.com/neovim/neovim
git branch gravity
rg "extmark_set"
rg "marktree_put"
rg "LineState" *.h
sudo gdb -tui -p 550900
sudo gdb -tui -p 560787
rg "hl_combine_attr"
rg "schar_T" *.h
ls /usr/share/vim/vim81/syntax/ | grep julia
vim ../../test/functional/lua/buffer_updates_spec.lua
sudo modprobe =r brcmfmac
git remote set-url origin https://github.com/chentau/neovim
git add src/nvim/decoration.c
git add src/nvim/extmark.c
git commit -m "allow for extmark gravity to be set through api"
vim modeling.dm
cd repos/moral-disengagement/exp2
cd ~/.vim
cd plugged
cd nvim-treesitter
cd queries/julia
vim highlights.scm
nv tmp.julia
nv tmp.jl
julia -i --project=traits tmp.jl
rg "kObjectType"
rg "void getvcol\("
git branch -help
git branch -d set_text
git branch -D set_text
git restore ../../test/functional/api/extmark_spec.lua
git add decoration.c
git add extmark.c
git commit -m "change gravity to be a boolean flag, and add corresponding flag for end position of extmark"
sudo TEST_FILTER="API/extmarks" make functionaltest
git commit -m "forgot to update tests"
cd ~/repos/paper-criticalperiods_tics_response
python3 -i evaluate_models.py
cd ../exp1
git remote add base https://github.com/neovim/neovim
git fetch base pull/13376/lua_comp
git fetch base pull/#13376/lua_compl
git fetch base pull/#13376/HEAD:lua_compl
git fetch base pull/#13376/head:lua_compl
git fetch origin pull/#13376/head:lua_compl
git fetch base pull/13376/head:lua_compl
git checkout result_piecewise <- DEoptim(loss_fn_piecewise, lower = c(0,0,0,-40,-40,0,0,0), upper = c(1,20,1,40,40,1,1,1), control= list(NP = 140, itermax = 400))
fit_pars_piecewise <- result_piecewise[[1]]$bestmem
git reset HEAD
git reset HEAD@{1}
git reset 348c9f012
git reset 6fb640ac3e9b5411ba8360ed08a51df6e420bd22
git reset --soft 4a83562aa042ee7769686e8b84bc79e789dc70bf
git commit -m "resetting commits"
git checkout HEAD -- lua/vim.lua
sudo gdb -tui -p 1091162
sudo gdb -tui -p 1091461
vim src/nvim/lua/vim.lua
sudo gdb -tui -p 1094968
rg "strcmp" | head
rg "strcmp" | less
rg "memcp" | bat
sudo gdb -tui -p 103468
sudo gdb -tui -p 1098645
rg "strcmp" | bat
fgg
pgrep "build/bin/nvim\
"
pgrep "build/bin/nvim"
pgrep "*build/bin/nvim"
pgrep ".*build/bin/nvim"
sudo gdb -tui -p 1099896
sudo gdb -tui -p 1099897
pgrep "nvim"
pgrep "nvim" | tail
pgrep "nvim" | tail -1
rg "STRLEN"
rg "STRLEN" *.h
valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --log-file=valgrind.log build/bin/nvim
rm ../../core
rg "cmd_can_preview"
rg "ins_completion"
git commit -m "Don't show the entire cmdline when completing"
maim -s | xsel -p
maim -s | xsel -c
man xsel
sudo TEST_FILTER="(lua completion)|(nlua_expand_pat)" make functionaltest
git restore ex_docmd.c
rg "vim_strnsave"
rg "ExpandOne"
rg "addstar"
rg "got_int"
rg "got_int" *.h
rg "
rg "ExpandFromContext"
git diff ex_getln.c
git restore ../../test/functional/viml/completion_spec.lua
maim -s > compl_multi.png
maim -s > compl_vim.png
git commit -m "revamping how completion is done"
rg "xp" *.h
kill 1532813
kill 1533147
kill -9 1532813
kill -9 1533147
rg "completion"
vim globals.h
rg "comp_length"
rg "compl_length"
rg "ins_compl_accept_char"
rg "utf_class_tab"
rg "meths.funcs"
git commit -m "fixing tests"
sudo TEST_FILTER="lua completion" make functionaltest
sudo TEST_FILTER="nlua_expand_pat" make functionaltest
git add ex_cmds_defs.h
git add ex_getln.c
git add lua/executor.c
git commit -m "remove xp->xp_offset"
git checkout gravity
sudo make lintr
git commit -m "change end_right_gravity error behavior"
git push origin gravity
ssh -p 22022 chenauy@andromeda.bc.edu
ssh-copy-id -p 22022 chenauy@andromeda.bc.edu
cd .ssh
scp -P 22022 vgg_face_dataset.tar.gz dromey:~/identity-expression/data/vgg_faces/
ls | grep vgg
rm vgg_face_dataset.tar.gz
git branch -D gravity
xrandr --output eDP-1 --brightness .5
ls -la | grep slippi
ls -la | grep -i slippi
mv Slippi_Online-x86_64\ \(1\).AppImage slippi
chmod u+x slippi
sudo apt search nvidia
lsmod
lsmod | grep nvidia
lshw -C display
sudo apt search nvidia-driver
sudo ubuntu-drivers devices
sudo ubuntu-drivers list-oem
cd /etc
cd var
cd /etc/X11
vim xorg.conf
vim xorg.conf.backup
lspci -vnn | grep '\''[030[02]\]'
sudo uname -a
sudo apt install nvidia-460 nvidia-prime nvidia-settings
sudo apt search nvidia-
sudo apt install nvidia-driver-460-dev nvidia-prime nvidia-settings
sudo ubuntu-drivers list
sudo apt search libnvidia
sudo apt install libnvidia-common-460
sudo apt clean
sudo apt install nvidia-driver-460 nvidia-prime nvidia-settings
sudo apt purge nvidia*
sudo dpkg --configure -a
sudo apt-get -f install
sudo apt -u dist-upgrade
sudo apt install nvidia-driver-460
sudo apt install -f
sudo apt install nvidia-driver-450
sudo dpkg -l | grep nvidia
sudo prime-select nvidia
sudo prime-select query
sudo lshw -C display
xrandr --output eDP-1 --brightness .75
man xrand
xrandr --listprovider
xrandr --listproviders
vim lua/vim.lua
git add lua/vim.lua
git commit -m "fixup"
git remote -h
git pull base lua_compl
git pull origin lua_compl
git cherrypick a66e3678a42d007a9db5033c11fc848c597840c8
git cherry-pick https://github.com/neovim/neovim/commit/a66e3678a42d007a9db5033c11fc848c597840c8
git show https://github.com/neovim/neovim/commit/a66e3678a42d007a9db5033c11fc848c597840c8
git remote add bfredl https://github.com/bfredl/neovim
git fetch bfredl
git fetch bfredl/lua_compl
git fetch bfredllua_compl
git fetch bfredl lua_compl
git checkout remotes/bfredl/lua_compl
git cherry-pick remote/bfredl/lua_compl/a66e3678a42d007a9db5033c11fc848c597840c8
git cherry-pick a66e3678a42d007a9db5033c11fc848c597840c8
git diff origin lua_compl
git diff origin/lua_compl lua_compl
git push origin lua_compl
git diff HEAD^ HEAD -- ../../test/functional/lua/command_line_completion_spec.lua
git add ../../test/functional/lua/command_line_completion_spec.lua
git rebase -i 991f70307823181ee29c07efa03af9282393ff2a 
git reset --hard f183a4f78
git rebase --edit-todo
git reset --hard e7bd7cc2f
git reset --hard f183a4f78 
git rebase -i 714449808224101c1928fae54796b6c4385e1014
git commit --amend --author="Tony Chen <tchen1998@gmail.com>"
git add ex_cmds.c
git dd ex_docmd.c
git add ex_docmd.c
git push -f origin lua_compl
rg "completion" funcs.c
rg "complete" funcs.c
rg "set_completion"
rg "vim_iswordc"
git branch ins_completion_api
git checkout lua_compl
rg "pumitem_T"
ls api
vim lua/executor.c
vim api/window.c
cd api
vim vim.c
rg "struct list_T"
rg "list_T" *.h
rg "list_S" *.h
rg "list_S"
vim converter.c
rg "typedef.*list_T"
vim eval/typval.h
rg "array to list\
"
rg "list_T"
rg "to_list"
rg "list_T" api/
vim api/private/helpers.c
rg "typval" api
rg "colnr_T" *.h
rg "undo_allowed"
pgrep gdb
kill 410667
sudo kill 410667
sudo kill 410666
sudo kill -9 410666
sudo kill -9 410667
rg "lua.h"
rg "api/
rg "api/"
rg "sort"
rg "sort" *.c
rg "qsort"
ffg
rg "noref"
rg "luaref"
rg "nlua_enter"
rg "lua_State" *.c
rg "lua_State" api/*.c
rg "ARRAY_.*_INIT";
rg "STATIC_CSTR_AS"
rg "STRING_INIT"
rg "FUNC_API_SINCE"
rg "luaeval"
rg "PUSH_ALL_TYP"
rg "lual_loadbuffer"
rg "luaL_loadbuffer"
rg "DictionaryOf"
rg "GA_INIT"
rg "GA"
rg "ARRAY_"
rg "LUAREGISTRY"
rg "LUA_REGISTRY"
rg "ERROR_SET"
rg "api_free_array"
rg "CP_ORIGINAL_TEXT"
rg "compl_T"
sudo CC=clang make CMAKE_FLAGS="-DCLANG_ASAN_UBSAN=ON" CMAKE_BUILD_TYPE="Debug"
rg "nlua_call_luaref"
rg "nlua_call_ref"
rg "api_free_dictionary"
wget https://raw.githubusercontent.com/nvim-telescope/telescope.nvim/master/lua/telescope/algos/fzy.lua
rm ../../compl_multi.png
rm ../../compl_vim.png
rg "nlua_pop_object"
rg "nlua_pop_Object"
rg "FLOAT_OBJ"
rg "lua_Number
rg "lua_Number\

rg "lua_Number\
"
rg "lua_Number"
rg "kObjectTypeFloat"
rg "lua_Debug"
rg "STATIC_CSTR_TO"
rg "cstr_to_string"
cd cmake
export ASAN_OPTIONS="log_path=asan.log"
vim asan.log
rg "tv_get_number_chk"
rg "vim_strnicmp"
rg "vim_strnicmp" -l 5
rg -c 5 "vim_strnicmp"
rg -n 5 "vim_strnicmp"
rg
rg -C 5 "vim_strnicmp"
rg -C 5 "STRNCMP"
rg "STRNICMP"
diff
git statsh
rg "stop_arrow()"
rg "ins_bytes"
git restore ex_getln.c
git diff -- ex_getln.c
rg "Ctrl_X"
rg "CTRL_X_MODE"
rg "CTRL_X"
sudo gdb -tui -p 823667
rg "K_BS"
find . -type f
rg "xfree_clear"
rg "xfree"
rg "xmemdupz"
rg "vim_str2nr"
rg "struct win_S"
rg "struct win_t"
rg "struct win_T"
sudo apt install peek
export ASAN_OPTIONS="detect_leaks=1:log_path=asan"
mkdir asan
cd repos/neovim/asan
sudo apt install clang
clang --version
sudo apt search llvm-symbolizer
sudo apt install llvm
cd asan
vim asan.99414
rm -rf asan/
rg "cstr_as_string"
vim asan.100466
vim asan.101328
rm asan.101328
vim asan.102888
rm asan.102888
vim valgrind.log
git diff -- edit.c
git commit -m "Allow for filtering insert completion matches using a lua function"
rg "XFREE_CLEAR"
build/bin/nvim fzy.lua'\
'
fdfind
man fdfin
man fdfind
fd -t f .
fd -t f '' /home/tony/repos/neovim
git commit -m "fix crash"
git commit -m "fix"
cd test 
rg "comple" 
sudo TEST_FILTER="completion" make functionaltest
build/bin/nvim fzy.lua -u NORC
export $GDB=1
export $GDB="hello"
export GDB=1
echo $GDB
sudo TEST_FILTER="completion" CC=clang make functionaltest
rg "ILOG"
sudo TEST_FILTER="completion" CC=clang make functionaltest > tests.txt
vim tests.ansi
rm tests.ansi
vim asan.107911
rm asan.*
sudo TEST_FILTER="completion" CC=clang make functionaltest > tests1.txt
vim tests1.txt
rg "compl" ../../test/functional
sudo TEST_FILE="test/functional/lua/luaeval_spec.lua" make functionaltest
sudo TEST_FILE="test/functional/ex_cmds/cmd_map_spec.lua" make functionaltest
sudo TEST_FILE="test/functional/eval/input_spec.lua" make functionaltest
git restore ../../test/functional/helpers.lua
git commit -m "fix some tests"
build/bin/nvim -u NORC tmp.vim
rg "LUA_NOREF"
rg "LuaRef"
rg "api_free_luaref"
rg "api_free_error"
rg "free(error")
rg "free(error"
rg "free\(error"
rg "Error"
rg "err"
rg "Error *err"
rg "api_clear_error"
rg "buf_updates_register"
rg "array_to_vim"
rg "object_to_vim"
rg "Object" api/
rg "kObjectTypeLuaRef"
git add edit.h
git commit -m "adress review comments and fix more tests"
git commit -m "remove failing part of old test"
viom
rg "K_EVENT"
rg "ERROR_INIT"
rg "ARRAY_OBJ"
build/bin/nvim fzy.lua 
man alsactl
alsactl list
lsmod | grep snd
arecord -l
alsactl restore
alsactl kill
alsactl kill quit
alsactl store
sudo alsactl store
sudo alsactl restore
ls /var/lib/alsa/
sudo alsactl init
pip3 search matplotlib-backend-kitty
git restore test_popup.vim HEAD^
git restore --source HEAD^ test_popup.vim
vim test_popup.vim
git add testdir/test_popup.vim
git commit -m "more review comments"
vim testdir/test_help.vim
cd test/functional/viml/
scripts/vim-patch.sh
vim src/nvim/testdir/test_popup.vim
vim completion_spec.lua
rg "STREQUAL"
rg "str_equal"
cd ~/repos/neovim/src/nvim
rg "STRNCMP"
sudo TEST_FILE="test/functional/ui/popupmenu_spec.lua" make functionaltest
git commit -m "lints, tests, and allowing for filtering before the user has typed anything."
vim testdir/test_popup.vim
git commit -m "filtering now works with completefunc (hopefully)"
sudo TEST_FILE=testdir/test_popup.vim make oldtest
build/bin/nvim tmp.vim
git commit -m "fix mac/windows tests"
git commit -m "second try at fixing tests"
echo $PYTHONPATH
echo $PYTHON
wget https://raw.githubusercontent.com/jktr/matplotlib-backend-kitty/master/__init__.py
mkdir mpl-kitty
mv ~/Downloads/__init__.py mpl-kitty
cd mpl-kitty
mv mpl-kitty mpl
sudo apt search magick
lines
tput lines
kitty +kitten icat
kitty +kitten icat test.txt
sudo apt install imagemagick
echo $SHELL
export TERM=xterm-kitty
man ssh
vim ../../test/functional/lua/command_line_completion_spec.lua
vim ../../test/functional/viml/completion_spec.lua
rm -rf aoc
kitty +kitten icat feh.png
kitty +kitten icat tmp.png
kitty +kitten icat tmp.png --place=3,4
kitty +kitten icat tmp.png --place=3x4
kitty +kitten icat tmp.png --place=3x4@0x0
kitty +kitten icat --place=3x4@0x0 tmp.png
kitty +kitten icat --place=3x4 tmp.png
kitty +kitten icat --place=3x4@1x1 tmp.png
kitty +kitten icat --place=1x1@1x1 tmp.png
kitty +kitten icat --place=50x50@1x1 tmp.png
echo $PAGER
export PAGER=bat
kitty +kitten icat --help
bat
vim build/.nvimlog
sudo TEST_FILE="test/functional/viml/completion_spec.lua" make functionaltest
git add ../../test/functional/viml/completion_spec.lua
git commit -m "more tests"
git push origin ins_completion_api
valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --log-file=valgrind.log build/bin/nvim fzy.lua
export ASAN_OPTIONS="detect_leaks=1"
export ASAN_OPTIONS="detect_leaks=1:log_path=$HOME/repos/neovim/asan"
rm valgrind.log
build/bin/nvim fzy.lua
vim asan.1163873
rm asan.1163873
git branch -D complete_add
git branch complete_add
git checkout complete_add
./slippi
git branch -D lua_compl
git branch cmdline_completion
vim ex_getln.c
rg "try_end"
rg "changed_lines"
git branch set_text_fix
git checkout set_text_fix
sudo TEST_FILE="test/functional/api/buffer_spec.lua" make functionaltest
git add ../../test/functional/api/buffer_spec.lua
git commit -m "correctly mark changed regions for set_text"
git push origin set_text_fix
vim ../clint.py
vim change.c
git branch -A
git branch -d set_text_fix
git branch -D set_text_fix
echo $ASAN_OPTIONS
rg "win_T"
rg "diff_check_fill"
rg "schar_from_ascii"
rg "schar_T"
rg "win_call_off" *.c
rg "typval"
rg "win_call_off"
man rg
rg "win_col_off"
rg "update_screen"
vim state.c
rg "ui_flush"
rg "default_grid"
rg "SCREEN_GRID_INIT"
rg "ScreenGrid"
rg "ui_comp_put_grid"
rg "cursor"
rg "cursor" *.c
rg "ui_cursor_shape"
vim move.c
rg "ui_call_win_pos" ../..
cd repos/neomv
rg "compute_cmdrow"
rg "W_ENDROW"
git branch screen_margin
sudo gdb -tui -p 535226
rg "conceal_cursor_line("
rg "conceal_cursor_line\("
rg "setcursor\("
rg "ui_grid_cursor"
rg "w_wrow"
rg "getvvcol"
vim edit .c
git branch ins_conceal_fix
cd ../../test/
cd test/functional
cd viml
cd core
cd insert
vim insert_spec.lua
cd normal
vim screen.lua
vim cursor_spec.lua
sudo TEST_FILE="test/functional/ui/cursor_spec.lua" make functionaltest
git add ../../test/functional/ui/cursor_spec.lua
git commit -m "always redraw line when entering insert mode on a line with conceal active"
git push origin ins_conceal_fix
rg "w_virtcol"
git diff HEAD~1 HEAD
git commit -m "lint"
git push -f origin ins_conceal_fix
git diff -- __init__.py
git diff -- kernels/hmc.py
git diff -- variables.py
git add __init__.py
git commit -m "Updates to distributions"
git diff -- kernels/nuts.py
git add kernels/nuts.py
git commit -m "small refactor to nuts"
conda activae pplax
git rm ../todo.adoc
git branch better_shape_inference
git checkout better_shape_inference
nv variables.py
git branch functional_refactor
git branch -d jax-pplspark
git diff kernels/hmc.py
git stash peek hmc.py
git stash show -p -- kernels.hmc.py
git stash show -p -- kernels/hmc.py
git restore kernels/mh.py HEAD
git restore
git restore -h
git restore -s HEAD mh.py
git restore -s HEAD kernels/mh.py
git checkout functional_refactor
git restore -s HEAD distributions.py
git restore -s samplers.py
git restore -s HEAD samplers.py
git stash show -p
git statsus
git checkout ins_conceal_fix
conda activate pplax
cd repos/pplax
git add handlers.py
git restore --index handlers.py
git add kernels/
git add samplers.py
git reset --soft -- handlers.py
git reset --soft HEAD -- handlers.py
git reset --soft HEAD handlers.py
git reset HEAD handlers.py
git commit -m "major refactor: all kernels are now in functional form. Also changed NUTS to use the iterative algorithm from numpyro instead of recursive"
git merge functional_refactor
git branch -d functional_refactor
git branch nuts_refactor
git checkout nuts_refactor
scp -P 22022 dromey:~/identity-expression/tmp1.png .
feh tmp1.png
git restore -s HEAD kernels/nuts.py
vim kernels/nuts.py
python3 -i kernels/nuts.py
python3 -i samplers.py
git add schedulers.py
git commit -m "add scheduler"
vim samplers.py
python3 -i variables.py
git add distributions.py
git add model.py
git add variables.py
git commit -m "allow for composing models"
git remote set-url origin https://github.com/chentau/pplax.git
git config -list
git config --list
git config --global credential.helper manager
git config --global credential.helper store
git push
vim github_pat
git staus
vim todo.adoc
rg "find_mps_values"
rg "check_winopt"
rg "w_winrow"
rg "ui_call_win_pos"
rg "grid"
rg "grid" | bat
rg "grid" | less
cd ~/repos/pplax
vim test_model.py
rm todo.adoc
cd ls
mkdir svi
cd svi
mv samplers.py infer.py
rg "samplers"
vim infer.py
mv infer.py samplers.py
mkdir infer
mv samplers.py infer
mv kernels infer
rm -rf svi
cd infer
vim __init__.py
vim svi.py
conda env create --name tpdb
conda env create --name tmp
conda create --name tpdb
git branch on_bytes_doc
cd src/nvim/api
vim buffer.c
cd scrip
pip install doxygen
sudo apt search doxygen
vim gen_vimdoc.py
sudo apt install doxygen
./gen_vimdoc.py
vim runtime/doc/api.txt
scripts/gen_vimdoc.py
git commit -m "Doc: update documentation for on_bytes"
git push origin on_bytes_doc
git diff HEAD^ HEAD
git add src/nvim/api/buffer.c
git rebase -i HEAD~1
nvim --clean -c 'set mouse=a fdc=1 stal=2'
build/bin/nvim --clean -c 'set mouse=a fdc=1 stal=2'
vim mouse.c
vim scree.c
rg "getdigits_int"
rg "p_mps"
rg "did_set_string_option"
rg "MARGIN"
rg "MRG"
rg "PV_MRG"
scp -P 22022 dromey:~/identity-expression/experiments/importance/heatmaps.png .
scp -P 22022 dromey:~/identity-expression/tmpface.png .
feh tmpface.png
rm tmpface.png
scp -P 22022 dromey:~/identity-expression/data/fer_faces/fer2013.csv .
rm fer2013.csv
scp -P 22022 dromey:~/identity-expression/data/kdef_processed/images_baseline.hdf5 .
conda activate tpdb
pip install h5py
scp -P 22022 dromey:~/identity-expression/facetmp.png .
feh facetmp.png
scp -P 22022 dromey:~/identity-expression/experiments/importance/tmp.png .
mv tmp.png heatmaps.png
feh heatmaps.png
scp -P 22022 dromey:~/identity-expression/experiments/importance/scaling.png .
conda env remove --name tpdb
conda create --name jupytui
conda create --name termpyter
mdkir termpyter
vim design.md
conda install pi
python -m rich.live
mkdir termpyter
vim exploration.ipynb
cp ../ActionWords_Bayes/exploration.ipynb a.ipynb
rm input.py
kitty +kitten icat -h
kitty +kitten icat scaling.png 3x4@15x15
kitty +kitten icat scaling.png --place3x4@15x15
kitty +kitten icat scaling.png --place=3x4@15x15
kitty +kitten icat --place=3x4@15x15 scaling.png
kitty +kitten icat --place=40x60@15x15 scaling.png
rm handle_input.py
python termpyter a.ipynb
pip install keyboard
pip uninstall keybaord
pip uninstall keyboard
python -i termpyter a.ipynb
kls
python3 parser.py
python3 ../termpyter
vim notebook.py
vim a.ipynb
vim option.c
build/bin/nvim -u NORC
vim CONTRIBUTING.md
export VIMRUNTIME=runtime
tmp.py scaling.png
kitty +kitten icat scaling.png
echo -e "\033[6n"
echo "\033[0;0H"
python3 -i disp
echo "\033_Gf=100,t=f;/home/tony/repos/termpyter/termpyter/scaling.png\033\\"
echo "\033"
echo "\033_Gf=100,t=f;L2hvbWUvdG9ueS9yZXBvcy90ZXJtcHl0ZXIvc2NhbGluZy5wbmc=\033\\"
pip install PIL
pip install Pillow
nv ../setup.py
pip install -e termpyter
pip install -e ../termpyter
cd termpyter/termpyter
git checkout on_bytes_doc
build/bin/nvim CONTRIBUTING.md
conda install msgpack
pip install msgpack
python3 scripts/gen_vimdoc.py
git dff
git add runtime/doc/api.txt
git push -f origin on_bytes_doc
termpyter
./termpyter
pip install watchdog
rg "text_lines"
pip install ipdb
export PYTHONBREAKPOINT=ipdb.set_trace
python3 -i display.py
tmp
python3 display.py
echo "\x1b[0;31mhello\x1b[0m\
"
echo "\x1b[0;31mhello\x1b[0m"
echo "\x1b[0;31mhello\x1b[0m\x1b[0m"
echo "\x1b[0;31mhello\x1b[0mfdf\x1b[0m"
echo "\x1b[0;31mhello\x1b[0mfdf\x1b[0m\x1b[0m"
echo "\x1b[0;31mhello\x1b[0mfdf\x1b[0m\x1b[0m\x1b[0m"
lsb_release -a
uname -a
python3 -i parser.py
vim simple.ipyn
vim simple.ipynb
cat "asdf" >> ../todo.md
echo "asdf" >> ../todo.md
echo "asdf"
pip freeze | grep "watchdog"
python3 -i ../termpyter test.ipynb
nano test.ipynb
rm test.ipynby
nano ../todo.md
cd 
vim watch.py
kitty +kitten query
kitty +kitten panel
echo "print('hello')" >> test.py
echo "print('hello')" > test.py
echo "print('boo')" > test.py && vim -u testrc.vim test.py\

echo "print('boo')" > test.py && nv -u testrc.vim test.py\

sudo apt search libtreesitter
sudo apt search libtree-sitter
sudo apt search tree-sitter
VERBOSE=1 DEBUG=1 make deps
sudo VERBOSE=1 DEBUG=1 make deps
build/bin/nvim 
echo $TERM
git branch -D on_bytes_doc
cd tree-sitter
RUNTIME=runtime build/bin/nvim
cd ~/repso/neovim
rg "autoread"
rg "autoread" *.c
vim fileio.c
vim treesitter.c
vim executor.c
vim language.lua
cd eval
vim funcs.c
rg "match_add"
VIMRUNTIME=runtime build/bin/nvim -u testrc.vim test.py
nv scaling.png
ls | grep heat
mv heatmaps.png expr_heatmap.png
python3 ../termpyter test.ipynb
vim tests.txt
rm tests.txt
rm tests1.txt
rg "frame_minwidth"
rg "bt_quickfix
rg "bt_quickfix"
rg "win_init"
rg "parse_float_config"
vim window.c
rg FloatConfig
git restore -s HEAD option_defs.h
git restore -s HEAD options.lua
rg "compose_area"
rg "ui_composed_call_raw_line"
rg "ui_ext_win_position"
rg "row_offset"
rg "line_offset"
rg "w_wincol ="
rg "ui_call_raw_line"
scp -P 22022 dromey:~/identity-expression/experiments/importance/id_heatmap.png .
scp -P 22022 dromey:~/identity-expression/experiments/importance/id_scaling.png .
feh expr_scaling.png
feh scaling.png
ls | grep png
feh id_scaling.png
feh expr_heatmap.png
feh id_heatmap.png
VIMRUNTIME=runtime build/bin/nvim
VIMRUNTIME=runtime build/bin/nvim -u ~/.config/nvim/nightly.vim
git branch on_bytes_undofile
VIMRUNTIME=runtime build/bin/nvim -u ~/.config/nvim/nightly.vim test.py
rm ~/.local/share/nvim/undo
rg "log"
fd "log"
fd -a
fd -a "log"
cd ~/.local/share/nvim
cd log
man fd
VIMRUNTIME=runtime build/bin/nvim -u ~/.config/nvim/nightly.vim -V10log test.py
fd -I "log"
echo $NVIM_LOG_FILE
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u ~/.config/nvim/nightly.vim -V10log test.py
git commit -m "wip: save extmark undo information to undofile"
rg "TRY_WRAP"
git commit -m "forgot to free"
nv extmark.h
git commit -m "more memory leaks"
ssh -N -L -p 22022 8080:localhost:8080 dromey
ssh -p 22022 -N -L 8080:localhost:8080 dromey
ssh -p 22022 -N -L 8080:localhost:8888 dromey
ssh dromey -N -L 8080:localhost:8888
ssh dromey -L 8080:localhost:8888
ssh dromey -NL 8080:localhost:8888
git restore -s HEAD
git restore -s HEAD .
vim grid_defs.h
cd auto
rg "UI_BRIDGE_CALL"
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NONE
git checkout get_text
git stash@{3} show
git stash show stash~3
git stash show stash~2
git stash show stash{3}
git stash show stash@{3}
git stash show stash@{5}
git stash pop stash@{5}
vim api/buffer.c
git stash show
git stash clear stash@{5}
git add api/buffer.c
git stash show stash@{4}
git stash pop stash@{4}
rg "undofile" ../../test/functional
rg "ERROR"
rg "E"
rg "UF_VERSION"
nv src/clint.py
rg "SavePos" *.c
rg "u_extmark_set" *.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC test.py
rg "SavePos"
rg "u_extmark_set"
rg "u_extmark_copy"
rm t
rm w
rg "testfile"
fd "testfile"
fd "testfile" .
ls | grep ex
fd "extmark" .
fd -I "extmark" .
ls ~/.local/share/nvim/undo
fd "\%" .
fd "%" .
rg ".un"
fd ".un"
fd "\.un"
vim .testfile.un~
vim testfile
rm .testfile.un~
vim .nvimlog
rg "kv_push"
rm testfile
rm .testfile.un\~
fd "\.test"
fd -I "\.test"
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC testfile
sudo TEST_FILE="test/functional/api/extmark_spec.lua" make functionaltest
git commit -m "fixing crashes, and adding tests"
git push origin on_bytes_undofile
rg "matchitem"
vim src/nvim/api/buffer.c
nv tmp.c
vim ../../test/functional/api/extmark_spec.lua
git add ../../test/functional/api/extmark_spec.lua
git rebase -i HEAD@{6}
rg "redrawing\(\)"
rg "char_avail\(void\)"
rg "vpeekc\(void")
rg "vpeekc\(void"
rg "os_breakcheck"
rg "loop_poll_events"
cd ../../test/functional/api
vim extmark_spec.lua
sudo TEST_FILE="test/functional/lua/buffer_update_spec.lua" make functionaltest
rm Xtest-undofile
rm .Xtest-undofile.un\~
vim ../lua/buffer_updates_spec.lua
git add extmark_spec.lua
git add ../lua/buffer_updates_spec.lua
git rebase -i HEAD@{2}
git rebase -i HEAD@{3}
git rebase -i HEAD^2
vim src/nvim/undo.c
vim test/functional/api/extmark_spec.lua
sudo make litn
git add src/nvim/undo.c
git add test/functional/api/extmark_spec.lua
git checkout screen_margin
git stash lilst
rg "Rows"
rg "Rows" | wc
rg "Columnss" | wc
rg "Columns" | wc
rg "grid.Columns"
rg "grid(\.|->)Columns"
rg "coladvance" edit.c
rg "ins_char" *.c
rg "grid_alloc"
ps aux | grep build/bin
kill 2476144
gdb build/bin/nvim
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim 
nv -u NORC -S resize.vim
nv ../../resize.vim
rg "getreg"
scp -P 22022 dromey:~/identity-expression/models/Pretrained/DenseNet train.py .
scp -P 22022 dromey:~/identity-expression/models/Pretrained/DenseNet/train.py .
scp -P 22022 dromey:~/identity-expression/models/pretrained/DenseNet/train.py .
scp -P 22022 dromey:~/identity-expression/models/pretrained/DenseNet/extract.py .
ps aux | grep chromes
pkill google-chrome
cd ../repos/termpyter
cp ~/Downloads/hw02.ipynb .
termpyter hw02.ipynb
python3 termpyter hw02.ipynb
nv test.py
rm hw02.ipynb
python3 ../termpyter ../hw02.ipynb
vim parser.py
python3 -i watch.py
cd repos/termpyter
cd termpyter
conda activate termpyter
sed -n -l
python3 termpyter
python3 ../termpyter ../a.ipynb
cd..
mv termpyter nbtui
pip install -e . 
conda activate workshop
conda env remove --name termpyter
conda create --name nbtui
rm termpyter.egg-info
pip install watchgod
pip install rich
rm out.log
pip install -e ..
pip install pillow
lw
cp ~/Downloads/scaling.png .
sudo apt update kitty
git restore --index nbtui/__pycache__
git restore --staged nbtui/__pycache__
git restore --staged watch.py
git rm --cached watch.py
git rm --cached __pycache__/
git rm -r --cached __pycache__/
git rm --cached tmp.py
git rm --cached test.ipynb
git rm --cached scaling.png
git rm --cached .ipynb_checkpoints/
git rm -r --cached .ipynb_checkpoints/
git rm termpyter.egg-info/
git remote add origin https://github.com/chentau/nbtui
git remote list
git pull origin main
git remote set-url origin https://github.com/chentau/nbtui
git commit -m "add license"
git commit -m "update README"
mv watch.py ..
mv tmp.py ..
python3 -m rich.prompt
python3 ../nbtui ../a.ipynb
nv user_input.py
git add ../README.md
git add display.py
git add user_input.py
git commit -m "Implement regex-based searching of notebooks"
pip install build
rm -rf termpyter.egg-info
which wal
cd ~/.local/bin/wal
cd ~/.local/bin/
vim wal
vim nbtui
nv setup.py
vim *.py
vim ~/.local/bin/wal
vim __main__.py
mv scaling.png ..
git commit -m "Don't hard code resizing of images that are too large. This makes large image display nicer on small terminal windows."
vim user_input.py
python3 -i user_input.py
kitty +kitten query_terminal version
git commit -m "Move user input handling to its own separate python process"
vim ../a.ipynb
nv __main__.py
nbtui ../a.ipynb
cd ~/.fonts/
mv ~/Downloads/Fira_Code_v5.2.zip .
unzip Fira_Code_v5.2.zip
rm fira_code.css
rm specimen.html
rm -rf woff
rm -rf woff2
vim README.txt
rm README.txt
cd ttf
mv . ..
mv * ..
rm -rf ttf
rm -rf variable_ttf
fc-list | grep -i fira
cd ~/.config/kitty
vim kitty.conf
kitty list-fonts | grep fira
cd repos/nbtui]
git rm nbtui/test.ipynb
git restore nbtui/test.ipynb
git restore -s HEAD nbtui/test.ipynb
mv test.ipynb ..
conda activate ml
nbtui ../test.ipynb
python3 ../nbtui ../test.ipynb
cd ~/repos/nbtui
python3 nb
git add nbtui
git commit -m "Add support for other langauges for python, and also add support for execute_result output types."
python3 ../nbtui/__main__.py ../test.ipynb
python3 -i ../watch.py
git commit -m "Fixing bug in file watch detection"
nv todo.md
git add todo.md
git commit -m "Get ready for release to pypi"
vim test.ipynb
nv parser.py
mkdir tests
cd tests
cp ../test.ipynb .
pip install pytest
conda install pytest
vim nb_spec_test.py
mv notebook.py nbtui
rm notebook.py
git commit -m "allow support for images in execute_result"
rm design.md
cd repos/nbtui/nbtui
nv display.py
vim ../todo.md
rg "lopen"
rg "lopen" *.c
git branch loc_list_crash
rg "loclist" ../../test/
git commit -m "Make sure window is still valid while calling lopen"
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_LOG_FILE=out.log build/bin/nvim -u NORC testrc.vim
vim out.log
git add window.c
git commit -m "Fix the same issue for splits as well"
nv ../../test/functional/viml/errorlist_spec.lua
cd ../../test/functional/viml/
rg "wait"
rg "buf_get_lines"
git add viml
git restore -s src/clint.py
vim quickfix.c
git add quickfix.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC testrc.vim
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC resize.vim
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -c resize.vim
vim ../../resize.vim
rg "win_ui_flush"
rg "FOR_ALL_WINDOWS"
rg "INIT" *.h
git branch float_resize
git commit -m "iterate over everything instead of breaking"
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -S resize.vim
cd ../../test
cd functional
cd ui
sudo TEST_FILE="test/functional/ui/float_spec.lua" TEST_FILTER=".*resized screen" make functionaltest
nv ui.c
rg "screen"
rg "screen" *.c
nvim --embed
rg "screenshot"
vim tmp.png
bat tmp
cat tmp
cd tui
nv tui.c
git add .
git add ../todo.md
git commit -m "better searching"
tmxu
pip3 install -e .
pip install twine
python3 -m twine upload --repository testpypi dist/*
cp -r nbtui nbtui-assets
git commit -m "add demo gif"
git commit -m "add demo gif to README"
cp ~/Videos/demo.gif .
git add demo.gif
git commit -m "update gif"
conda create --name tmp
conda activate tmp
pip install --index-url https://test.pypi.org/simple/ nbtui
pip install --index-url https://test.pypi.org/simple/ --no-deps nbtui
pip freeze > requirements.txt
conda env remove --name tmp
pip --version
pip install -f requirements.txt
pip install -r requirements.txt
vim token
cd repo/
cd nbtui-assets
cd env
rm -rf env
conda activate base
python3 -m venv env
conda deactivate
source env/bin/activate
which python3
which nbtui
cd dis
vim nbtui-0.0.1-py3-none-any.whl
cd dist
rm nbtui-0.0.1*
pip install --reinstall nbtui
pip install --upgrade nbtui
pip install --uninstall nbtui
pip install -upgrade nbtui
pip remove nbtui
pip -h
deactivate
git commit -m "add dependencies to setup.py"
git commit -m "requirements"
git restore -s HEAD src/nvim/ui_compositor.c
git restore -s HEAD test/functional/ui/float_spec.lua
wal -f ~/.config/wal/colorschemes/dark/amarena.json
wal -f ~/.config/wal/colorschemes/dark/sweet.json
cd ~/.config/wal
cd colorschemes
cd dark
vim zephyr.json
vim manta.json
wal -f ~/.config/wal/colorschemes/dark/manta.json
rm manta.json
wal -f ~/.config/wal/colorschemes/dark/lovelace.json
vim ephemeral.json
cd light
wal -f sky.json
wal -f cherry.json
wal -f ayu.json
wal -f gruvbox.json
wal -f desu.json
git restore -s HEAD grid_defs.h
vim ../../test/functional/viml/errorlist_spec.lua
sudo TEST_FILE="test/functional/viml/errorlist_spec.lua" make functionaltest
git add ../../test/functional/viml/errorlist_spec.lua
cd testdir
fd "oldtest"
fd "oldtest" .
fd "changelist"
vim test_changelist.vim
sudo TEST_FILE="src/nvim/testdir/test_help.vim" make oldtest
vim test_help.vim
sudo make oldtest
xrandr --output eDP-1-1 --brightness 1
nv quickfix.c
scripts/vim-patch.sh -l
git reset --hard dc3ca16a99ec05c88df1b1fe6a3cfbe97ea34227
scripts/vim-patch.sh -p 8.1.0892
./scripts/vim-patch.sh -L --grep quickfix -- src\

./scripts/vim-patch.sh -L --grep loclist -- src
git diff HEAD~1 HEAD~2
git diff HEAD HEAD^
git diff HEAD HEAD~1
git diff HEAD HEAD~2
git checkout vim-8.1.0892
git diff HEAD~2 HEAD
git diff HEAD c1fbc2ddf15b2f44b615f90b2511349ab974cb83
git diff HEAD~ HEAD
patch -p1 < vim-8.1.0892.patch
nv eval.c
vim vim-8.1.0892.patch
rm testdir/test_quickfix.vim.rej
rm testdir/test_quickfix.vim.orig
rm eval/funcs.c.rej
rm eval/funcs.c.orig
rm eval.c.rej
rm eval.c.orig
rg "ex_join"
vim rl.tx
vim rl.tex
rm rl.tex
git checkout on_bytes_undofile
git branch -d on_bytes_doc
nv undo.c
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" make oldtest
rm ~/.local/share/nvim/undo/%home%tony%repos%neovim%test.py
git push -f origin on_bytes_undofile
rm window.c.orig
rm quickfix.c.orig
rm quickfix.c.rej
rm window.c.rej
git statau
vim resize.vim
cd ../../test/functional
rg "helpers.request"
rg "request"
git branch -d on_bytes_undofile
git branch -D on_bytes_undofile
git branch -D screen_margin
vim fairness_model.py
cd model_results_notes
vim Ue_predict_model_results_20200512.txt
ssh -N -L -p 22022 8080:localhost:8888 dromey
ssh -p 22022 dromey -N -L 8080:localhost:8891
nv move.c
git branch conceal_redraw
vim repro.jl
rm repro.jl
vim rl.jl
rm rl.jl
mv tmp.py rl.py
vim modeling.md
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u ~/.config/nvim/nightly.vim test.py
build/bin/nvim
cd Xdir
rm -rf Xdir
cd ../__pycache__
git restore -s HEAD normal.c
rg "normal_redraw"
vim ../../test/functional/ui/float_spec.lua
rm test.py
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -S src/nvim/tmp
sudo TEST_FILE="test/functional/ui/float_spec.lua" TEST_FILTER=".*13991" make functionaltest
mv tmp.vim ../..
which python
conda activate ibp
git add normal.c
git restore --staged ../clint.py
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -S src/nvim/tmp.vim
cd test/functional/ui
nv float_spec.lua
vim float_spec.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC 
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC tmp.vim
cd ../../.
cd ../src/nvim
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -S tmp.vim
rg "w_pos_changed"
nv window.c
git reset --hard 57a7f1b41
git checkout conceal_redraw
cd repos/paper-criticalperiods_tics_response
cd Seagate\ Portable\ Drive
cd ~/.config/
mkdir config-git
cd config-git
git remote set-url origin https://github.com/chentau/dotfiles
git remote add origin https://github.com/chentau/dotfiles
git satus
rm init.el
cp -r ../kitty .
cp -r ../ranger .
cp -r ../i3 .
cp -r ../nvim .
cp -r ../rofi .
cp -r ../tmux .
cp -r ../wal .
cp -r ../zathura .
cp -r ../polybar .
rm .zsh*
cp ~/.zsh* .
ls 0-la
vim zsh_hist
rm .zsh_history
git add --all
git commit -m "update"
rm denseV2_32_.5drop_500_wExtraction.py
cd Scripts
vim lock
rm .zcompdump
rm .zcompdump.lotus.100881
cd mpl
du neovim -sh
git checout master
git branch virt_conceal
git checkout virt_conceal
nv screen.
rg "\->Rows"
rg "\->Rows ="
nv ui_compositor.c
nv grid_defs.h
git push origin float_resize
git rebase -i HEAD^
git rebase -i master
git branch -D conceal_redraw
vim Rows
rm Rows
rm testdir/.swo
rm testdir/.swp
rm testdir/otherName
ssh -p 22022 -N -L dromey 8080:localhost:8888
git branch win_line_refactor
git branch -D win_line_refactor
git branch winline_refactor
maim -s > ~/Pictures/tmp.png
git checkout cmdline_completion
nv ex_getln.c
git stash drop stash@{8}
git checkout float_resize
git restore -s HEAD src/clint.py
git restore -s HEAD ../clint.py
git add screen.c
vim ../../tmp
nv -u NORC tmp
rg "snapshot_util" ../../test
rm .test.py.un~
sudo TEST_FILE="test/functional/ui/float_spec.lua" TEST_FILTER=".*resized" make functionaltest
sudo TEST_FILE="test/functional/ui/float_spec.lua" make functionaltest
ln -s /usr/bin/python /usr/bin/python3
ln -s /usr/bin/python3 /usr/bin/python
sudo ln -s /usr/bin/python3 /usr/bin/python
ls /usr/bin/
ls -la /usr/bin/ | grep python
nv nbtui/parser.py
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -S resize.vim
nv -u NORC
git push -f origin float_resize
nv ../../test/functional/ui/float_spec.lua
git branch treesitter-messages
cd ..//..
cd runtime/lua
cd vim
vim highlighter.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC -S tmp
ssh -p 22022 -X dromey
git branch extmark_tab
nv -S tmp
rg "xmalloc("
rg "xmalloc"
rg "xmallocz"
rg "xcalloc"
ssh -p 22022 siriu
git remote origin get-url
scp 3-analyses-final.R sirius:~/work-directory/
scp -P 22022 3-analyses-final.R sirius:~/work-directory/
git diff 2-extract-fscores.R
git diff 4-cross-validation.R
git diff 6-processing.R
cd ../data
mv full.csv full_backup.csv
mv full_tmp.csv full.csv
rm irt_full4.Rds
zathura monos2.pdf
rm monos2.pdf
cd ../analyses
git add analyses/
git add README.md
git add full.csv
git add data/full.csv
git commit -m "Polishing analyses for paper, and updating data to newest version"
vim psyarxiv-readme.md
git add paper.tex
git commit -m "Fixing final review comments"
du -sh .
git commit -m "Correctly splice extmarks on tab with noexpandtab set"
vim tmp-lua-doc
git branch extmark_complete
git checkout extmark_complete
maim -s > irl_post_cor.png
maim -s > irl_exp_design.png
maim -s > rw_lr_results.png
maim -s > rw_sens_results.png
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC tmp.lua
sudo TEST_FILE="test/legacy/019_smarttab_expandtab_spec.lua" make functionaltest
rg "lbr_chartabsize"
vim charset.c
git branch -D float_resize
mv Workshop.pdf rl.pdf
mv rl.pdf ../repos/bayesian-workshop
cd tony
mv Workshop.pdf ../repos/bayesian-workshop/rl.pdf
cd ../repos
maim -s > tmp_hist.png
feh tmp_hist.png
nv notes.md
sudo kill 235837
sudo kill -9 235837
ps aux | grep gdb
sudo kill -9 235838
nv ../../tmp
sudo gdb -tui -p 242412
kill 242412
kill -9 242412
git restore -s master edit.c
git commit -m "merge"
git stash pop stash@{2}
tmux -s hello
q
l;s
git commit -m "updates"
unzip osfstorage-archive.zip
cd osf
scp -P 22022 sirius:~/work-directory/irt_abilities4.csv .
mv irt_abilities4.csv ~/Downloads
scp -P 22022 sirius:~/work-directory/irt_abilities_4.csv .
mv irt_abilities_4.csv irt_abilities4.csv
mv *.R ~/repos/paper-criticalperiods_tics_response/analyses
rm osfstorage-archive.zip
rm psyarxiv-readme.md
rm Downloads.Rproj
rm full.csv
rm irt_abilities4.csv
cd ../repos/paper-criticalperiods_tics_response
git commit -m "final revision of scripts (hopefully")
git commit -m "final revision of scripts (hopefully)"
cd whichenglishdata
du -sh paper-criticalperiods_tics_response
cd analyses
vim 6-processing.R
git add 6-processing.R
git commit -m "more comments"
rm tmp_hist.png
scp -P 22022 dromey:~/identity-expression/tmp.png .
sudo apt search zathura
sudo apt install zathura-djvu
vim review.md
sudo apt install exuberant-ctags
ctags -R -f .git/.tags
ls -la .git
ctags -R -f .git/.tags .
vim .git/.tags
mv .git/.tags .
rm .tags
sudo TEST_FILE="test/functional/legacy/019_smarttab_expandtab_spec.lua" make functionaltest
git push origin extmark_tab
fd --name "edit.c"
fd "edit.c"
fd "edit.c" ../..
fd "edit.c" ../
fd --hidden "edit.c" ..
fd "edit.c" -h
fd "edit.c" -H
cd nvim/src
cd .vim-src
rm -rf .vim-src
ctags -R .
ctags -uR .
ctags -h
ctags --help
ctags -R --file-scope=yes .
man ctags
ctags -R --file-scope=yes --extra=F .
sudo apt search universal-ctags
sudo apt remove exuberant-ctags
which ctags
sudo apt install universal-ctags
rg "ins_tab" tags
git checkout maser
git branch -D extmark_setlines
git stash drop stash@{5}
ld
git checkout winline_refactor
git stash pop stash@{1}
chmod o+w neovim/
mkdir o+w build
rm o+w
rm -rf o+w
chmod o+w build/
chmod g+w build/
sudo chmod o+w build/
sudo chmod g+w build/
chmod -R 777 build/
sudo chmod -R 777 build/
sudo chmod -R 777 .deps
sudo chmod -R 777 neovim/
CC=clang make CMAKE_FLAGS="-DCLANG_ASAN_UBSAN=ON"
vim CMakeLists.txt
cd ../paper-criticalperiods_tics_response
git reset --hard master
ls | grep indent
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/screen.c
kill 440878
ps aux | grep jupyter
ps aux | grep 873667
kill 873667
``   \
f
cd moral-disengagement/exp1
git branch extmark_blockpaste
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*blockwise paste" make functionaltest
git commit -m "Send correct buffer events on blockwise paste with nonuniform line lengths"
git push origin extmark_blockpaste
git commit --amend "Extmarks: correct buffer events on blockwise paste"
git commit --amend -m "Extmarks: correct buffer events on blockwise paste"
git push -f origin extmark_blockwise
cd eval/funcs.c
git commit -m "fix rebase"
nv option.c
git add option.c
nv eval/funcs.c
git add eval/funcs.c
git checkout extmark_tab
nv 
git push -f origin extmark_tab
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u ~/.config/nvim/nightly.vim tmp.py
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim -u NORC tmp
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim tmp
nv screen.c
CC=clang make CMAKE_FLAGS="-DCLANG_ASAN_UBSAN=ON" CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/repos/neovim"
v
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim tmp
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u ~/.config/nvim/nightly.vim tmp
sudo CC=clang make CMAKE_FLAGS="-DCLANG_ASAN_UBSAN=ON"
cc --version
which cc
clang
cd .vim
cd plugged/nvim-treesitter
cd parser/ls
cd parser/
rm -rf ~/local
ls ~/local
ls ~/.local/share/nvim/plugged
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u ~/.config/nvim/nightly.vim tmp.py
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u ~/.config/nvim/nightly.vim
git checkout extmark_blockpaste
git branch -D extmark_tab
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*tab" make functionaltest
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*blockwise" make functionaltest
git restore -s HEAD ops.c
git add ops.c
git push -f origin extmark_blockpaste
vim particle.py
vim ~/.config/nvim/nightly.vim
jl
ls traits
mv Manifest.toml traits/
mv Project.toml traits/
julia --project=traits
cp traits/* .
julia -i filter.jl --project=traits
nv ls
chmod u+x nvim.appimage
mv nvim.appimage ~/.local/bin/nvim-nightly
git branch -D extmark_blockpaste
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u NORC tmp
top -p 1312767
top -p 1319454
top -p 1323114
top -p 1329663
top 1329975
top -p 1329975
top -p 1329775
top -p 1330026
ps aux | grep nvim
top -p 1330146
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/screen.c
vim binrRoeQS4aGa.bin
mv binrRoeQS4aGa.bin traverse.lua
mv traverse.lua ../repos/neovim/
echo $LUA_PATH
chmod u+x traverse.lua
sudo apt search fzf
rm binrRoeQS4aGa.bin
sudo apt update fzf
sudo apt upgrade fzf
fzf --version
cd ~/.local
rg "fzf"
fd "fzf"
sudo apt uninstall .fzf
sudo apt uninstall fzf
sudo apt remove fzf
sudo apt distclean
sudo apt --clean
cd .fzf
./install
mv .fzf ../.local
mv .fzf fzf
nv .zshrc
echo $FZF_DEFAULT_COMMAND
FZF_DEFAULT_COMMAND="fd" fzf
FZF_DEFAULT_COMMAND="fdfind" fzf
export FZF_DEFAULT_COMMND=fdfind
fzf
cd ../repos/neovim
sudo gdb VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdb build/bin/nvim VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdb build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdb --args build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdbserver :1234 build/bin/nvim  -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdbserver :1234 build/bin/nvim VIMRUNTIME=runtime -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo gdb build/bin/nvim
VIMRUNTIME=runtime sudo gdbserver :1234 build/bin/nvim VIMRUNTIME=runtime -u ~/.config/nvim/nightly.vim src/nvim/eval.c
sudo VIMRUNTIME=runtime gdbserver :1234 build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
cd ~/repos/neovim/runtime/lua/vim
cd treesitter
rg "on_reload"
rg "on_reload" ../..
gdb -tui
nv memory.c
rg "iter\_children"
rg "iter_children"
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u tmp.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u NORC tmp.lua
rg "decor_providers"
top -p "$(pgrep "nvim" | tail -1)"
nv log
gdb 
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u NORC tmp.lua
VIMRUNTIME=runtime gdbserver :1234 build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
gdb
sudo apt install gparted
gparted
vim treesitter.lua
build/bin/nvim tmp.lua
vim traverse.lua
ls treesitter
cp traverse.lua runtime/lua/vim/treesitter
cd ~/.ssh
vi github_pat
cd ~/.git
nv ~/.git-credentials
cd ~/repos/neovim
git reset --hard 1cd42a1
rm runtime/lua/vim/treesitter/traverse.lua
sudo make functionaltest
fd "core"
cd test/functional/core
cd runtime/lua/vim/
cd =
vim treesitter/highlighter.lua
git branch treesitter-leak
git checkout loc_list_crash
git push origin loc_list_crash
git push -f origin loc_list_crash
mv Trust_Game_TEMPLATE_11-6-2019\ \(1\).qsf Trust_Game.qsf
rm Trust_Game.qsf
nv treesitter/highlighter.lua
git restore 
git restore -u
git restore treesitter/highlighter.lua
git restore treesitter/query.lua
git branch -D loc_list_crash
cd .local
\rm julia-1.5.3-linux-x86_64.tar.gz
mv julia-1.5.3/ ..
cd julia-1.5.3
rm -rf julia-1.5.3
mkdir apps
cd apps
git clone https://github.com/JuliaLang/julia.git 
git clone -b release-1.6 --single-branch https://github.com/JuliaLang/julia.git 
./julia
ln -s ~/.local/bin/julia ./julia
ln -s ./julia ~/.local/bin/julia
/usr/bin/julia
ln -s usr/bin/julia ~/.local/bin/julia
ls -la ~/.local/bin/
git fetch origin release-1.5
git pull origin release-1.5
git reset --hard f25d9885f6
git branch -r
git remote set-branches origin release-1.5
git remote set-branches --add origin release-1.5
git remote set-branches origin master
git fetch origin release-1.5:release-1.5
git checkout release-1.5
cd /usr/bin
down
mv julia julia16
julia --project=. -i model.jl
maim -s > filter_post.png
nv ~/.config/nvim/init.vim
rg "diffput"
nv ex_docmd.c
mkdir ~/.config/nvim/lua
cp ../../traverse.lua ~/.config/nvim/lua/
ls ../todolist.nvim
ls ../todolist.nvim/lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
rm resize.vim
vim tmp.vim
rm tmp.vim
vim testrc.vim
rm testrc.vim
rm vim-8.1.0892.patch
filter.jl
nv model.jl
which julia
julia16 --project=. -i filter.jl
julia16
which julia16
ls -la ~/.local/bin/julia16
nv traverse.lua
rm traverse.lua
nv tmp.lua
unzip luatraverse-3931ed7eb9ce.zip
rm luatraverse-3931ed7eb9ce.zip
cd luatraverse-3931ed7eb9ce
nv luatraverse.lua
mv luatraverse-3931ed7eb9ce ltraverse
mv ltraverse ~/repos/neovim
mv ltraverse luatraverse
cp -r luatraverse .deps/usr/share/lua/5.1
sudo cp -r luatraverse .deps/usr/share/lua/5.1
vim luatraverse.lua
nv init.lua
cd share/lua/5.1
cd luacheck
vim dump.lua
mv luatraverse.lua ..
sudo mv luatraverse.lua ..
sudo mv dump.lua ..
rm -rf luatraverse
sudo rm -rf luatraverse
nv dump.lua
cd luatraverse
cd examples
vim luastate.lua
cd .deps/usr/share/lua/5.1
wget https://raw.githubusercontent.com/alexbfreeman/lua-traverse/master/gc.lua 
sudo wget https://raw.githubusercontent.com/alexbfreeman/lua-traverse/master/gc.lua 
nv ts.lua
git checkout treesitter-leak
cd ../../../..
git branch extmark_retab
sudo gdb
nv src/nvim/screen.c
git commit -m "extmark: fixes for noexpandtab"
git diff HEAD
git diff HEAD master
git diff master HEAD
git checkout extmark_retab
git diff HEAD HEAD~
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u NORC tmp
git push origin extmark_retab
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*retab" make functionaltest
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*tab with" make functionaltest
git push -f origin extmark_retab
vim ~/.gitconfig
ls -la | grep git
nv .git-credentials
juila
rg "luado"
rg "ex_luado"
ssh
vi tmp.py
git branch -D extmark_retab
git branch -D extmark_complete
git branch extmark_sub
git commit -m "extmark: correct extmark_splice call with inccommand"
git push origin extmark_sub
git branch extmark_luado
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u ~/.config/nvim/nightly.vim tmp
git commit -m "extmark: splice extmarks on :luado"
git push origin extmark_luado
rg "deleted_bytes2"
git sstatus
ls .deps
cd .deps
cd usr
cd share
cd 5.1
fd "lpeg" -r
fd "lpeg"
find . -type d --name "lpeg"
find . -type d "lpeg"
find . -type d -name "lpeg"
cd usr/lib/luarocks/rocks-5.1/lpeg
nv tmp.pyt
git staut
cd ../repos/moral-disengagement/exp1
nv memline.c
git branch extmark_delbytes
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/regexp.c
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*inccom" make functionaltest
git push -f origin extmark_sub
git config --global core.editor "vim"
nv ~/.gitconfig
julia --project=. -i filter_static.jl
git commit -m "
git branch nvim_buf_swap_region
git checkout nvim_buf_swap_region
git rebase extmark_sub
nv regexp.c
git add regexp.c
git rebase --skip
git checkout extmark_luado
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*luado" make functionaltest
sudo TEST_FILE="test/functional/lua/commands_spec.lua" TEST_FILTER=".*luado" make functionaltest
man reset
nv lua/executor.c
git push -f origin extmark_luado
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*substitute" make functionaltest
python3 tmp.py
mkdir ../../foobar
cp tmp.py ../../foobar/
mv tmp.py level1.py
cd ../../foobar
vim level2.py
python3 -i level2.py
mv level2-1.py
mv level2_1.py
mv level2.py level2-1.py
vim level2-2.py
python3 level2.py
git diff -- treesitter/query.lua
python3 level2-2.py
python3 -i level2-2.py
python --version
python2 --version
vim level3-1.py
python3 -i level3
python3  level3-1.py
python3 -i level3-1.py
vim level3-2.py
python3 -i level3-2.py
rm Trust+Game+TEMPLATE+11-6-2019_April+13,+2021_13.22.zip
rm Trust_Game_TEMPLATE_11-6-2019.qsf
zathura paper.pdf
git branch extmark_delbytes_move
rg "op_move"
rg "ex_mo"
nv ex_cmds.lua
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*flushes" make functionaltest
git commit -m "flush curbuf->deleted_bytes2 after calling do_move"
git push origin extmark_delbytes_move
nv ../../
git checkout extmark_delbytes_move
rg "extmark_splice"
nv level3-3.py
python3 -i level3-3.py
cp Academic_CV.pdf ~/Documents/misc
cp Academic_CV.pdf ../repos/website
rm cv.pdf
nv index.html
feh me.png
git add me.png
git add cv.pdf
git remote set-url origin github.com/chentau/chentau.github.io.git
git remote set-url origin github.com/chentau/chentau.github.io
git remote set-url origin https://github.com/chentau/chentau.github.io
cd _posts
nv 2020-04-13-Autodiff.md
rm 2020-09-24-Inverse-RL.md
cd ~/repos
git clone https://github.com/tree-sitter/tree-sitter-julia.git
cd tree-sitter-julia
sudo apt search node
sudo apt search nodejs
sudo apt install nodejs
sudo apt install npm
nv parser.c
nv grammer.js
nv grammar.js
npm i tree-sitter-cli
git push -f origin extmark_delbytes_move
git branch extmark_delbytes_join
git branch -D extmark_delbytes_join
git branch extmark_join
git checkout extmark_join
cd ../moral-disengagement/exp1
cd Dwn
mv Trust+Game+TEMPLATE+11-6-2019_April+13,+2021_19.34.zip ../repos/moral-disengagement/exp1/pilot.zip
unzip pilot.zip
mv Trust\ Game\ TEMPLATE\ 11-6-2019_April\ 13,\ 2021_19.34.csv pilot.csv
mv filter.jl filter_post.png filter_static.jl models
mv model.jl models
nv particle.py
rm particle.py
mkdir assets
mv Project.toml models
mv Manifest.toml models
nv rl.py
mv rl.py models
vim choice_dist.py
rm choice_dist.py
mv dealers.ipynb assets
mv pilot* data
nv proccess.py
rm proccess.py
git branch extmark_delete
cd runtime/lua/vim
nv treesitter.lua
npm init
tree-sitter
ls ./node_modules
ls ./node_modules/.bin
./node_modules/.bin/tree-sitter
./node_modules/.bin/tree-sitter generate
cd repos/tree-sitter-julia
nv ~/.zshrc
nv testing.jl
git remote add base
git remote add base https://github.com/tree-sitter/tree-sitter-julia
git remote origin
git remote set-url origin https://github.com/chentau/tree-sitter-julia
ts generate
ts parse testing.jl
mv slippi ~/.local/bin
chmod u+x ~/.local/bin/slippi
nv ~/todo.md
ls ~/.ssh
ls ~/.ssh/config
cat ~/.ssh/config
git checkout extmark_delete
git push origin extmark_delete
git push -f origin extmark_delete
git checkout extmark_sub
git branch -D extmark_sub
git branch -D extmark_luado
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*" make functionaltest
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*incc" make functionaltest
git commit -m "tests"
nv ../../test/functional
git commit -m "t2"
git commit -m "retrigger ci"
git push origin extmark_delbytes
build/bin/nvim --versino
build/bin/nvim --version
cd repos/nevoim
nv edit.c
vim ~/todo.md
maim -s | xsel -b
sudo apt uninstall xsel
sudo apt remove xsel
sudo apt install xclip
rm filter_post.png
vim rl.py
mv todo.md .todo.md
vim .todo.md
git log | grep gbb7d37
git restore -s HEAD ex_cmds.c
git restore -s HEAD src/nvim/ex_cmds.c
git show gbb7d3790b
git log gbb
git log gbb7d3790b
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim --version
git log g63b64ebab
git log HEAD
git log HEAD -n 1
git branch extmark_paste
vim tmp.c
rm tmp.c
vim paths
rm paths
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim tmp.py
nv tmp1.py
cd ~/.config/i3
vim ops.c
git commit -m "fix buffer updates on visual paste"
git branch extmark_setlines
git diff extmark_paste master
nv api/buffer.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim tmp
nv mark.c
git commit -m "refactor set_lines to use extmark_splice"
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*visual" make functionaltest
nv ../../test/functional/lua/buffer_updates_spec.lua
git push origin extmark_paste
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER="nvim_buf" make functionaltest
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*set_lines" make functionaltest
mv exp1 pilot
mv Trust_Game_motivated_exp1_May\ 6,\ 2021_17.25.csv ../repos/moral-disengagement/exp1/data
vim Trust_Game_motivated_exp1_May\ 6,\ 2021_17.25.csv
cp process.py ../../exp1/data
mv Trust_Game_motivated_exp1_May\ 6,\ 2021_17.25.csv exp1.csv
unzip Trust_Game_motivated_exp1_May+6,+2021_17.25.zip
unzip Trust_Game_motivated_exp1_May+6,+2021_18.12.zip
mv exp1.csv exp1_old.cs
mv exp1_old.cs exp1_old.csv
mv Trust_Game_motivated_exp1_May\ 6,\ 2021_18.12.csv ../repos/moral-disengagement/exp1/data/exp1.csv
cp ../../pilot/data/*.ipynb .
git commit -m "make get_region_bytecount end-exclusive"
git push origin extmark_setliens
git push origin extmark_setlines
nv normal.c
git push -f origin extmark_paste
git rebase
git checkout extmark_paste
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim tmp1
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u ~/.config/nvim/nightly.vim tmp.py
nv tmp1
nv tmp
nv src/nvim/eval.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u ~/.config/nvim/nightly.vim src/nvim/eval.c
git branch -D extmark_paste
git checkout extmark_setlines
sudo TEST_FILE="test/functional/lua/commands_spec.lua" make functionaltest
git push -f origin extmark_setlines
sudo TEST_FILE="test/functional/legacy/011_autocommands_spec.lua" make functionaltest
conda activate cresd
cd Documents/misc
mkdir taxes
mv 2019_TaxReturn.pdf taxes/2019.pdf
nv models.jl
ls ../pilot/models
cp ../pilot/models/*.toml .
ipython -i models.py
which pip
pip install pystan
stan
mkdir models
mv *.stan models
rm Project.toml
rm Manifest.toml
nbtui bayesian.ipynb
xdg-open hierarchical_models.nb.html
cd exp12
rsync -vz -n -e "ssh -p 22022" models/ dromey:moral-disengagement/models
rsync -vz -n -e "ssh -p 22022" models dromey:moral-disengagement/models
rsync -vz -n -e "ssh -p 22022" models dromey:moral-disengagement/
rsync -vzr -n -e "ssh -p 22022" models dromey:moral-disengagement/
rm model.tex
mv modeling.md minjae
mv review.md minjae
mv exp1/* ..
mv data moral-disengagement
mv models.jl moral-disengagement
mv models.py moral-disengagement
mv tmp.py moral-disengagement
mv exp1.Rproj moral-disengagement
mv build moral-disengagement
mv models moral-disengagement
mv *.csv exp1
rm models.jl
rsync -vzr -n --exclude pilot --exclude minjae -e "ssh -p 22022" . dromey:moral-disengagement/models
rsync -vzr -n --exclude pilot --exclude minjae --exclude __pycache__ -e "ssh -p 22022" . dromey:moral-disengagement/models
rsync -vzr -n --exclude pilot --exclude minjae --exclude __pycache__ --exclude build -e "ssh -p 22022" . dromey:moral-disengagement/models
rsync -vzr --exclude pilot --exclude minjae --exclude __pycache__ --exclude build -e "ssh -p 22022" . dromey:moral-disengagement/models
nautilus
vlc
ls /media/tony
mount /dev/sdc /media/tony/seagate
sudo mount /dev/sdc /media/tony/seagate
sudo mount /dev/sdc /media/tony/tmp
sudo mount -t msdos /dev/sdc /media/tony/tmp
mount -h
sudo fdisk -l
sudo mount /dev/sdc1 /media/tony/tmp
cd /media/tony
cd .gem_log_files
cd 53215y251uy23s
vlc aukb-94.mp4
vlc sg_12.mp4
vlc aaliyah_veruca_k.mp4
vlc xhamster.com_2452658_kissing_103_240p.mp4
umount tmp
sudo umount /dev/sdc1
rm -rf exp1
man xset r
xset r rate 220 40
man xset
xset r rate 220 10
xset r rate 220 25
xset r rate 220 30
ls /dev/null
pip install ipython
pip3 install ipython
cd repos/moral-disengagement/exp1
cd repos/moral-disengagement/
sudo apt install htop
rsync -vzr -n -e "ssh -p 22022" models dromey:moral-disengagement/models
rsync -vzr -e "ssh -p 22022" models dromey:moral-disengagement/models
ls models/
mv st_hist.png pilot
mv *.png assets
mv * ../pilot
ls | grep csv
mv Trust_Game_motivated_exp1_May+19,+2021_18.45.csv ../repos/moral-disengagement/data/exp1/data.csv
cd data/exp
rm cleaned.csv
cd ~/Documents/misc
mkdir credit
mkdir credit/2021
mv TransUnion\ Credit\ Report.pdf credit/2021/transunion.pdf
rsync -vzr --exclude pilot --exclude minjae --exclude __pycache__ --exclude build -e "ssh -p 22022" . dromey:moral-disengagement
rsync -vzr -n -e "ssh -p 22022" models/ dromey:moral-disengagement/models
rsync -vzr -e "ssh -p 22022" models/ dromey:moral-disengagement/models
cd minjae
scp -P 22022 dromey:~/moral-disengagement/models.py .
mv models.py ../
zathura model.pdf
mv models.py models_old.py
python3 -i models_old.py
cd ../../repos/moral-disengagement
ls ../ActionWords_Bayes
ls minjae
ls pilot
ls pilot/data
scp -P 22022 models.py dromey:~/moral-disengagement/models.py 
nv ~/.todo.dm
rm pcbi.1000291.s003.eps
scp -P 22022 models.py dromey:~/moral-disengagement/tmp_trust.py
scp -P 22022 models.py dromey:~/moral-disengagement/tmp_trust.csv
scp -P 22022 models.py dromey:~/moral-disengagement/tmp_choice.csv
R
nv models_old.py
nv popupmnu.c
git checkout c418e43d9a3bfd3186fc332d83130077a49ec7e9'
git checkout c418e43d9a3bfd3186fc332d83130077a49ec7e9
vim paper.tex
vim analyses/3-analyses-final.R
watch stty size
nv ~/.config/kitty/kitty.conf
ps aux | grep zoom
cat models.R
scp -P 22022 dromey:~/moral-disengagement/models/tmp1.stan
scp -P 22022 dromey:~/moral-disengagement/models/tmp1.stan models/
cd traits
cp filter.jl ../../
vim filter.jl
unzip julia-1.6.1-linux-x86_64.tar.gz
tar -xvzf julia-1.6.1-linux-x86_64.tar.gz
rm julia-1.6.1-linux-x86_64.tar.gz
ls ~/.local
ls ~/.local/share
cd julia
cp julia ~/.local/bin
ln -s ~/.local/apps/julia/usr/bin/julia16 ~/.local/bin/julia16
cp -r julia-1.6.1 ~/.local/apps
cd julia-1.6.1
cd bin
ln -s ~/.local/apps/julia/usr/bin/julia ~/.local/bin/julia
ls -la ~/.local/bin
rm ~/.local/bin/julia
ln -s ~/.local/apps/julia-1.6.1/bin/julia ~/.local/bin/julia
where julia
rm -rf julia
ls ~/.julia
cd ~/.julia
cd registries
cd General
cd environments
cd v1.6
man setsid
sudo shutdown now
las
tmux ls
julia -i filter.jl
lsa
julia -i filter.jl --project=.
python3 -i model_results_notes
rm reviews.md
sudo apt install qbittorrent
nv ~/repos/neovim/src/nvim/ex_cmds.c
rg "ex_delete\
"
rg "ex_delete"
git checkout extmark_delbytes
git diff HEAD^2
git diff HEAD^^
git diff HEAD~3
git diff HEAD~4
git reset --hard HEAD~3
git commit -m "Manually zero out deleted_bytes2 when substituting"
nv ex_cmds.c
nv tmp.py
pgrep zoom
nv linear_algebra.tex
nv full.stan
scp -P 22022 models/full.stan dromey:~/moral-disengagement/models/
cd paper-criticalperiods_tics_response
nv ~/.config/nvim/nightly.vim
ls ~/.vim/plugged
ls ~/.vim/plugged/vim-slime
using DataFrames
using Statistics
using Distributions
nv filter_nested.jl
nv modeling_results.md
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" make functionaltest
sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER="delbytes" make functionaltest
nv decoration.c
rg "curbuf-
rg "curbuf->deleted_bytes2"
nv extmark.c
nv filter.jl
julia --project=. -i filter.jl
julia --project=. -i filter_nested.jl
scp -P 22022 models/full_hijacking.stan dromey:~/moral-disengagement/models/
scp -P 22022 models.R dromey:~/moral-disengagement/
nv ops.c
nv base.stan
nv process.py
mv cleaned.csv exp1
rm Untitled1.ipynb
cd ....
zathura identity_expression_expression_identity\ \(3\).pdf
zathura identity_expression_expression_identity\ \(3\).pdf &
nv
sudo make lint
git push -f origin extmark_delbytes
nv filter_full.jl
top
zathura rl.pdf
man nmclid
nmcli con add eduroam
nmcli con up eduroam
nmcli con show
nmcli d wifi so
man nmcli
timedatectl
sudo timedatectl set-timezone America/New_York
xinput list-props 3
nv ~/.config/i3/config
xinput list-props 20
xinput set-prop 13 357 1
man setxkbmap
nv models.py
nv ~/.todo.md
vim ~/.config/nvim/init.vim
cd .config/nvim
diff init.vim nightly.vim
mv init.vim old.vim
nv nightly.vim
mv nvim.appimage nvim
chmod u+x nvim
mv nvim ~/.local/bin
nvim
mv nightly.vim init.vim
cd ~/.local/share/nvim/plugged/nvim-treesitter
git reset --hard HEAD
ipconfig
ip link show
ip show
man ip
sudo apt install tldr
tldr grep
tldr ip
ip address
ifconfig
arp -e
ping 192.168.1.255
vim ~/.budget.md
nv ~/.recipes.md
vim ~/.recipes.md
nmcli d wifi up eduroam
nmcli d wifi connect eduroam
nmcli list
nmcli show
nmcli d wifi connect BostonCollege
nmcli d wifi show
nmcli d list
nmcli connection dd\
: 1625673086:0;nmcli connection add \
: 1625673088:0;nmcli d wifi
nmcli connection add \\
type wifi con-name eduroam ifnme wlp2s0 ssid eduroam -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity chenauy@bc.edu \\
02-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
 802-1x.private-key-password Mintman777g  802-1x.private-key ~/key.pem
nmcli connection add \\
type wifi con-name eduroam ifname wlp2s0 ssid eduroam -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity chenauy@bc.edu \\
02-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
802-1x.private-key-password Mintman777g  802-1x.private-key ~/key.pem
nmcli connection add \\
type wifi con-name eduroam ifname wlp2s0 ssid eduroam -- \\
wifi-sec.key-mgmt wpa-eap 802-1x.eap tls 802-1x.identity chenauy@bc.edu \\
802-1x.ca-cert ~/ca.pem 802-1x.client-cert ~/cert.pem \\
802-1x.private-key-password Mintman777g  802-1x.private-key ~/key.pem
nmcli d wifi list
nmcli d wifi connect Boston\ College
cd ~/.config/nvim/
cd color
vim colors/wal.vim
cd ../pilot
wc for_analysis.csv
wc cleaned.csv
cd ../../data/exp12
cd ../../data/exp1
wc data.csv
nbtui
pip install nbtui
conda env list
nbtui Untitled.ipynb
cd foobar
cd implementations
cd BHC
vim bhc.py
cd Niu_Dy_Gharamani2012
vim sampler.py
xinput set-prop 13 357 0
xinput list-props 17
xinput set-prop 16 359 1
vim filter_nested.jl
xrandr --output eDP-1-1 --brightness .35
xinput set-prop 357 0
xinput list-props 16
cd ../neovim/src/nvim
rm filter.jl
vim filter_analytical.jl
julia --project=. -i filter_analytical.jl
vim base_hierarchical.stan
vim ~/.ssh/config
quit
mv exp1/cleaned.csv exp1/cleaned_old.csv
ls -la exp1
head out.csv 5
cat out.csv | head
cat out.csv
cat bonuses.csv | head
lsd
rm Slippi_Online-x86_64.AppImage
cd .local/bin
mv Slippi_Online-x86_64.AppImage slippi
mv ~/Downloads/Trust_Game_motivated_exp2_July+21,+2021_09.06.csv .
mv Trust_Game_motivated_exp2_July+21,+2021_09.06.csv data.csv
mv ~/Downloads/Trust_Game_motivated_exp1_May+6,+2021_18.12.zip exp1
mv process.py exp1
cp ../Untitled.ipynb .
mkdir kevin
mv mv utilities_model.py kevin
mv fairness1.csv kevin
cat fairness_model.py
mkdir fairness
mv fairness* fairness
mv fairness_* fairness
rm environment.yml
cat simulation.py
mv simulation.py kevin
mv speeding_data.csv fairness
rm model.aux
rm model.log
rm model.pdf
vim notes.adoc
feh tmp.png
rm tmp.png
mv analyze_fairness_sims.R fairness
mv kevin old
mv fairness old
mv deprecated old
ls model_results_notes
mv preproc_fairness.R old/fairness
mv model_results_notes old
mv notes.adoc old/model_results_notes
mv model.text old/model_results_notes
mv model.tex old/model_results_notes
cat likelihood_ks_model.py
mv likelihood_ks_model.py old
cat actions_words.Rmd
mv actions_words.Rmd old/
mv mainv3.py old
mv data/ old/kevin
mkdir data
cp exp1/pilot.csv data
mkdir pilot
mkdir exp`1
mkdir exp1
mv pilot.csv pilot
cat models.py
mv ~/Downloads/CREDs_Bayes_button_exp_1_July+19,+2021_08.31.csv .
mv CREDs_Bayes_button_exp_1_July+19,+2021_08.31.csv data.csv
cd ../ActionWords_Bayes/data/exp1
ipython --version
mv models.py ..
f
cd data/exp1
python3 -i ../../models.py
cd -
cd ../repos/moral-disengagement
vim filter_full.jl
julia --project=. -i filter_full.jl
sudo shutodwn
mv filter* models
wal -f ~/.config/wal/colorschemes/light/cherry.json
ls ~/.config/wal/colorschemes/light
wal -f ~/.config/wal/colorschemes/light/ayt.json
wal -f ~/.config/wal/colorschemes/light/ayu.json
wal -f ~/.config/wal/colorschemes/light/desu.json
wal -f ~/.config/wal/colorschemes/light/sky.json
wal -f ~/.config/wal/colorschemes/light/gruvbox.json
vim spotify_status.py
./spotify_status.py
vim filter_seq.py
python3 -i filter_seq.py
mkdir liane-bot
wal -f ~/.config/wal/colorschemes/dark/zephyr.json
head liane_emails.csv
rm liane_emails.csv
ipython -i scrape_emails.py
julia --version
vim scrape_emails.py
ipython -i scrape_emails.py --collect_all
ipython 
mv liane_emails.txt tmp.txt
less tmp.txt
ls -la ~ | grep ipython
vim ~/.ipython
rm tmp.txt
python3 --version
python3 scrape_emails.py
less liane_emails.txt
rm filter_static.jl
ls models
julia --project=. -i models.jl
conda create --name liane-bot
pip install bs4
mkdir papers
python3 -i download_papers.py
mkdir old
mv scrape_emails.py papers
rm liane_emails.txt
mv download_papers.py papers
wc papers
ls papers | wc
ls repos/bayesian-workshop
cd bayesian-workshop
ls | grep rmd
ls | grep Rmd
fd "Rmd"
ls -la | grep Rproj
cd deep-learning-notes
zathura backprop.pdf
nvim --startuptime
help nvim
man nvim
man vim
cd exp1
feh 39d5634361031c81dc63c54f_20210729172419.jpeg
rm 39d5634361031c81dc63c54f_20210729172419\ \(1\).jpeg
curl -fsSL https://raw.githubusercontent.com/khanhas/spicetify-cli/master/install.sh -o /tmp/install.sh
sh /tmp/install.sh 1.2.1
~/spicetify-cli/spicetify --help
mv spicetify-cli ~/.local/apps
cd spicetify-cli
ln -s ~/.local/apps/spicetify-cli/spicetify ~/.local/bin/spicetify
spicetify 
cd ~/.local/bin
spicetify --help
spicetify --help | less
cd ~/
cd SpicetifyDefault
cd ~/.config/spotify/prefs
cd ~/.config/spotify/
spicetify config
fd "config.ini"
cd ~/.config/spotify
cd ~/.config/spicetify/
vim config.ini
cd Themes
mkdir Wal
cd Wal
cp ../SpicetifyDefault/* .
vim ~/.config/spicetify/config.ini
spicetify backup apply
sudo spicetify backup apply enable-devtool
spicetify -c
ls ~/.config/spotify
ls /root/.config/spicetify/config.ini
ls /root/.config/
sudo ls /root/.config/
sudo ~/.local/apps/spicetify-cli/spicetify -c
sudo ~/.local/apps/spicetify-cli/spicetify
sudo cat ~/root/.config/spicetify/config.ini
sudo cat /root/.config/spicetify/config.ini
sudoedit /root/.config/spicetify/config.ini
sudo ~/.local/apps/spicetify-cli/spicetify backup apply enable-devtool
sudo spicetify update
spicetify
cd /root
sudo cd /root
sudo ls /root/.config/spicetify
man spicetify
spicetify -h
sudo ~/.local/apps/spicetify-cli/spicetify clear
sudo rm -rf /root/.config/spicetify
cd ~/.local/apps/spicetify-cli
ls /usr/share/spotify/Apps
cd /usr/share/spotify/Apps
cd /usr/share/spotify/
chmod u+rx Apps
sudo chmod u+rx Apps
sudo chmod u+rwx Apps
chmod g+rx Apps
sudo chmod g+rx Apps
sudo chmod o+rx Apps
spicetify clear
sudo apt remove spotify
curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - 
echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
sudo apt update
sudo apt install spotify-client
sudo chmod o+rwx Apps
sudo chmod o+rwx /usr/share/spotify/Apps
cd buddy-list
sudo ls buddy-list
sudo chmod o+rwx buddy-list
ls buddy-list
sudo chmod o+rwx buddy-list/img
sudo chmod o+rwx buddy-list/css
sudo chmod -R a+rw 
ls station/
ls station
sudo chmod a+rwx * 
sudo chmod -R a+rw .
sudo chmod -R a+rwx .
cd Apps
ls -la | grep spotify
cd spotify
sudo chmod a+wr -R .
spicetify restore backup
spicetify backup apply enable-devtool
spotify
pgrep spotify
ps aux | grep spotify
pkill spotify
kill 179197
kill -9 179197
less ~/.cache/wal/colors.Xresources
spotify --version
cd repos/bayesian-workshop
fd "mixedmodels"
echo mixedmodels*
mv mixedmodels* ../bayesian-workshop
cd ../bayesian-workshop
vim color.ini
alsactl init
alsamixer
julia --project=. -i models/tmp.jl
mv data/exp2/for_analysis.csv tmp.csv
vim pe.csv
vim data/exp2/for_analysis.csv
pgrep rstudio
ps aux | grep rs
ps aux | grep rstudio
ps aux | grep rsession
pgrep rsession
pkill rsession
xdg-open mixedmodels.nb.html
xinput set-prop 16 357 0
xinput set-prop 13 362 1
rm tmp.jl
xset
rsync -nvzr -e "ssh -p 22022" models/ dromey:
rsync -vzr -e "ssh -p 22022" models/ dromey:
rsync -nvzr -e "ssh -p 22022" . dromey:~/moral-disengagement
python3 -i tmp.py
slippe
mv ~/.local/bin/Slippi_Online-x86_64.AppImage ~/.local/bin/slippi
pgrep compton
pkill pol
vim config
wal -f ~/.config/wal/colorschemes/dark/summercamp.json
sudo systemctl suspend
systemctl hibernate
ls Pictures/wallpapers
vim ~/.config/wal/colorschemes/dark/ephemeral.json
wal -f ~/.config/wal/colorschemes/dark/ephemeral.json
ls ~/.config/wal/colorschemes/dark
xinput list-props
xinput list | grep Touchpad
xinput list | grep Touchpad | awk 'BEGIN {echo $1 } END'
xinput list | grep Touchpad | awk '{print $1 }'
xinput list | grep Touchpad | awk '{print $2 }'
xinput list | grep Touchpad | awk '{print $3 }'
xinput list | grep Touchpad | awk '{print $4 }'
xinput list | grep Touchpad | awk '{print $7 }'
xinput list | grep Touchpad | awk '{print $6 }'
xinput list | grep Touchpad | awk '{print split($6, "=") }'
xinput list | grep Touchpad | awk -F[\s=] '{print $7 }'
xinput list | grep Touchpad | awk -F [\s=] '{print $7 }'
xinput list | grep Touchpad | awk -F [ =] '{print $7 }'
xinput list | grep Touchpad | awk -F '[ =]' '{print $7 }'
xinput list | grep Touchpad | awk -F '[ =]' '{print $9 }'
xinput list | grep Touchpad | awk -F '[ =]' '{print $10 }'
xinput list | grep Touchpad | awk -F '[ =]' '{print $6 }'
xinput list | grep Touchpad | awk -F '[ =]' '{print $8 }'
xinput list | grep Touchpad | awk -F '[\s=]' '{print $8 }'
man cut
xinput list | grep Touchpad | cut -d =
xinput list | grep Touchpad | cut -d '='
xinput list | grep Touchpad | cut -d '=' 1
xinput list | grep Touchpad | cut -d '=' -f 2
xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1
echo $(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)
echo "$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)"
xinput set-prop "$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)" 359 1
xinput list-props "$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)"
cd ~/.local/scripts
vim touchpad
rm touchpad
dev = "$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)"
$dev = "$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)"
dev="$(xinput list | grep Touchpad | cut -d '=' -f 2 | cut -f 1)"
echo $dev
xinput list-props "$dev" | grep "Tapping Button Mapping Enabled"
xinput list-props "$dev" | grep "Tapping Button Mapping Enabled" | cut -f 1
xinput list-props "$dev" | grep "Tapping Button Mapping Enabled" | cut -f 2
xinput list-props "$dev" | grep "Tapping Enabled" | cut -f 2
xinput list-props "$dev" | grep "Tapping Enabled" | cut -f 1
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -f 1
xinput list-props "$dev" | grep "Tapping Enabled ("
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -f 2
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -f 3
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -f 2 | cut -d " " -f 3
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -f 2 | cut -d " " -f 4
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " "
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 1
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 6
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 5
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 7
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 8
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 2
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 3
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 4
xinput list-props "$dev" | grep "Tapping Enabled (" | cut -d " " -f 4 | cut -c 2-4
sh touchpad.sh
g
mv tmp.py hgf.py
vim hgf.py
python3 -i models/hgf.py
python3 -i hgf.py
vim models.jl
cd ~/scripts
conda install pip
pip install pdfplumber
ls papers
where python3
pip install pypdf2
pip uninstall pypdf2
pip install pdfminer
pip uninstall pdfminer
pdf2text.py --version
pdf2txt.py --version
pip uninstall pdfminer.six
pip uninstall pdfplumber
pip install pdfminer.six
ls papers | grep "niemi"
ls papers | grep -e "niemi"
ls papers | grep -i "niemi"
cd old
vim pdf_to_text.py
rm pdf_to_text.py
ls | grep "py"
mv scrape_emails.py ../old
vim name
vim download_papers.py
rm fine_tune.py
zathura WB_article_NYT.pdf
rm WB_article_NYT.pdf
zathura *
zathura 0002764219850870.pdf
zathura 06_Baron-Cohen_CH06.pdf
zathura dhaliwal_paper2.pdf
zathura name
mv name categorical_race_perception.pdf
zathura categorical_race_perception.pdf
zathura natureReply.pdf
rm natureReply.pdf
zathura nsz048.pdf
zathura rela_mobi_submit_spps.pdf
zathura VictimBlamingintheCaseofRape.pdf
zathura what_we_owe_to_family.pdf
ls | less
zathura Tsoi2021.pdf
vim terminal.c
ssh -p 22022 dromey 
logout
cd ~/.fonts
mv ~/Downloads/CartographCF-DemiBoldItalic.ttf .
mv ~/Downloads/Cartograph* .
fgh
cd ~/repos/moral-disengagement
cd ~/.config/wal/colorschemes/light
mv rose.json ../dark
cd ../dark
vim moon.json
wal -f rose.json
rm moon.json
vim rose.json
cd ~/.config/nvim/colors
vim wal.vbim
wal -f ~/.config/wal/colorschemes/dark/rose.json
wal -f ~/.config/wal/colorschemes/dark/ayu.json
ls data
ls data/exp1
wal -f ~/.config/wal/colorschemes/dark/gruvbox.json
compton &
pkill compton
journalctl
lock
xrandr --output eDP-1-1 --brightness .05
rm fpsyg-08-01087-g0002.tif
vim ~/.config/nvim/colors/wal.vim
conda activate liane-biot
pytho3n
cd papers
vim Tsoi2021.pdf
cat ~/.cache/wal/colors.Xresources
tmuix
conda install sklearn
pip install sklearn
mkdir tmp
sudo apt upgrade
echo freeze > sys/power/state
vim /etc/pm/sleep.d/10_grub-common
vim /etc/pm/sleep.d/10_unattended-upgrades-hibernate
nmcli 
ls /var/log
less var/log/dmesg
less /var/log/dmesg
less /var/log/syslog
dmesg
julia --project=.
julia
julia thompson.jl
pkill zoom
ssh 
git branch pum_border
git checkout pum_border
cd ../../
rg "pum_grid"
sudo C
js
vim ~/.tmux.conf
ranger
l
vim src/nvim/evalc
nmcl i d
sudo reboot
hdajackretask
sudo apt install alsa-tools-gui
sudo apt install pavucontrol
cd /tmp
arecord -d 5 test-mic.wav
aplay test-mic.wav
sudo apt remove alsa-tools-gui
cd liane
vim tmp.csv
ssh -p 22022
node
echo "print(1 + 1)" | python3
julia -i thompson.jl
cd ../../moral-disengagement
vim models/hgf.jl
'echo "hello"'
echo "hello"
cd ../nbtui
git branch refactor
git checkout refactor
cd repos/nbuit
cat ../todo.md
nbtui a.ipynb
nbtui test.ipyn
git add cells.py
git commit -m "refactor code cells out of parser.py and clean up rendering logic"
git push origin refactor
vim requ
git branch -a
git branch -d refactor
git branch images_refactor
git checkout images_refactor
git branch folding
git checkout folding
python3 -i tmp.py scaling.png
python3 tmp.py scaling.png
kitty --version
sudo apt search kitty
vim textual.py
python3 -i testing.py
pip remove rich
pip install --uninstall rich
pip install --reinstall rich
conda install textual
where python
python3 -m pip install textual
export PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring
python3 -v -m pip install textual
pip uninstall textual
pip uninstall rich
pip install --reinstall textual
rm requirements.txt
pip uninstall nbtui
pip install --force-reinstall textual
git reset HEAD requirements.txt
git reset --hard HEAD requirements.txt
git checkout -- requirements.txt
git status]
git commit -m "bump requirements"
pip install -e .
pip install textual
python3 -i textual.py
mv textual.py test.py
git checkout mastr
git branch textual_refactor
git checkout textual_refactor
vim display.py
cd ~/.conda
cd ~/.local/miniconda3/envs/nbtui
cd x86_64-conda_cos6-linux-gnu
cd sysroot
cd lib
python3 -m textual.app
python3 -m textual
python3 -m textual.app --help
python3 -m simple
python3 -m simple.py
python3 -m textual.simple
modprobe brcmfmac
ls ../bayesian-workshop
cp ../bayesian-workshop/part2.md .
python3 -i test.py
cat part2.md
vim part2.md
python3 -i nbtui/ test.ipynb
vim textual.log
pip install --upgrade textual
python3 nbtui/ test.ipynb
vim test.py
python3 test.py
cd ../pplax
cd pplax
vim distributions.py
vim model.py
vim schedulers.py
vim variables.py
cd ../../action
cd ../../ActionWords_Bayes
python3 -i simulate.py simulate.py
pcd cd ls
cd repos/
sys
git add requirements.txt
vim setup.py
git add setup.py
git commit -m "bump"
python3 -m build
ls dist
python3 -m twine upload dist/*
cd repos
cd nbtui
vim requirements.txt
cd repos/nbtui
conda activate nbtui
nbtui test.ipynb
vim cells.py
vim nbtui/cells.py
python3 -m nbtui test.ipynb
git reset cells.py
git reset nbtui/cells.py
git stauts
git checkout -- nbtui/cells.py
setxkbmap -option caps:ctrl_modifier
xset r rate 230 30
pip install transformers
pip install torch
pip install nltk
where ipython
vim thompson.jl
python3 -i simulate.py
kill 227163
fc-list | grep -i "fira"
fc-list | less
fc-list | grep -i "ubuntu"
kill 227907
poly
kill 228832
cd ~/.config/polybar
python3 spotify_status.py
vim i3/config
cd polybar
python3 spotify_status.py -f '{song}: {artist}'
fc-list | grep "cartograph"
kill 229988
ndfg
kill 231659
kill -9 231659
vim ~/.config/polybar/config
playerctl -p spotify next
pkill polybar
pgrep polybar
kill -9 231917
polybar bar1 > /dev/null 2>&1 &
ls ~/scripts
vim touchpad.sh
mv touchpad.sh touchpad
chmod u+x touchpad
ls scripts
rm ~/.local/bin/lock
vim .zshrc
touchpad
cd scripts
mv touchpad setup
vim setup
cd moral-disengagement
vim hgf.jl
ulia
julia --project=. -i models/hgf.jl
slippi &
pip install datasets
git add Academic_CV.pdf
git commit -m "update cv"
vim style.cs
vim style.css
zathura Academic_CV.pdf
zathura resume.pdf
rm resume.pdf
vim index.html
vim popupmnu.c
scp -P 22022 train.py dromey:~/liane-bot/
scp -P 22022 papers.py.py dromey:~/liane-bot/
scp -P 22022 papers.json dromey:~/liane-bot/
ls tokenizers
rm -rf tokenizers
mkdir results
scp -P 22022 dromey:~/liane-bot/results/* results/
scp -P 22022 dromey:~/liane-bot/results/ results/
scp -P -r 22022 dromey:~/liane-bot/results/ results/
scp -P -R 22022 dromey:~/liane-bot/results/ results/
scp -r -P 22022 dromey:~/liane-bot/results/ results/
rm -rf results
scp -r -P 22022 dromey:~/liane-bot/results/checkpoint-10500 results/
ls results
mv results/* .
mv *.json results
mv *.pt results
mv *.bin results
mv results checkpoint-11000
mv checkpoint-11000 10500
mv 10500 checkpoint-10500
python3 -i generate.py
scp -P 22022 dromey:~/liane-bot/results/checkpoint-5000 .
scp -r -P 22022 dromey:~/liane-bot/results/checkpoint-5000 .
rm -rf checkpoint-10500
scp -P 22022 generate.py dromey:~/liane-bot/
python3 -i train.py
pip install jupyter
where jupyter'
where jupyter
jupyter
pip install matplotlib
pip install jupyter-lab
vim extract.py
jupyter noteboko
jupyter notebook
python3 -i extract.py
pip install parsr-client
ls papers/
vim cfg.json
scp -P 22022 papers_norefs.json dromey:~/liane-bot/
\:w
vim train.py
cd ../repos/liane-bot
scp -P 22022 papers.py dromey:~/liane-bot/
where pip
pip install flask
vim app.py
rm app.py
mkdir templates
mv index.html templates
TEMPLATE_AUTO_RELOAD=True FLASK_APP=liane_bot flask run
FLASK_APP=liane_bot flask run
python3 -i liane_bot.py
mkdir styles
rm -rf styles
mkdir static
xrandr --output HDMI-1-1 --auto --lef-of eDP-1-1
xrandr --output HDMI-1-2 --auto --left-of eDP-1-1
xrandr --output HDMI-2 --auto --left-of eDP-1-1
xrandr --output HDMI-1-2 --auto --right-of eDP-1-1
xrandr --output HDMI-1-1 --auto --right-of eDP-1-1
man xrandr
xrandr --output HDMI-1-1 --auto --left-of eDP-1-1
i3-msg workspace 2 output HDMI-1-2
i3-msg workspace 2 output HDMI-1-1
i3-msg workspace 3
i3-msg workspace 1, move workspace to output HDMI-1-1
i3-msg workspace 2, move workspace to output right
ls tp
ls tmp
ls old
mv exp1 old
mkdir exp2
mv ~/Downloads/CREDs_Bayes_button_exp_2_September+14,+2021_09.08.csv data.csv
ls exp1
cp exp1/process.py exp2/process.py
cd exp2
vim processpy
i3-msg workspace 0, move workspace to output right
cat bonuses.csv
cd results
rm -rf checkpoint-5000
scp -P 22022 dromey:~/liane-bot/results/checkpoint-2000 .
scp -rP 22022 dromey:~/liane-bot/results/checkpoint-2000 .
conda activate liane-bot
i3-msg workspace 1, move workspace to output eDP-1-1
pip install pandas
mv ~/Downloads/CREDs_Bayes_button_exp_2_September+15,+2021_09.27.csv data.csv
python3 process.py
cd repos/ActionWords_Bayes
cd tmp
vim simulate.py
xrandr --output HDMI-1-2 off
xrandr --output HDMI-1-2 --off
xrandr --output HDMI-1-1 --off
xrandr
ls Downloads
mv Cixin\ Liu\ \[FreePaidBooks.online\] threebody_problem.epub
zathura threebody_problem.epub
sudo apt search zathura-
pdf
mv threebody_problem.epub threebody
cd threebody
ls statis
ls static
ssh -p 22022 sirius
sudo snap install --classic code
fc-list | grep -i "cartograph"
/bin/python
vim generate.py
git add resume.pdf
git add index.html
git add style.css
cat robots.txt
vim robots.txt
git add robots.txt
vim sitemap.txt
cd ~/Documents
mv sitemap.xml ~/repos/website
vim sitemap.xml
git add sitemap.xml
rm google7df30bfcbf840673.html
git add google7df30bfcbf840673.html
git commit -m "update website"
cd ../blog
git difff
vim -R
git reset nvim/screen.c
git checkout -- nvim/screen.c
cd nvim
vim edit.h
cd ../../neovim
git commit -m "merge conflict"
git reflog
git checkout --hard 433bda405
git reset --hard 433bda405
vim src/nvim/edit.c
cd src/nvim/
sudo make distclean
vim fzy.lua
git commit -m "wip"
sudo CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
rg "launch.json"
fd "launch.json"
ls build
chmod -R u+x build/
sudo chmod -R u+x build/
touch build/.ran-third-party-cmake
ls -la 
sudo chmod -R u+wrx build/
ls -la build
chown build
sudo chown -R $USER build
ls -la .deps
sudo chown -R $USER .deps
a=5
a
echo $a
echo $USER
git commit -m "allow for completion items beyond just strings"
TEST_FILTER="fuzzy completion" make test
git reset requirements.txt
git commit -m "more wip and lint"
vim options.lua
rg "p_cfu"
rg "p_cst"
rg "enum"
rg "enum" -c 5
rg "enum" -n 5
rg "enum" -C 5
chmod u+x src/nvim/option.c
ls -la src/nvim
rg "vim_call_function"
rg "vim_call"
rg "funcref"
rg "completefunc"
rg "cfu"
rg "call_vim_function"
ls -la src
rg "STRCPY"
rg "vval.v_string"
rg "tv_clear"
vim eval/typval.c
rg "STRING_OBJ"
rg "string_to_cstr"
sudo make
make test
vim strings.c
rg "strlen(.*) == 1"
rg "strlen(.*) == 0"
rg "if (strlen(.*)"
rg "if \(strlen\(.*\)"
rg "if \(STRLEN\(.*\)"
ls doc
ls src
ls tmp-lua-doc
rm xtest-foo
ls runtime
ls runtime/doc
vim runtime/doc/options.txt
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER="fuzzy completion" make test
cd test
rm tmp.py
nvim -u NORC
ls /proc/sys/kernel
echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
make oldtest
ls src/nvim/testdir
vim src/nvim/testdir/test_registers.vim
make oldtest src/nvim/testdir/test_registers.vim
make src/nvim/testdir/test_registers.vim
vim src/nvim/testdir/test_ins_complete.vim
vim -u NORC tmp1
make src/nvim/testdir/test_alot.vim
vim src/nvim/testdir/test_alot.vim
make src/nvim/testdir/test_ins_complete.vim
TEST_FILE="test/functional/ui/popupmenu_spec.lua" make test
git commit -m "fix tests"
ls /usr/
ls /usr/share
ls /var/lib/snap
ls /var/lib/snapd
ls /var/lib/snapdsnaps
ls /var/lib/snapd/snaps
ls ~/.config/code
ls ~/.config/Code
cd /
fdfind "code/resources"
less src/nvim/testdir/sample.txt
rm src/nvim/testdir/sample.txt
ls -la | grep log
git branch -d extmark_delbytes
git branch -d extmark_delbytes_move
git branch -d extmark_delete
git branch -d extmark_join
git branch -d extmark_setlines
git branch -D vim-8.1.0892
git branch -D nvim_buf_swap_region
git stash drop stash@{11}
git stash drop stash@{6}
git stash drop stash@{2}
git stash drop stash@{1}
git stash drop stash@{3}
git stash drop stash@{4}
git branch -D get_text
ls /usr/share/code
ls /usr/share/
ls /var/lib
cd ~/.config/Code
cd User
snap remove code
sudo snap remove code
sudo apt install ./code_1.60.2-1632313585_amd64.deb
sudo code
ruby -v
ls .local/apps/
ls ~/local/apps
ls ~/.local/apps
mkdir ~/.local/apps/gems
sudo apt install ruby-full
gem install jekyll bundler
export PATH=$PATH:~/.local/app
export PATH=$PATH:~/.local/app/gems
export PATH=$PATH:~/.local/app/gems/bin
ls ~/.local/apps/gems/bin
export PATH=$PATH:~/.local/app/gems/bin/
echo $PATH
jekyll
ls ~/.local/apps/gems
ls ~/.local/apps/gems/gems
sudo apt install build-essential
sudo apt install zlib1g-dev
sudo apt autoremove
gem -v
gem -env
gem env
echo $GEM_PATH
echo $GEM_HOME
git rm -rf _site
ls _posts
git commit -m "gitignore fix"
git diff README.md
git rm README.md
git -f rm README.md
git rm -f README.md
git add _config.yml
git diff assets
rm assets/images/compgraph*
git remote get-url origin
git remote set-url origin https://github.com/chentau/blog
git add favicon.png
ls .vscode
git commit -m "new blog post"
git add blog/
git push origin gh
git commit -m "make math slightly bigger"
cd liane-bot
vim liane_bot.py
lxappearance
git checkout treesitter-messages
git stash@{3} pop
git stash pop stash@{3}
git checkout runtime/lua/vim/treesitter/highlighter.lua
git branch -D treesitter-messages
git commit -m "testing blog for mobile"
git commit -m "Hopefully fixing blog for mobile"
xdg-open index.html
cat index.html
xdg-open _site/index.html
jekyll sere
ls _layouts
vim _layouts/default.html
cat _site/index.html
cd repos/website/blog
cat _layouts/post.html
cat _layouts/default
cat _layouts/default.html
cat _includes/head.html
git submodule update
git submodule update --recursive
git commit --allow-empty
hello
git add _includes/head.html
git commit -m "yet more math mode fixes"
git push origin gh-pages
git add blog
git commit -m "mathjax fixes"
vim _config.yml
xinput list
xinput list-props 13
rsync -vzr -n -e "ssh -p 22022" . dromey:~/moral-disengagement
rsync -vzr -e "ssh -p 22022" . dromey:~/moral-disengagement
cd repos/liane-bot
xprop WM_CLASS
cd ../website
vim _includes/head.html
nvidia-smi
ssh -p 22022 dromey -N -L 8080:localhost:8888
vim neovim/src/nvim/eval.c
nvidia-settings
ps
ps aux
vim ~/.todo.md
echo *.lua
vim ex_cmds.lua
ls auto
ls ../build
ls ../../build
ls ../../build/src/nvim/auto
git checkout src/nvim/ex_cmds.lua
git branch -D float_excmd
export PATH=$PATH:~/.local/apps/gems/bin/
export GEM_HOME=~/.local/apps/gems
cd blog
jekyll serve
cd blog/
cd images
man xclip
maim -s > rlpi_model1.png
maim -s > rlpi_model2.png
slippi
vim undo.c
cd ../ActionWords_Bayes
cd data/exp2
mv data.csv data_old.csv
mv ~/Downloads/CREDs_Bayes_button_exp_2_October+4,+2021_11.20.csv data.csv
cd ../ActionWords_Bayes/data/exp2
less bonuses.csv
python
~
nmcli d
exit
setsid kitty
unzip Work_Sans.zip
mv WorkSans-Italic-VariableFont_wght.ttf ../.fonts
rm WorkSans-VariableFont_wght.ttf
rm Work_Sans.zip
qls
cd static
rm -rf static
TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER=".*sends updates on U" make test
TEST_FILE="test/functional/lua/buffer_updates_spec.lua" make test
git branch extmark_Undo
git add undo.c
git add ../../test/functional/lua/buffer_updates_spec.lua
git commit -m "fix(extmarks): splice extmarks on nv_Undo"
git push origin extmark_Undo
git checkout extmark_Undo
git checkout ../../.gitignore
git add api/vim.c
vim api/vim.c
git add edit.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u NORC fzy.lua
cd src
vim clint.py
python clint.py --help
vim src/clint.py
git rebase -i acd5e831b6294e54b12c09983bee3da89c0f183a
vim ts.lua
rm ts.lua
git diff option.c
git diff -w option.c
git config core.filemode false
git diff --cached option.c
git restore -s HEAD option.c
git restore --staged HEAD option.c
git restore --staged option.c
cd ../liane-bot
python3 liane_bot.py
vim runtime/optwin.vim
vim fold.c
cd data
mkdir exp3
cd exp3
mv ~/Downloads/CREDs_Bayes_button_exp_3_October+6,+2021_13.10.csv data.csv
cp ../exp2/process.py .
cp ../exp2/Untitled.ipynb .
pgrep nautilus
python3
cd runtime/src/nvim/auto
cd src/nvim/auto
vim lua_api_c_bindings.generated.c
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim
cd ...
sudo modprobe b
git commit --amend
cd runtime
vim api.txt
vim Makefile
make commitlint
TEST_FILE="test/functional/editor/completion_spec.lua" make test
TEST_FILE="test/functional/terminal/edit_spec.lua" make test
mv ~/Downloads/CREDs_Bayes_button_exp_3_October+7,+2021_09.51.csv data_tmp.csv
python3 -i process.py
ipython -i process.py
python -i process.py
cd ActionWords_Bayes
cd data/exp3
vim process.py
python3 -i models2.py
git branch virt_lines
git checkout virt_lines
vim todo
vim todo.md
mkdir lua
mkdir marks.nvim
mv marks.nvim marks
mkdir plugin
ls ..
ls ../lua
cd marks
vim ../../todo.md
vim -u NORC
vim commands.lua
rm commands.lua
vim models2.py
vim --startuptime tmp src/nvim/eval.c
vim --startuptime tmp1 eval.c
vi
vi -u NORC eval.c
vi --version
vi -u NORC
mkdir doc
mv doc ..
vim tags
rm options.lua
git init
git remote add
git remote set-url origin https://github.com/chentau/marks.nvim
git remote add origin
git remote add origin https://github.com/chentau/marks.nvim
git add doc
git add lua
git add plugin
git commit -m "first commit"
git statu
rm tags
rm todo.md
vim demo_file
git add lua/marks/mark.lua
git commit -m "remove print statement"
git statsu
git branch fix_alphabetical
git checkout fix_alphabetical
git commit -m "fix: correctly set lowest_available_mark"
git push origin fix_alphabetical
git checkout --orphan assets
rm -rf .
git rm -rf .
fd "demo.gif"
ls Videos
cd Videos
mv ~/Videos/marks-demo.gif .
git add marks-demo.gif
git commit -m "add introduction gif"
\:q
vim LICENSE
git rm doc/tags
git add LICENSE
git commit -m "add license, and remove tags file"
vim evalc.
la
git branch fixup
git checkout fixup
git commit -m "fix input handling, and minor refactors"
git push origin fixup
lcs
cd plugin
git branch -d fix_alphabetical
vim marks.vim
cd doc
vim marks-nvim.txt
git reset --soft HEAD~1
git branch plug_mappings
git checkout plug_mappings
git commit -m "feat: add <Plug> mappings"
git push origin plug_mappings
git restore --source HEAD -u
git restore --source HEAD .
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim fzy.lua
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*fuzzy completion" make test
make
sudo chown -R $USER .
rm log
cd build
vim log
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=1" build/bin/nvim fzy.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log UBSAN_OPTIONS="print_stacktrace=1:log_path=ubsan.log" build/bin/nvim fzy.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log UBSAN_OPTIONS=print_stacktrace=1 log_path=ubsan.log" build/bin/nvim fzy.lua
VIMRUNTIME=runtime NVIM_LOG_FILE=log UBSAN_OPTIONS="print_stacktrace=1 log_path=ubsan" build/bin/nvim fzy.lua
ls /
ls ~
ls -la ~
ls -la ~ | grep ubsan
export UBSAN_OPTIONS=print_stacktrace=1 log_path=ubsan
export UBSAN_OPTIONS="print_stacktrace=1 log_path=/home/tony/repos/neovim/ubsan"
pwd
echo $UBSAN_OPTIONS
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*fuzzy completion" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
vim ubsan.362608
vim ubsan.365018
vim ubsan.364946
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*returns 0" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*returns 1" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*sorts completions by score" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*works with scrolling" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*allows overriding the global" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
vim ubsan.367096
vim ubsan.367729
vim ubsan.368003
vim ubsan.368273
vim ubsan.369756
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim fzy.lua
export UBSAN_OPTIONS="print_stacktrace=1"
export UBSAN_OPTIONS="print_stacktrace=1:log_path=/home/tony/repos/neovim/ubsan"
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*allows overriding" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*can complete with" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
rm ubsan.*
TEST_FILE="test/functional/editor/completion_spec.lua" TEST_FILTER=".*can revert back" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
vim mark_group.lua
vim eval/funcs.c
ssh -p 22022 dromey
git branch -d plug_mappings
git branch bookmarks
git branch fixup_mappings
git checkout fixup_mappings
git commit -m "fix: add to readme, and improve mapping behavior"
git commit -m "tmp1"
git push origin fixup_mappings
git rebase -i HEAD~5
git rebase -i HEAD~4
git branch -d fixup
git push -f origin fixup_mappings
git branch -d fixup_mappings
git checkout bookmarks
ls lua/marks
mv bookmark.lua lua/marks
rm mark_group.lua
vim eval.c edit.c
git add lua/marks/bookmark.lua
git commit -m "feat: add bookmarks"
git commit -m "tmp"
git push origin bookmarks
git add -u
git commit -m "t"
git push -f origin bookmarks
git branch -d bookmarks
vim lua/marks/mark.lua
ls ~/Videos
git commit -m "fix deletion of multiple marks at a time"
vim ~/.zshrc
pgrep chrome
ps aux | grep chrome
pkill chrome
xdg-open marks-demo.gif
cd ../../../marks.nvim
cd neovim
git checkout assets
vim demo_file.c
peek
git restore --source HEAD README.md
git restore --source HEAD marks-demo.gif
git restore --staged marks-demo.gif
cp ~/Videos/demo.gif marks-demo.gif
cd ~/repos/marks.nvim
maim -s > demo_screenshot.png
maim > demo_screenshot.png
help maim
maim -i > demo_screenshot.png
man maim
maim -d 1 > demo_screenshot.png
feh demo_screenshot.png
ga demo_screenshot.png
git add demo_screenshot.png
git push origin assets
cd lua
source ~/.zshrc
git checkout fixup_init
vim 
cd ~/.config/nvim
rm init.fdb_latexmk
rm init.fls
rm init.log
rm init.aux
ls spell
ls UltiSnips
rm -rf UltiSnips
ls dictionaries
ls after
ls after/syntax
ls lua
rm -rf lua
vim init.vim
cd colors
vim wal.vim
ls foobar
rm -rf mpl
cat LICENSE
git fetch origin master
git rebase origin/master
git diff mark.lua
git branch refresh_marks
git checkout refresh_marks
git commit
git push origin refresh_marks
git push -f origin refresh_marks
git branch buf_attach
git checkout buf_attach
cd ../neovim
vim extmark.c
git push origin buffer_refresh
git add mark.lua
git add bookmark.lua
git push origin buf_attach
vim doc/marks-nvim.txt
git push -f origin buf_attach
git branch -d buf_attach
git branch -d refresh_marks
git branch sign_prio
git checkout sign_prio
git push origin sign_prio
rm ubsan.798164
vim ex_cmds.c
git push origin =f sign_prio
git push origin -f sign_prio
git checkout
git branch -d sign_prio
git stash list
git branch duplicate_bookmarks
cd repos/neovim/src/nvim
git checkout duplicate_bookmarks
git push origin duplicate_lines
git push origin duplicate_bookmarks
git push -f origin duplicate_bookmarks
git branch -d duplicate_bookmarks
tmux
vim ~/.config/i3/config
cd neovim/src/nvim
cd repo
vim src/nvim/eval.c
ls -la ~/.local/
ls ~/.local/share/
ls ~/.local/share/nvim
rg "INIT\(="
cp ~/.local/share/nvim/shada/main.shada tmp.shada
vim ~/.local/share/nvim/shada/main.shada
rg "vim_strequal"
rg "strequal"
sudo gdb -tui -p "$(pgrep "nvim" | tail -1)"
ls src/nvim
rm tmp1
vim --startuptime tmp eval.c
cat tmp | sort -k 2 | less
cat tmp | sort -k 2
cat tmp | sort -r -k 2
cat tmp | sort -r -k 2 | less
cd ../marks.nvim
vim --startuptime tmp
git diff --help
TEST_FILE="test/functional/shada/marks_spec.lua" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
git branch shada_delmarks
git add src/nvim/shada.c
git restore --staged
git reset
git stash
git log master..ins_completion_api
git cherry-pick 9bfb54b387f67cd3874a6b10ae0f9185390e7bd3
git stash pop
vim src/nvim/shada.c
rm Xmain.shada
rm tmp.shada
TEST_FILE="test/functional/shada/marks_spec.lua" TEST_FILTER=".*updates deleted" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
echo $EDITOR
ghs
git reset --hard ab1aa77832edecb9d510299cace694cf64a10169
git checkout shada_delmarks
git push origin shada_delmarks
maim -s | xclip -selection clipboard -t image/png
vim marks.c
xrandr --output eDP-1-1 --brightness .5
cd models
vim tmp.py
ipython
vim models.py
conda activate creds
python3 -i models.py
xrandr --output eDP-1-1 --brightness .75
rm tmp.lua
git diff --histogram
\:wq
git checkout use_api
git branch use_api && git checkout use_api
git push origin use_api
nv --version
rg "INIT"
rg " INIT "
rg " INIT"
git diff HEAD~
git branch -d use_api
vi 
ls ~/.config/spicetify
spicetify update
rm -rf ~/.config/spicetify
cd ~/.local/apps
rm -rf spicetify-cli
ls bin
rm bin/spicetify
sudo apt remove spotify-client
sl
jupyter lab
cd repos/moral-disengagement
cd pilot
cd assets
maim -s > st_hist.png
maim -s > sut_hist.png
maim -s > wt_hist.png
maim -s > wut_hist.png
vim bookmark.lua
p
git status ../website
cd website
cd ../moral-disengagement
vim ~/repos/neovim/src/nvim/edit.c
git branch toggle_signs
vim plugin/marks.vim
git restore --source HEAD plugin/marks.vim
vim lua
git push origin toggle_signs
vim screen.c
git branch unload_buffer
git push origin unload_buffer
dfsfsdfsdfsdf
ls\

showkey
sudo showkey
rm tmp
mv minimal.vim ~/.config/nvim
vim -u ~/.config/nvim/minimal.vim eval.c
vim -u NORC minimal.vim
vim -u NONE minimal.vim
vim -u NONE eval.c
ls ~/.local/share/nvim/shada
vim -u NORC eval.c
vim edit.c
git cherry-pick 0b020c821c6a3dfdfc6df3d5d062ab798c3b966c
git reset --hard origin/unload_buffer
vim tmp.lua
vim tmp
vim tmp1
git branch actions
git pull origin actions
vim .github/workflows/luacheck.yml
ls .git
git diff master
ls .github
git cherry-pick commit b6a7f0b11723465745927b154cc979d922abd009
git cherry-pick b6a7f0b11723465745927b154cc979d922abd009
git reset --hard origin/master
git checkout actions
git push -f origin actions
git branch -d actions
git branch lint
git checkout lint
vim .luacheckrc
git add .luacheckrc
git push origin lint
vim utils
vim utils.lua
vim *
git push -f origin lint
git branch -d lint
git checkout unload_buffer
git rebase HEAD~2
git rebase HEAD~
git push -f origin unload_buffer
git branch -d unload_buffer
vim mark.c
cd repos/neovim
rm core
cd repos/website
vim .gitignore
ls _site
rm -rf _site
P
setup
vim -u minimal.vim edit.c
vim minimal.vim
vim -u minimal.vim
rm minimal.vim
git status
git branch -D virt_lines
git branch -D virt_conceal
git branch -D pum_border
git pull base master
git branch -d extmark_Undo
git branch -D extmark_Undo
git branch -D cmdline_completion
git branch -D treesitter-leak
git branch -D winline_refactor
git reb
git branch -D cmdline_cols
git branch cmdline_col
git checkout cmdline_col
git checkout ins_completion_api
sudo apt install lazygit
git rebase --abort
conda install -c conda-forge lazygit
cd Downloads/
tar -xvzf lazygit_0.29_Linux_x86_64.tar.gz
cat README.md
rm README*
rm LICENSE
less OFL.txt
rm OFL.txt
mv lazygit ~/.local/bin
rm lazygit_0.29_Linux_x86_64.tar.gz
git add src/nvim
cd ~/.config
cd lazygit
cd .nv
cd .config/lazygit
vim config.yml
cd Downloads
fc-cache -f -v
kitty list-fonts
vim ~/.config/lazygit/config.yml
vim src/nvim/api/vim.c
git restore src/nvim/ex_cmds_defs.h
make lint
git push -f origin ins_completion_api
cd ../
git clone https://github.com/chentau/awesome-neovim.git
cd awesome-neovim
gc
git remote
git push origin main
vim README.md
cd ..
vim tmp.jl
vim ~/.config/kitty/kitty.conf
pavucontrol
rm -rf awesome-neovim
ls -la
cd marks.nvim
git branch
git checkout toggle_signs
git rebase master
vim lua/marks/init.lua
git rebase --continue
vim lua/marks/bookmark.lua
git diff
git rebase -i HEAD~3
ga
gtmp
git rebase -i HEAD~2
git log
git push -f origin toggle_signs
git checkout master
git pull origin master
git branch -d toggle_signs
cd ../..
ctags -R --file-scope=yes 
cd src/nvim
vim ex_docmd.c
cd ~/Downloads
mv Carto* ~/.fonts
cp ~/.config/nvim/minimal.vim .
vim init.lua
vim -u minimal.vim eval.c
lazygit
git push origin master
vim eval.c
CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
ls /proc/sys/kernel/yama
cat /proc/sys/kernel/yama/ptrace_scope
echo "0"|sudo tee /proc/sys/kernel/yama/ptrace_scope
VIMRUNTIME=runtime NVIM_LOG_FILE=log build/bin/nvim
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks:0" build/bin/nvim 
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
gs
VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim -u NORC
gdb -tui -p "$(pgrep "nvim" | tail -1)"
vo,
vim
rg "ex_move"
rg "do_move"
sudo modprobe -r brcmfmac
systemctl suspend
sudo modprobe brcmfmac
cd ../../..
mkdir live
cd live
fg
cp ~/Downloads/nvim.appimage ~/.local/bin
vim --version
nvim --versin
where nvim
~/.local/bin/nvim --version
cd ~/Desktop
ls ~/.local/bin
mv ~/.local/bin/nvim.appimage ~/.local/bin/nvim
chmod u+x ~/.local/bin/nvim
nvim --version
~/launch-fm > /dev/null 2>&1 &
vim norm.lua
pkill nvim
cd ~
pgrep nvim
htop
cd repos/marks.nvim
cd lua/marks
ls
vim mark.lua
tmux a -t 0
sudo shutdown
: 1635177164:0;tmux
: 1635177879:0;nmcli d
: 1635177884:0;ls ~/scripts
: 1635177938:0;xrandr --output eDP-1-1 --brightness .75
: 1635178261:0;setup
: 1635185244:0;tmux
: 1635185247:0;ls
: 1635185250:0;cd lua/marks
: 1635185251:0;cd repos
: 1635185252:0;ls
: 1635185466:0;xrandr --output eDP-1-1 --brightness .5
: 1635186334:0;vim
: 1635187346:0;ls
: 1635191565:0;xinput list-props
: 1635191567:0;xinput list
: 1635191585:0;xinput list-props 13
: 1635191624:0;xinput
: 1635191628:0;xinput --help
: 1635191634:0;xinput get-button-map 13
: 1635191661:0;xinput set-button-map 13 1 2 0 4 5 6 7
: 1635191707:0;xinput set-button-map 13 1 2 3 4 5 6 7
: 1635191728:0;xinput set-button-map 13 1 0 3 4 5 6 7
: 1635191737:0;vim ~/scripts/setup
: 1635191744:0;fg
: 1635191761:0;xinput get-button-map 13
: 1635191763:0;fg
: 1635192497:0;xrandr --output eDP-1-1 --brightness .75
: 1635192559:0;spicetify retore
: 1635192565:0;spicetify restore
: 1635192575:0;sudo apt uninstall spoify
: 1635192581:0;sudo apt remove spotify-client
: 1635192648:0;curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - \
echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list\

: 1635192659:0;sudo apt install spotify-client
: 1635193292:0;ls
: 1635193298:0;cd live
: 1635193299:0;ls
: 1635193303:0;vim norm.ua
: 1635193306:0;vim norm.lua
: 1635193763:0;maim -s | xclip -selection clipboard -t image/png
: 1635194827:0;cd ../marks.nvim
: 1635194828:0;gs
: 1635196598:0;systemctl suspend
: 1635196613:0;sudo modprobe -r brcmfmac
: 1635196618:0;systemctl suspend
: 1635210562:0;sudo modprobe brcmfmac
: 1635211175:0;~/launch-fm > /dev/null 2>&1 &
: 1635213669:0;setup
: 1635228226:0;sudo modprobe -r brcmfmac
: 1635228230:0;systemctl suspend
: 1635262061:0;ls
: 1635262063:0;vim
: 1635262235:0;sudo modprobe brcmfmac
: 1635273184:0;cd ../
: 1635273184:0;ls
: 1635273237:0;mv live multicursor
: 1635273239:0;cd multicursor
: 1635273240:0;ls
: 1635273243:0;vim todo.md
: 1635273815:0;~/launch-fm > /dev/null 2>&1 &
: 1635276414:0;vim todo.md
: 1635282476:0;ls
: 1635300370:0;~/launch-fm > /dev/null 2>&1 &
: 1635301876:0;sl
: 1635301877:0;ls
: 1635301879:0;vim todo.md
: 1635303098:0;~/launch-fm > /dev/null 2>&1 &
: 1635307226:0;cd ~/repos
: 1635307229:0;cd neovim/src/nvim
: 1635307231:0;vim minimal.vim
: 1635307244:0;ls
: 1635307247:0;vim minimal.vim
: 1635307283:0;vim -u minimal.vim
: 1635310620:0;vim todo.md
: 1635310637:0;vim
: 1635310815:0;ls
: 1635310817:0;vim norm.lua
: 1635312425:0;vim -u minimal.vim
: 1635312479:0;sudo modprobe -r brcmfmac
: 1635312558:0;systemctl suspend
: 1635347359:0;vim norm.lua
: 1635347639:0;sudo modprobe brcmfmac
: 1635348207:0;vim norm.lua
: 1635349919:0;vim state.c
: 1635349972:0;vim norm.lua
: 1635364622:0;cd repos/neovim
: 1635364624:0;cd ../
: 1635364629:0;cd neovim
: 1635364630:0;ls
: 1635364637:0;cp ../multicursor/norm.lua .
: 1635364647:0;VIMRUNTIME=runtime NVIM_LOG_FILE=log ASAN_OPTIONS="detect_leaks=0" build/bin/nvim norm.lua
: 1635364656:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1635364661:0;cat /proc/sys/kernel/yama/ptrace_scope
: 1635364664:0;echo "0"|sudo tee /proc/sys/kernel/yama/ptrace_scope
: 1635364670:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1635364768:0;~/launch-fm > /dev/null 2>&1 &
: 1635364979:0;cd ../
: 1635364982:0;cd neovim
: 1635364984:0;cd src/nvim
: 1635364985:0;vim state.c
: 1635366240:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1635370497:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim norm.lua
: 1635370580:0;~/launch-fm > /dev/null 2>&1 &
: 1635371244:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1635372392:0;ls
: 1635372393:0;cd ../..
: 1635372396:0;cd ../multicursor
: 1635372397:0;ls
: 1635372413:0;cp ~/repos/neovim/norm.lua .
: 1635372413:0;ls
: 1635372415:0;vim norm.lua
: 1635372458:0;ls
: 1635372459:0;fg
: 1635372852:0;cd ..
: 1635373300:0;cd multicursor
: 1635373300:0;ls
: 1635373302:0;vim norm.lua
: 1635374159:0;ls
: 1635374163:0;vim
: 1635374177:0;cd ..
: 1635374177:0;ls
: 1635395654:0;cd multicursor
: 1635395655:0;ls
: 1635396844:0;vim README.md
: 1635397250:0;ls
: 1635397251:0;cd ..
: 1635397255:0;mv multicursor live.nvim
: 1635397255:0;ls
: 1635397261:0;cd live.nvim
: 1635397261:0;ls
: 1635397266:0;vim norm.lua
: 1635397271:0;mkdir lua/live
: 1635397273:0;mkdir lua
: 1635397276:0;mkdir lua/live
: 1635397280:0;mv norm.lua lua/live/init.lua
: 1635397281:0;ls
: 1635397283:0;vim
: 1635397292:0;ls
: 1635397294:0;cd lua/live
: 1635397295:0;ls
: 1635397296:0;vim init.lua
: 1635397455:0;~/launch-fm > /dev/null 2>&1 &
: 1635397555:0;vim init.lua
: 1635402388:0;cd ../..
: 1635402390:0;vim README.md
: 1635402456:0;sudo modprobe -r brcmfmac
: 1635402461:0;systemctl suspend
: 1635437956:0;sudo modprobe brcmfmac
: 1635438205:0;ls
: 1635438206:0;cd ..
: 1635438636:0;cd moral-disengagement
: 1635438639:0;cd ../../..
: 1635438641:0;cd moral-disengagement
: 1635438647:0;conda activate creds
: 1635438650:0;jupyter lab
: 1635439195:0;ls
: 1635440546:0;pavucontrol
: 1635440578:0;setup
: 1635441409:0;cd data
: 1635441409:0;ls
: 1635441411:0;mkdir exp3
: 1635441417:0;cp ~/Downloads/Trust_Game_motivated_exp1+-+mturk_October+28,+2021_11.16.csv .
: 1635441417:0;ls
: 1635441424:0;mv Trust_Game_motivated_exp1+-+mturk_October+28,+2021_11.16.csv exp3/data.csv
: 1635441425:0;cd exp2
: 1635441428:0;cd ../exp3
: 1635441428:0;ls
: 1635441439:0;cp ../exp2/process.py .
: 1635441450:0;ls
: 1635441453:0;python3 -i process.py
: 1635441465:0;vim process.py
: 1635441522:0;python3 -i process.py
: 1635441528:0;fg
: 1635441535:0;python3 -i process.py
: 1635441541:0;fg
: 1635441556:0;python3 -i process.py
: 1635441572:0;fg
: 1635441852:0;python3 -i process.py
: 1635441863:0;fg
: 1635444347:0;xrandr --output eDP-1-1 --brightness .5
: 1635445596:0;vim
: 1635446417:0;sudo modprobe -r brcmfmac
: 1635446421:0;systemctl suspend
: 1635446952:0;sudo modprobe brcmfmac
: 1635447030:0;pavucontrol
: 1635448131:0;xrandr --output eDP-1-1 --brightness .75
: 1635448692:0;cd ~
: 1635448692:0;ls
: 1635448696:0;cd repos/marks.nvim
: 1635448696:0;ls
: 1635448698:0;gs
: 1635448702:0;ls
: 1635448705:0;vim plugin/marks.vim
: 1635451716:0;fg
: 1635456142:0;sudo modprobe -r brcmfmac
: 1635456146:0;systemctl suspend
: 1635466989:0;setup
: 1635467000:0;sudo modprobe brcmfmac
: 1635467023:0;~/launch-fm > /dev/null 2>&1 &
: 1635489435:0;sudo modprobe -r brcmfmac
: 1635489444:0;systemctl suspend
: 1635524928:0;sudo modprobe -r brcmfmac
: 1635524941:0;sudo modprobe brcmfmac
: 1635524968:0;qbittorrent
: 1635524974:0;ls
: 1635527643:0;nv --version
: 1635529647:0;ls
: 1635529650:0;gs
: 1635532305:0;~/launch-fm > /dev/null 2>&1 &
: 1635547030:0;ls
: 1635547033:0;vim
: 1635547333:0;ls
: 1635547335:0;vim models.py
: 1635547862:0;vim README.md
: 1635547966:0;gs
: 1635547970:0;lazygit
: 1635548023:0;gs
: 1635548038:0;git log
: 1635548043:0;git reset origin/master
: 1635548044:0;gs
: 1635548058:0;git checkout quickfix
: 1635548064:0;git branch quickfix
: 1635548066:0;git checkout quickfix
: 1635548067:0;gs
: 1635548068:0;ga
: 1635548069:0;gc
: 1635548077:0;gs
: 1635548080:0;git push origin quickfix
: 1635551928:0;~/launch-fm > /dev/null 2>&1 &
: 1635555393:0;ls
: 1635555401:0;cd ..
: 1635555404:0;cd neovim/src/nvim
: 1635555405:0;vim state.c
: 1635567024:0;~/launch-fm > /dev/null 2>&1 &
: 1635577830:0;sudo modprobe -r brcmfmac
: 1635577835:0;systemctl suspend
: 1635627102:0;sudo modprobe brcmfmac
: 1635627314:0;~/launch-fm > /dev/null 2>&1 &
: 1635627844:0;jupyter lab
: 1635628394:0;cd ../../..
: 1635628396:0;cd moral-disengagement
: 1635628397:0;ls
: 1635628400:0;vim models.py
: 1635628874:0;ls
: 1635628928:0;python3 -i models.py
: 1635634529:0;jupyter lab
: 1635638807:0;~/launch-fm > /dev/null 2>&1 &
: 1635647086:0;ls
: 1635647097:0;python3 -i models.py
: 1635647514:0;cd data
: 1635647514:0;ls
: 1635647516:0;cd exp3
: 1635647516:0;ls
: 1635647519:0;rm data.csv
: 1635647535:0;cp ~/Downloads/Trust_Game_motivated_exp1+-+mturk_October+30,+2021_20.31.csv data.csv
: 1635647538:0;cd data/exp3
: 1635647543:0;vim process.py
: 1635647593:0;python3 -i process.py
: 1635648396:0;ls
: 1635648400:0;cp cleaned.csv for_analysis.csv
: 1635648404:0;cd ../..
: 1635648408:0;vim models.py
: 1635648410:0;cd ../..
: 1635648417:0;python3 -i models.py
: 1635655652:0;ls
: 1635655675:0;rm tmp.csv
: 1635655678:0;fg
: 1635655687:0;python3 -i models.py
: 1635660271:0;ls
: 1635660273:0;vim models.jl
: 1635660290:0;vim models/hgf.jl
: 1635660293:0;cd models
: 1635660297:0;cd ..
: 1635660316:0;julia --project=. -i models/hgf.jl
: 1635660434:0;cd ..
: 1635660436:0;cd moral-disengagement
: 1635663985:0;sudo modprobe -r brcmfmac
: 1635663989:0;systemctl suspend
: 1635704676:0;sudo modprobe brcmfmac
: 1635709018:0;~/launch-fm > /dev/null 2>&1 &
: 1635713355:0;vim
: 1635713358:0;vim models.py
: 1635713398:0;cd repos/marks.nvim
: 1635713399:0;ls
: 1635713399:0;gs
: 1635713401:0;git checkout master
: 1635713404:0;git pull origin master
: 1635713408:0;git branch -d quickfix
: 1635713409:0;gs
: 1635713540:0;ls
: 1635713543:0;vim models.py
: 1635713566:0;python3 -i models.py
: 1635728440:0;~/launch-fm > /dev/null 2>&1 &
: 1635741162:0;vim ~/.config/kitty/kitty.conf
: 1635741174:0;kitty list-fonts
: 1635741181:0;qfg
: 1635741182:0;fg
: 1635753104:0;sudo modprobe -r brcmfmac
: 1635753108:0;systemctl suspend
: 1635780123:0;sudo modprobe brcmfmac
: 1635782367:0;sudo modprobe -r brcmfmac
: 1635782371:0;systemctl suspend
: 1635786252:0;sudo modprobe brcmfmac
: 1635786314:0;pavucontrol
: 1635793348:0;ls
: 1635793456:0;vim
: 1635793477:0;ls
: 1635793480:0;vim models.py
: 1635803338:0;sudo modprobe -r brcmfmac
: 1635803349:0;systemctl suspend
: 1635812669:0;sudo modprobe brcmfmac
: 1635812731:0;setup
: 1635813531:0;~/launch-fm > /dev/null 2>&1 &
: 1635835767:0;sudo modprobe -r brcmfmac
: 1635835785:0;systemctl suspend
: 1635858420:0;xrandr --output eDP-1-1 --brightness .25
: 1635858445:0;systemctl suspend
: 1635864800:0;cd ../marks.nvim
: 1635864804:0;xrandr --output eDP-1-1 --brightness .5
: 1635864806:0;ls
: 1635864808:0;cd lua
: 1635864811:0;cd marks
: 1635864811:0;ls
: 1635864812:0;vim init.lua
: 1635864903:0;systemctl suspend
: 1635910921:0;setup
: 1635910926:0;xrandr --output eDP-1-1 --brightness .75
: 1635910932:0;sudo modprobe brcmfmac
: 1635911266:0;~/launch-fm > /dev/null 2>&1 &
: 1635924009:0;sudo modprobe -r brcmfmac
: 1635924014:0;systemctl suspend
: 1635991638:0;~/launch-fm > /dev/null 2>&1 &
: 1636009476:0;systemctl suspend
: 1636039465:0;node
: 1636039490:0;ls
: 1636039500:0;systemctl suspend
: 1636043608:0;sudo modprobe brcmfmac
: 1636043857:0;cd ../../..
: 1636043860:0;cd moral-disengagement
: 1636043863:0;ls
: 1636043864:0;jupyter lab
: 1636043866:0;ls
: 1636044183:0;setup
: 1636046668:0;ls
: 1636053227:0;xrandr --output eDP-1-1 --brightness .5
: 1636053232:0;vim ~/.todo.md
: 1636053234:0;fg
: 1636054800:0;sudo modprobe -r brcmfmac
: 1636054805:0;systemctl suspend
: 1636056482:0;sudo modprobe brcmfmac
: 1636057015:0;xrandr --output eDP-1-1 --brightness .75
: 1636059171:0;ls
: 1636059173:0;cd lua/marks
: 1636059174:0;ls
: 1636059176:0;vim init.lua
: 1636059195:0;vi lua/marks/
: 1636059209:0;fg
: 1636059228:0;vim ~/.config/nvim/init.vim
: 1636059237:0;vi
: 1636059256:0;vi mark.lua
: 1636059314:0;vim
: 1636059423:0;gs
: 1636059425:0;ga
: 1636059427:0;gc
: 1636059442:0;gs
: 1636059449:0;git reset origin/master
: 1636059450:0;gs
: 1636059455:0;git branch fts
: 1636059459:0;git checkout fts
: 1636059460:0;ls
: 1636059462:0;git status
: 1636059467:0;lazygit
: 1636060837:0;ls
: 1636060838:0;vim
: 1636060853:0;vim ~/.config/kitty/kitty.conf
: 1636060881:0;ls
: 1636060886:0;tmux a -t 0
: 1636060887:0;ls
: 1636060901:0;tmux ls
: 1636060905:0;tmux a -t 1
: 1636060915:0;vim marks.lua
: 1636060918:0;vim init.lua
: 1636060952:0;ls
: 1636060961:0;sudo modprobe -r brcmfmac
: 1636060967:0;systemctl suspend
: 1636070148:0;sudo modprobe brcmfmac
: 1636070266:0;~/launch-fm > /dev/null 2>&1 &
: 1636080700:0;du -sh .
: 1636081917:0;setup
: 1636086680:0;cd ../live.nvim
: 1636086680:0;ls
: 1636086682:0;gs
: 1636086683:0;git init
: 1636086684:0;gs
: 1636086690:0;vim README.md
: 1636086703:0;gs
: 1636088207:0;~/launch-fm > /dev/null 2>&1 &
: 1636089778:0;cd ../..
: 1636089782:0;cd ../live.nvim
: 1636089783:0;ls
: 1636089786:0;gs
: 1636089801:0;git remote add origin https://github.com/chentau/live.nvim
: 1636089802:0;gs
: 1636089805:0;git pull origin master
: 1636089808:0;gs
: 1636089811:0;ls
: 1636089813:0;vim LICENSE
: 1636089835:0;ls
: 1636089840:0;vim
: 1636089874:0;ls
: 1636089875:0;gs
: 1636089879:0;vim
: 1636089904:0;gs
: 1636089911:0;vim todo.md
: 1636089917:0;git add README.md
: 1636089919:0;git add lua
: 1636089920:0;gs
: 1636089926:0;git commit -m "initial commit"
: 1636089928:0;git push origin master
: 1636090006:0;vim
: 1636091659:0;sudo modprobe -r brcmfmac 
: 1636091663:0;systemctl suspend
: 1636133516:0;sudo modprobe brcmfmac 
: 1636133526:0;cd ../
: 1636133526:0;ls
: 1636133528:0;vim 
: 1636133533:0;ls
: 1636133535:0;mkdir tmp
: 1636133536:0;cd tmp
: 1636133536:0;ls
: 1636133555:0;sudo apt search lua
: 1636133562:0;du -sh .
: 1636133581:0;sudo apt install lua5.1
: 1636133592:0;sudo apt search luarocks
: 1636135839:0;~/launch-fm > /dev/null 2>&1 &
: 1636160582:0;cd ~/Downloads
: 1636160583:0;ls
: 1636160591:0;rm nvim.appimage
: 1636160599:0;cd dune
: 1636160600:0;ls
: 1636160601:0;cd ..
: 1636160603:0;rm -rf dune
: 1636160604:0;ls
: 1636160607:0;zathura Malazan_-_Book_of_the_Fallen_01-10_-_The_Complete_Malazan_Book_of_the_Fallen_-_Steven_Erikson_retail__epub.epub
: 1636160613:0;rm Malazan_-_Book_of_the_Fallen_01-10_-_The_Complete_Malazan_Book_of_the_Fallen_-_Steven_Erikson_retail__epub.epub
: 1636160633:0;ls
: 1636160636:0;zathura Summary\ of\ Employee\ Benefits\ 2020.pdf
: 1636160640:0;zathura Steven\ Erikson\ -\ The\ Complete\ Malazan\ Book\ of\ the\ Fallen\ \(Omnibus\)\ \(v5.0\)\ \(epub\).epub
: 1636160987:0;sudo apt install mupdf
: 1636161013:0;sudo apt search zathura-pdf
: 1636161061:0;uname -a
: 1636161066:0;lsb_release -a
: 1636161072:0;sudo add-apt-repository ppa:spvkgn/zathura-mupdf~
: 1636161077:0;sudo add-apt-repository ppa:spvkgn/zathura-mupdf
: 1636161104:0;sudo apt install zathura-pdf-mupdf
: 1636161128:0;ls
: 1636161132:0;zathura Steven\ Erikson\ -\ The\ Complete\ Malazan\ Book\ of\ the\ Fallen\ \(Omnibus\)\ \(v5.0\)\ \(epub\).epub
: 1636161144:0;cd ~/Downloads
: 1636161144:0;ls
: 1636161147:0;zathura Steven\ Erikson\ -\ The\ Complete\ Malazan\ Book\ of\ the\ Fallen\ \(Omnibus\)\ \(v5.0\)\ \(epub\).epub
: 1636163132:0;ls
: 1636163134:0;rm Steven\ Erikson\ -\ The\ Complete\ Malazan\ Book\ of\ the\ Fallen\ \(Omnibus\)\ \(v5.0\)\ \(epub\).epub
: 1636163135:0;ls
: 1636163153:0;~/launch-fm > /dev/null 2>&1 &
: 1636164657:0;ls
: 1636170781:0;cd ~
: 1636170782:0;gs
: 1636170783:0;ls
: 1636170784:0;cd repos
: 1636170785:0;ls
: 1636170786:0;cd tmp
: 1636170786:0;ls
: 1636170789:0;vim todo.md
: 1636171939:0;vim
: 1636171959:0;cd ../neovim
: 1636171962:0;cd src/nvim
: 1636171962:0;ls
: 1636171974:0;vim ex_cmds.c
: 1636172147:0;cd ..
: 1636172149:0;cd neovim
: 1636172149:0;ls
: 1636172154:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636172163:0;cd repos/neovim
: 1636172166:0;echo "0"|sudo tee /proc/sys/kernel/yama/ptrace_scope
: 1636172169:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636174233:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636174671:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636174766:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636174770:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636174774:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636174947:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636174952:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636174957:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636174981:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636175088:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636175093:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636175147:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636175152:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636175348:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636175353:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636175426:0;sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER="join" make functionaltest
: 1636175752:0;make lint
: 1636175757:0;sudo make lint
: 1636175770:0;gs
: 1636175775:0;git pull base master
: 1636175781:0;git stash
: 1636175783:0;git pull base master
: 1636175787:0;git stash pop
: 1636175798:0;gs
: 1636175814:0;git branch buffer_state_join
: 1636175822:0;git checkout buffer_state_join
: 1636175823:0;gs
: 1636175826:0;sudo make lint
: 1636176585:0;fg
: 1636176586:0;gs
: 1636176589:0;vim ops.c
: 1636176663:0;sudo make lint
: 1636176668:0;sudo make distclean
: 1636176674:0;sudo make lint
: 1636176839:0;gs
: 1636176843:0;lazygit
: 1636176953:0;gs
: 1636176954:0;fg
: 1636176955:0;vim
: 1636177275:0;vim ops.c
: 1636179932:0;sudo modprobe brcmfmac 
: 1636179942:0;systemctl suspend
: 1636220639:0;sudo modprobe brcmfmac 
: 1636220707:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636220710:0;ls
: 1636220713:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636220719:0;sudo chmod -R u+wrx build/
: 1636220723:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636220736:0;sudo chown -R $USER build
: 1636220738:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636220748:0;sudo chmod -R u+wrx .deps
: 1636220750:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636220755:0;sudo chown -R $USER deps
: 1636220758:0;sudo chown -R $USER .deps
: 1636220759:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636221177:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636221192:0;vim
: 1636221203:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636222722:0;cd ../marks.nvim
: 1636222723:0;ls
: 1636222725:0;vim README.md
: 1636223003:0;cd lua/marks
: 1636223003:0;ls
: 1636223007:0;vim mark.lua
: 1636223377:0;vim models.py
: 1636223406:0;vim tmp.txt
: 1636223423:0;ls
: 1636223490:0;fg
: 1636223500:0;vim tmp.txt
: 1636223522:0;ls
: 1636223532:0;vim tmp.txt
: 1636223816:0;vim eval.c
: 1636223820:0;vim models.py
: 1636224612:0;gs
: 1636224613:0;git diff
: 1636224677:0;vim init.lua
: 1636224696:0;gs
: 1636224697:0;ga
: 1636224701:0;gtmp
: 1636224705:0;git rebase -i HEAD~2
: 1636224714:0;gs
: 1636224716:0;lazygit
: 1636232324:0;~/launch-fm > /dev/null 2>&1 &
: 1636233472:0;ls
: 1636233475:0;vim tmp.lua
: 1636233486:0;ls
: 1636234337:0;~/launch-fm > /dev/null 2>&1 &
: 1636238914:0;ls
: 1636238916:0;cd ..
: 1636238918:0;ls
: 1636239235:0;vim ops.c
: 1636239291:0;gs
: 1636239294:0;fg
: 1636239296:0;gs
: 1636239297:0;lazygit
: 1636239361:0;fg
: 1636239595:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636239632:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636239656:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636239660:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636239718:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636239722:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636239776:0;gdb
: 1636239779:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636240053:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248046:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636248103:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248106:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636248143:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248146:0;gdb -tui -p "$(pgrep "nvim" | tail -1)"
: 1636248221:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636248227:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248277:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636248281:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248380:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636248384:0;VIMRUNTIME=runtime ASAN_OPTIONS="detect_leaks=0" build/bin/nvim 
: 1636248442:0;CC=clang make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON"
: 1636248485:0;TEST_FILE="test/functional/shada/marks_spec.lua" TEST_FILTER=".*updates deleted" make CMAKE_EXTRA_FLAGS="-DCLANG_ASAN_UBSAN=ON" test
: 1636248513:0;sudo TEST_FILE="test/functional/lua/buffer_updates_spec.lua" TEST_FILTER="join" make functionaltest
: 1636248761:0;sudo make lint
: 1636248783:0;lazygit
: 1636248795:0;git rebase -i HEAD~2
: 1636248836:0;gs
: 1636248846:0;git push origin buffer_state_join
: 1636250013:0;ls
: 1636250016:0;vim ~/.tmux.conf
: 1636250068:0;cd ../
: 1636250072:0;cd .local/apps
: 1636250077:0;mv ~/Downloads/.tmux tmux
: 1636250077:0;ls
: 1636250079:0;cd tmux
: 1636250079:0;ls
: 1636250083:0;cd ..
: 1636250085:0;ls
: 1636250086:0;cd share
: 1636250086:0;ls
: 1636250094:0;mv ../apps/tmux .
: 1636250097:0;cd ../..
: 1636250099:0;vim .tmux.conf
: 1636250134:0;tmux
: 1636250450:0;cd Downloads
: 1636251073:0;zathura Academic_CV.pdf
: 1636251091:0;mv Academic_CV.pdf ~/Documents/misc
: 1636251092:0;ls
: 1636257581:0;~/launch-fm > /dev/null 2>&1 &
: 1636263174:0;~
: 1636263177:0;~/launch-fm > /dev/null 2>&1 &
: 1636267529:0;sudo modprobe =r brcmfmac
: 1636267533:0;sudo modprobe -r brcmfmac
: 1636267537:0;systemctl suspend
: 1636320090:0;sudo modprobe brcmfmac 
: 1636320870:0;~/launch-fm > /dev/null 2>&1 &
: 1636320933:0;cd ~/.config
: 1636320933:0;ls
: 1636320942:0;ls -la
: 1636320984:0;cd ~/.config
: 1636320985:0;,s
: 1636320986:0;ls
: 1636320987:0;ls -la
: 1636321036:0;cd ..
: 1636321036:0;ls
: 1636321038:0;mkdir .dotfiles
: 1636321039:0;ls
: 1636321041:0;cd .dotfiles
: 1636321041:0;ls
: 1636321042:0;cd ..
: 1636321043:0;ls -la
: 1636321057:0;cd .dotfiles
: 1636321057:0;ls
: 1636321064:0;cp ~/.config/tmux .
: 1636321067:0;cp -r ~/.config/tmux .
: 1636321068:0;ls
: 1636321071:0;cp -r ~/.config/nvim .
: 1636321072:0;ls
: 1636321076:0;cp -r ~/.config/kitty .
: 1636321079:0;cp -r ~/.config/polybar .
: 1636321080:0;ls
: 1636321116:0;cp -r ~/.config/wal .
: 1636321116:0;ls
: 1636321123:0;cp -r ~/.config/zathura .
: 1636321130:0;cp -r ~/.config/i3 .
: 1636321140:0;cp -r ~/.config/rofi .
: 1636321141:0;ls
: 1636321224:0;cp ~/.zsh* .
